{"version":3,"sources":["webpack:///src/app/admin/admin-storage/components/admin-storage/admin-storage.component.ts","webpack:///src/app/admin/admin-storage/components/admin-storage/admin-storage.component.html","webpack:///src/app/admin/admin-auth/admin-auth.module.ts","webpack:///src/app/admin/admin-dashboard/admin-dashboard.module.ts","webpack:///src/app/admin/shared/classes/auth.guard.ts","webpack:///src/app/admin/admin-promo/components/admin-promo-categories/admin-promo-categories.component.ts","webpack:///src/app/admin/admin-promo/components/admin-promo-categories/admin-promo-categories.component.html","webpack:///src/app/admin/admin-categories/components/admin-categories-form/admin-categories-form.component.ts","webpack:///src/app/admin/admin-categories/components/admin-categories-form/admin-categories-form.component.html","webpack:///src/app/admin/admin-promo/components/admin-promo-positions/admin-promo-positions.component.ts","webpack:///src/app/admin/admin-promo/components/admin-promo-positions/admin-promo-positions.component.html","webpack:///src/app/admin/shared/layouts/admin-layout/admin-layout.component.ts","webpack:///src/app/admin/shared/layouts/admin-layout/admin-layout.component.html","webpack:///src/app/admin/admin-storage/services/admin-storage.service.ts","webpack:///src/app/admin/admin-promo/services/admin-promo-positions.service.ts","webpack:///src/app/admin/admin-categories/components/admin-positions/admin-positions.component.ts","webpack:///src/app/admin/admin-categories/components/admin-positions/admin-positions.component.html","webpack:///src/app/admin/admin-auth/components/admin-register/admin-register.component.ts","webpack:///src/app/admin/admin-auth/components/admin-register/admin-register.component.html","webpack:///src/app/admin/admin-categories/components/admin-categories/admin-categories.component.ts","webpack:///src/app/admin/admin-categories/components/admin-categories/admin-categories.component.html","webpack:///src/app/admin/admin-dashboard/components/admin-dashboard-page/admin-dashboard.component.ts","webpack:///src/app/admin/admin-dashboard/components/admin-dashboard-page/admin-dashboard.component.html","webpack:///src/app/admin/admin-promo/services/admin-promo-categories.service.ts","webpack:///src/app/admin/admin-storage/admin-storage.module.ts","webpack:///src/app/admin/shared/layouts/admin-login-layout/admin-login-layout.component.ts","webpack:///src/app/admin/shared/layouts/admin-login-layout/admin-login-layout.component.html","webpack:///src/app/admin/admin-orders/components/admin-orders-position/admin-orders-position.component.ts","webpack:///src/app/admin/admin-orders/components/admin-orders-position/admin-orders-position.component.html","webpack:///src/app/admin/admin-auth/components/admin-login/admin-login.component.ts","webpack:///src/app/admin/admin-auth/components/admin-login/admin-login.component.html","webpack:///src/app/admin/shared/admin.constants/admin.constants.enum.ts","webpack:///src/app/admin/admin-categories/services/admin-positions.service.ts","webpack:///src/app/admin/admin.module.ts","webpack:///src/app/admin/admin-orders/services/admin-orders.service.ts","webpack:///src/app/admin/admin-orders/admin-orders.module.ts","webpack:///src/app/admin/admin-categories/services/admin-categories.service.ts","webpack:///src/app/admin/admin-promo/admin-promo.module.ts","webpack:///src/app/admin/admin-orders/components/admin-orders/admin-orders.component.ts","webpack:///src/app/admin/admin-orders/components/admin-orders/admin-orders.component.html","webpack:///src/app/admin/admin-promo/components/admin-promo-categories-form/admin-promo-categories-form.component.ts","webpack:///src/app/admin/admin-promo/components/admin-promo-categories-form/admin-promo-categories-form.component.html","webpack:///src/app/admin/admin-categories/admin-categories.module.ts","webpack:///src/app/admin/admin-storage/components/admin-storage-form/admin-storage-form.component.ts","webpack:///src/app/admin/admin-storage/components/admin-storage-form/admin-storage-form.component.html"],"names":["AdminStorageComponent","storageService","storageCategories$","fetchCategories","selector","templateUrl","styleUrls","routes","path","component","children","redirectTo","pathMatch","canActivate","AdminAuthModule","forChild","declarations","imports","AdminDashboardModule","AuthGuard","auth","router","route","state","isAuthAdmin","navigate","queryParams","accessDenied","providedIn","AdminPromoCategoriesComponent","promoCategoriesService","categories$","fetch","AdminCategoriesFormComponent","categoriesService","isNew","form","name","required","disable","params","pipe","getById","subscribe","category","patchValue","updateTextInputs","enable","error","toast","message","categorySub$","unsubscribe","controls","obs$","create","value","update","_id","decision","window","confirm","response","onSubmit","AdminPromoPositionsComponent","promoPositionsService","promoPositions","positionId","loading","positionSub$","fetchByCategory","categoryId","positions","event","position","newPosition","cost","description","quantity","inputCost","promoCost","brand","imageSrc","groupPages","stopPropagation","updateToMain","reloadCurrentPage","currentUrl","url","navigateByUrl","skipLocationChange","then","AdminLayoutComponent","links","categoriesUrl","categories","promoUrl","promo","storageUrl","storage","ordersUrl","orders","initializeFloatingButton","floatingRef","preventDefault","logout","styles","AdminStorageService","http","get","id","AdminPromoPositionsService","filter","p","patch","AdminPositionsComponent","positionsService","imagePreview","imageFiles","min","completed","modal","close","resetForm","destroy","addSub$","initModal","modalRef","inputRef","nativeElement","click","file","target","files","image","reader","FileReader","onload","result","readAsDataURL","open","reset","idx","findIndex","splice","push","console","log","updateToPromo","onAddPosition","onFileUpload","onCancel","AdminRegisterComponent","email","minLength","password","aSub","register","registered","AdminCategoriesComponent","AdminDashboardComponent","AdminPromoCategoriesService","AdminStorageModule","AdminLoginLayoutComponent","AdminOrdersPositionComponent","ordersService","main","order","selectedOrder","o","closeModal","AdminLoginComponent","login","AdminMenuEnum","AdminMenuUrlEnum","MenuEnum","AdminPaginationStep","AdminPositionsService","fd","FormData","append","String","post","AdminModule","exports","AdminOrdersService","AdminOrdersModule","AdminCategoriesService","categoryName","AdminPromoModule","AdminOrdersComponent","ordersSub$","fetchOrders","AdminPromoCategoriesFormComponent","cSub$","AdminCategoriesModule","AdminStorageFormComponent","storagePositions","fetchPositions","getCategoryById","storageCategory"],"mappings":"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","file":"admin-admin-module-es5.js","sourcesContent":["import {\n  Component,\n  OnInit,\n} from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\nimport { AdminStorageService } from '../../services/admin-storage.service';\nimport { StorageCategoryInterface } from '../../types/admin-storage.interface';\n\n@Component({\n  selector: 'app-admin-storage',\n  templateUrl: './admin-storage.component.html',\n  styleUrls: ['./admin-storage.component.css'],\n})\nexport class AdminStorageComponent implements OnInit {\n  storageCategories$: Observable<StorageCategoryInterface[]> | undefined;\n\n  constructor(private storageService: AdminStorageService) {}\n\n  ngOnInit(): void {\n    this.storageCategories$ = this.storageService.fetchCategories();\n  }\n}\n","<div class=\"page-title\">\n    <h5>Категории</h5>\n</div>\n\n<div class=\"row\" *ngIf=\"storageCategories$ | async as categories; else loader\">\n    <div class=\"col s12 \">\n        <div class=\"collection \" *ngIf=\"categories.length !== 0; else empty\">\n            <a *ngFor=\"let category of categories\" [routerLink]=\"['/admin/storage', category._id]\" class=\"collection-item\">\n                {{category.name}}\n            </a>\n        </div>\n        <ng-template #empty>\n            <div class=\"center\">\n                У вас нет ни одной категории\n            </div>\n        </ng-template>\n    </div>\n</div>\n\n<ng-template #loader>\n    <app-loader></app-loader>\n</ng-template>","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  FormsModule,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport {\n  RouterModule,\n  Routes,\n} from '@angular/router';\n\nimport { AuthGuard } from '../shared/classes/auth.guard';\nimport {\n  AdminLayoutComponent,\n} from '../shared/layouts/admin-layout/admin-layout.component';\nimport {\n  AdminLoginLayoutComponent,\n} from '../shared/layouts/admin-login-layout/admin-login-layout.component';\nimport {\n  AdminLoginComponent,\n} from './components/admin-login/admin-login.component';\nimport {\n  AdminRegisterComponent,\n} from './components/admin-register/admin-register.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AdminLoginLayoutComponent,\n    children: [\n      { path: '', redirectTo: '/admin/login', pathMatch: 'full' },\n      { path: 'login', component: AdminLoginComponent },\n    ],\n  },\n  {\n    path: '',\n    component: AdminLayoutComponent,\n    canActivate: [AuthGuard],\n    children: [{ path: 'register', component: AdminRegisterComponent }],\n  },\n];\n\n@NgModule({\n  declarations: [AdminLoginComponent, AdminRegisterComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    ReactiveFormsModule,\n    FormsModule,\n  ],\n})\nexport class AdminAuthModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  RouterModule,\n  Routes,\n} from '@angular/router';\n\nimport { AuthGuard } from '../shared/classes/auth.guard';\nimport {\n  AdminLayoutComponent,\n} from '../shared/layouts/admin-layout/admin-layout.component';\nimport {\n  AdminDashboardComponent,\n} from './components/admin-dashboard-page/admin-dashboard.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AdminLayoutComponent,\n    canActivate: [AuthGuard],\n    children: [{ path: 'dashboard', component: AdminDashboardComponent }],\n  },\n];\n\n@NgModule({\n  declarations: [AdminDashboardComponent],\n  imports: [CommonModule, RouterModule.forChild(routes)],\n})\nexport class AdminDashboardModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  CanActivateChild,\n  Router,\n  RouterStateSnapshot,\n} from '@angular/router';\n\nimport {\n  Observable,\n  of,\n} from 'rxjs';\n\nimport { AdminAuthService } from '../../admin-auth/services/admin-auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate, CanActivateChild {\n  constructor(private auth: AdminAuthService, private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> {\n    if (this.auth.isAuthAdmin()) {\n      return of(true);\n    } else {\n      this.router.navigate(['/admin/login'], {\n        queryParams: {\n          accessDenied: true,\n        },\n      });\n      return of(false);\n    }\n  }\n  canActivateChild(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> {\n    return this.canActivate(route, state);\n  }\n}\n","import {\n  Component,\n  OnInit,\n} from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\nimport {\n  AdminPromoCategoriesService,\n} from '../../services/admin-promo-categories.service';\nimport {\n  AdminPromoCategoryInterface,\n} from '../../types/admin-promo-category.interface';\n\n@Component({\n  selector: 'app-admin-promo-categories',\n  templateUrl: './admin-promo-categories.component.html',\n  styleUrls: ['./admin-promo-categories.component.css'],\n})\nexport class AdminPromoCategoriesComponent implements OnInit {\n  categories$: Observable<AdminPromoCategoryInterface[]> | undefined;\n\n  constructor(private promoCategoriesService: AdminPromoCategoriesService) {}\n\n  ngOnInit(): void {\n    this.categories$ = this.promoCategoriesService.fetch();\n  }\n}\n","<div class=\"page-title\">\n    <h5> Категории</h5>\n</div>\n<ng-container>\n    <div class=\"row\" *ngIf=\"categories$ | async as categories; else loader\">\n        <div class=\"col s12 \">\n            <div class=\"collection\" *ngIf=\"categories.length !== 0; else empty\">\n                <a *ngFor=\"let category of categories\" [routerLink]=\"['/admin/promo', category._id]\" class=\"collection-item\">\n                    {{category.name}}\n                </a>\n            </div>\n            <ng-template #empty>\n                <div class=\"center\">\n                    У вас нет ни одной категории\n                </div>\n            </ng-template>\n        </div>\n    </div>\n\n    <ng-template #loader>\n        <app-loader></app-loader>\n    </ng-template>\n</ng-container>","import {\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport {\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport {\n  ActivatedRoute,\n  Params,\n  Router,\n} from '@angular/router';\n\nimport {\n  of,\n  Subscription,\n} from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { MaterialService } from 'src/app/shared/classes/material.service';\n\nimport {\n  AdminCategoriesService,\n} from '../../services/admin-categories.service';\nimport { AdminCategoryInterface } from '../../types/admin-categories.interface';\n\n@Component({\n  selector: 'app-admin-categories-form',\n  templateUrl: './admin-categories-form.component.html',\n  styleUrls: ['./admin-categories-form.component.css'],\n})\nexport class AdminCategoriesFormComponent implements OnInit, OnDestroy {\n  isNew = true;\n  category!: AdminCategoryInterface;\n  form = new FormGroup({\n    name: new FormControl('', Validators.required),\n  });\n  categorySub$: Subscription | undefined;\n\n  constructor(\n    private route: ActivatedRoute,\n    private categoriesService: AdminCategoriesService,\n    private router: Router\n  ) {}\n  ngOnInit(): void {\n    this.form.disable();\n    this.route.params\n      .pipe(\n        switchMap((params: Params) => {\n          if (params['id']) {\n            this.isNew = false;\n            return this.categoriesService.getById(params['id']);\n          }\n          return of(null);\n        })\n      )\n      .subscribe(\n        (category) => {\n          if (category) {\n            this.category = category;\n            this.form.patchValue({\n              name: category.name,\n            });\n            MaterialService.updateTextInputs();\n          }\n          this.form.enable();\n        },\n        (error) => MaterialService.toast(error.error.message)\n      );\n  }\n\n  ngOnDestroy(): void {\n    this.categorySub$?.unsubscribe();\n  }\n\n  get f() {\n    return this.form.controls;\n  }\n  onSubmit() {\n    let obs$;\n    this.form.disable();\n    if (this.isNew) {\n      obs$ = this.categoriesService.create(this.form.value);\n    } else {\n      obs$ = this.categoriesService.update(this.category._id, this.form.value);\n    }\n\n    this.categorySub$ = obs$.subscribe(\n      (category) => {\n        this.category = category;\n        MaterialService.toast('Сохранено!');\n        this.form.enable();\n      },\n      (error) => {\n        MaterialService.toast(error.error.message);\n        this.form.enable();\n      }\n    );\n  }\n\n  deleteCategory() {\n    const decision = window.confirm(\n      `Вы уверены что хотите удалить категорию ${this.category.name}?`\n    );\n    if (decision) {\n      this.categorySub$ = this.categoriesService\n        .delete(this.category._id)\n        .subscribe(\n          (response) => MaterialService.toast(response.message),\n          (error) => MaterialService.toast(error.error.message),\n          () => this.router.navigate(['/admin/categories'])\n        );\n    }\n  }\n}\n","<div class=\"page-title\">\n    <h5>\n        <a routerLink=\"/admin/categories\">Категории</a>\n        <i class=\"tiny material-icons\">chevron_right</i> {{isNew ? 'Добавить' : 'Редактировать'}} категорию\n    </h5>\n    <span>\n        <button *ngIf=\"!isNew\" class=\"btn btn-small red\" (click)=\"deleteCategory()\">\n            <i class=\"material-icons\">delete</i>\n        </button>\n    </span>\n</div>\n\n<div class=\"row\">\n    <form class=\"col s12 l6\" [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"input-field\">\n            <input formControlName=\"name\" id=\"name\" type=\"text\" [ngClass]=\"{'invalid': f.name.invalid && f.name.touched}\">\n            <label for=\"name\">Название</label>\n            <span class=\"helper-text red-text\" *ngIf=\"f.name.invalid && f.name.touched\">\n                <span *ngIf=\"f.name.errors?.required\">Поле названия не должно быть пустым!</span>\n            </span>\n        </div>\n        <div>\n            <button type=\"submit\" [disabled]=\"form.invalid || form.disabled\" class=\"waves-effect waves-light btn\">\n                Сохранить\n            </button>\n        </div>\n    </form>\n</div>\n\n<app-admin-positions *ngIf=\"category?._id\" [categoryId]=\"category._id\"></app-admin-positions>","import {\n  Component,\n  Input,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { Subscription } from 'rxjs';\nimport { MaterialService } from 'src/app/shared/classes/material.service';\n\nimport {\n  AdminPromoPositionsService,\n} from '../../services/admin-promo-positions.service';\nimport {\n  AdminPromoPositionInterface,\n} from '../../types/admin-promo-postion.interface';\n\n@Component({\n  selector: 'app-admin-promo-positions',\n  templateUrl: './admin-promo-positions.component.html',\n  styleUrls: ['./admin-promo-positions.component.css'],\n})\nexport class AdminPromoPositionsComponent implements OnInit, OnDestroy {\n  @Input('categoryId') categoryId: string | undefined;\n  @Input('positions') promoPositions: AdminPromoPositionInterface[] = [];\n  positionId: any = null;\n  loading = false;\n  // promoPositions: AdminPromoPositionInterface[] = [];\n  positionSub$: Subscription | undefined;\n  constructor(\n    private promoPositionsService: AdminPromoPositionsService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.loading = true;\n    this.positionSub$ = this.promoPositionsService\n      .fetchByCategory(this.categoryId)\n      .subscribe((positions) => {\n        this.promoPositions = positions;\n        this.loading = false;\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.positionSub$?.unsubscribe();\n  }\n\n  addToMain(event: Event, position: AdminPromoPositionInterface) {\n    const newPosition: AdminPromoPositionInterface = {\n      name: position.name,\n      cost: position.cost,\n      category: this.categoryId!,\n      description: position.description,\n      quantity: position.quantity,\n      inputCost: position.inputCost,\n      promoCost: position.promoCost,\n      brand: position.brand,\n      imageSrc: position.imageSrc,\n      _id: position._id,\n      groupPages: 'main',\n    };\n    event.stopPropagation();\n    const decision = window.confirm(`Добавить позицию в Главное меню?`);\n    if (decision) {\n      this.positionSub$ = this.promoPositionsService\n        .updateToMain(newPosition)\n        .subscribe(\n          () => {\n            MaterialService.toast(\n              `Позиция ${position.name} помещена в Главное меню`\n            );\n          },\n          (error) => {\n            MaterialService.toast(error.error.message);\n          },\n          () => this.reloadCurrentPage()\n        );\n    }\n  }\n\n  reloadCurrentPage() {\n    let currentUrl = this.router.url;\n    this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {\n      this.router.navigate([currentUrl]);\n    });\n  }\n}\n","<div class=\"row\">\n    <div class=\"col s12\">\n        <div class=\"page-subtitle\">\n            <h5>Позиции:</h5>\n        </div>\n\n        <div *ngIf=\"!loading; else loader\">\n            <div class=\"collection\" *ngIf=\"promoPositions.length !== 0; else empty\">\n                <a *ngFor=\"let position of promoPositions\" class=\"collection-item collection-item-icon\">\n\n                    <span>\n                        {{position.name + \" - \"}} <strong>{{position.promoCost}} грн.</strong>\n                    </span>\n                    <span>\n                        <i class=\"material-icons\" (click)=\"addToMain($event, position)\">storage</i>\n                    </span>\n\n                </a>\n            </div>\n            <ng-template #empty>\n                <div class=\"center\">В категории нет ни одной позиции</div>\n            </ng-template>\n        </div>\n        <ng-template #loader>\n            <app-loader></app-loader>\n        </ng-template>\n    </div>\n</div>","import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  ViewChild,\n} from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { MaterialService } from '../../../../shared/classes/material.service';\nimport {\n  AdminAuthService,\n} from '../../../admin-auth/services/admin-auth.service';\nimport {\n  AdminMenuEnum,\n  AdminMenuUrlEnum,\n} from '../../admin.constants/admin.constants.enum';\n\n@Component({\n  selector: 'app-admin-layout',\n  templateUrl: './admin-layout.component.html',\n  styles: [],\n})\nexport class AdminLayoutComponent implements AfterViewInit {\n  @ViewChild('floating') floatingRef: ElementRef | undefined;\n  links = [\n    { url: AdminMenuUrlEnum.categoriesUrl, name: AdminMenuEnum.categories },\n    { url: AdminMenuUrlEnum.promoUrl, name: AdminMenuEnum.promo },\n    { url: AdminMenuUrlEnum.storageUrl, name: AdminMenuEnum.storage },\n    { url: AdminMenuUrlEnum.ordersUrl, name: AdminMenuEnum.orders },\n    // { url: AdminMenuUrlEnum.registerUrl, name: AdminMenuEnum.register },\n  ];\n  constructor(private auth: AdminAuthService, private router: Router) {}\n\n  ngAfterViewInit() {\n    MaterialService.initializeFloatingButton(this.floatingRef!);\n  }\n\n  logout(event: Event) {\n    event.preventDefault();\n    this.auth.logout();\n    this.router.navigate(['/']);\n  }\n}\n","<ul class=\"sidenav sidenav-fixed a-sidenav\">\n\n    <h4><a routerLink=\"/admin/dashboard\" class=\"brand-logo\">Maete</a></h4>\n\n    <li class=\"bold\" *ngFor=\"let link of links\" routerLinkActive=\"active\">\n        <a [routerLink]=\"[link.url]\" class=\"waves-effect waves-orange\">{{link.name}}</a>\n    </li>\n\n    <li class=\"bold last\"><a routerLink=\"/\" class=\"waves-effect waves-orange\" (click)=\"logout($event)\">\n        Выйти</a></li>\n</ul>\n\n<main class=\"content\">\n    <router-outlet></router-outlet>\n</main>\n\n<div class=\"fixed-action-btn\" #floating>\n    <a class=\"btn-floating btn-large red\">\n        <i class=\"large material-icons\">add</i>\n    </a>\n    <ul>\n        <li><a routerLink=\"/admin/order\" class=\"btn-floating green\"><i class=\"material-icons\">assignment</i></a>\n        </li>\n        <li><a routerLink=\"/admin/categories/new\" class=\"btn-floating blue\"><i class=\"material-icons\">list</i></a>\n        </li>\n    </ul>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\nimport {\n  StorageCategoryInterface,\n  StoragePositionInterface,\n} from '../types/admin-storage.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AdminStorageService {\n  constructor(private http: HttpClient) {}\n\n  fetchCategories(): Observable<StorageCategoryInterface[]> {\n    return this.http.get<StorageCategoryInterface[]>('/api/admin/category');\n  }\n\n  getCategoryById(id: any): Observable<StorageCategoryInterface> {\n    return this.http.get<StorageCategoryInterface>(`/api/admin/category/${id}`);\n  }\n\n  fetchPositions(categoryId: any): Observable<StoragePositionInterface[]> {\n    return this.http.get<StoragePositionInterface[]>(\n      `/api/admin/position/${categoryId}`\n    );\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport {\n  AdminPromoPositionInterface,\n} from '../types/admin-promo-postion.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AdminPromoPositionsService {\n  positions: AdminPromoPositionInterface[] | undefined;\n\n  constructor(private http: HttpClient) {}\n\n  // fetch(): Observable<AdminPromoPositionInterface[]> {\n  //   return this.http.get<AdminPromoPositionInterface[]>(`/api/admin/position`);\n  // }\n  fetchByCategory(categoryId: any): Observable<AdminPromoPositionInterface[]> {\n    return this.http\n      .get<AdminPromoPositionInterface[]>(`/api/admin/position/${categoryId}`)\n      .pipe(\n        map((positions) => {\n          this.positions = positions;\n          return this.positions.filter((p) => p.groupPages === 'promo');\n        })\n      );\n  }\n\n  updateToMain(\n    position: AdminPromoPositionInterface\n  ): Observable<AdminPromoPositionInterface> {\n    return this.http.patch<AdminPromoPositionInterface>(\n      `/api/admin/position/${position._id}`,\n      position\n    );\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  Input,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport {\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport {\n  MaterialInstance,\n  MaterialService,\n} from 'src/app/shared/classes/material.service';\n\nimport { AdminPositionsService } from '../../services/admin-positions.service';\nimport { AdminPositionInterface } from '../../types/admin-positions.interface';\n\n@Component({\n  selector: 'app-admin-positions',\n  templateUrl: './admin-positions.component.html',\n  styleUrls: ['./admin-positions.component.css'],\n})\nexport class AdminPositionsComponent implements OnInit {\n  @ViewChild('input') inputRef: ElementRef | undefined;\n  @Input('categoryId') categoryId: string | undefined;\n  @ViewChild('modal') modalRef: ElementRef | undefined;\n\n  positions: AdminPositionInterface[] = [];\n\n  image: File | undefined;\n  imagePreview: string | ArrayBuffer | undefined = '';\n  imageFiles: string[] = [];\n  loading = false;\n  isNew = true;\n  positionId: any = null;\n  position: AdminPositionInterface | undefined;\n  modal: MaterialInstance | undefined;\n  positionSub$: Subscription | undefined;\n  addSub$: Subscription | undefined;\n\n  form = new FormGroup({\n    name: new FormControl(null, Validators.required),\n    cost: new FormControl(1, [Validators.required, Validators.min(1)]),\n    description: new FormControl(null, Validators.required),\n    quantity: new FormControl(null, Validators.required),\n    inputCost: new FormControl(null, Validators.required),\n    promoCost: new FormControl(null, Validators.required),\n    brand: new FormControl(null, Validators.required),\n  });\n\n  constructor(\n    private positionsService: AdminPositionsService,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.loading = true;\n    this.positionSub$ = this.positionsService\n      .fetch(this.categoryId)\n      .subscribe((positions) => {\n        this.positions = positions;\n        this.loading = false;\n      });\n  }\n\n  ngOnDestroy() {\n    this.modal!.destroy();\n    this.positionSub$?.unsubscribe();\n    this.addSub$?.unsubscribe();\n  }\n\n  ngAfterViewInit() {\n    this.modal = MaterialService.initModal(this.modalRef!);\n  }\n\n  triggerClick() {\n    this.inputRef?.nativeElement.click();\n  }\n\n  onFileUpload(event: any) {\n    const file = event.target.files[0];\n    this.image = file;\n\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      this.imagePreview = reader.result as string;\n    };\n\n    reader.readAsDataURL(file);\n  }\n\n  onSelectPosition(position: AdminPositionInterface) {\n    this.positionId = position._id;\n    this.isNew = false;\n    this.form.patchValue({\n      name: position.name,\n      description: position.description,\n      cost: position.cost,\n      quantity: position.quantity,\n      inputCost: position.inputCost,\n      promoCost: position.promoCost,\n      brand: position.brand,\n    });\n    this.imagePreview = position.imageSrc;\n    this.modal?.open();\n    MaterialService.updateTextInputs();\n  }\n\n  resetForm() {\n    this.form.reset({\n      name: null,\n      description: null,\n      cost: 1,\n      quantity: 1,\n      inputCost: 1,\n      promoCost: 1,\n      imageSrc: null,\n      brand: null,\n    });\n  }\n\n  completed = () => {\n    this.modal!.close();\n    this.resetForm();\n    this.form.enable();\n    this.imagePreview = '';\n  };\n\n  onAddPosition() {\n    this.isNew = true;\n    this.positionId = null;\n    this.resetForm();\n    this.imagePreview = '';\n    this.modal?.open();\n    MaterialService.updateTextInputs();\n  }\n\n  onDeletePosition(event: Event, position: AdminPositionInterface) {\n    event.stopPropagation();\n    const decision = window.confirm(`Удалить позицию \"${position.name}\"?`);\n    if (decision) {\n      this.positionSub$ = this.positionsService.delete(position).subscribe(\n        (response) => {\n          const idx = this.positions.findIndex((p) => p._id === position._id);\n          this.positions.splice(idx, 1);\n          MaterialService.toast(response.message);\n        },\n        (error) => MaterialService.toast(error.error.message)\n      );\n    }\n  }\n\n  onCancel() {\n    this.modal!.close();\n  }\n  onSubmit() {\n    this.form.disable();\n\n    const newPosition: AdminPositionInterface = {\n      name: this.form.value.name,\n      cost: this.form.value.cost,\n      category: this.categoryId!,\n      description: this.form.value.description,\n      quantity: this.form.value.quantity,\n      inputCost: this.form.value.inputCost,\n      promoCost: this.form.value.promoCost,\n      brand: this.form.value.brand,\n      imageSrc: this.imagePreview as string,\n      groupPages: 'main',\n    };\n    let obs$;\n    if (this.positionId) {\n      newPosition._id = this.positionId;\n      obs$ = this.positionsService.update(newPosition).pipe(\n        map((position) => {\n          newPosition._id = this.positionId;\n          const idx = this.positions.findIndex((p) => p._id === position._id);\n          this.positions[idx] = position;\n          MaterialService.toast('Изменения сохранены');\n        })\n      );\n    } else {\n      obs$ = this.positionsService.create(newPosition, this.image).pipe(\n        map((position) => {\n          MaterialService.toast('Позиция создана');\n          this.positions.push(position);\n        })\n      );\n    }\n    this.positionSub$ = obs$.subscribe(\n      () => console.log(),\n      (error) => {\n        MaterialService.toast(error.error.message);\n      },\n      this.completed\n    );\n  }\n\n  addToPromo(event: Event, position: AdminPositionInterface) {\n    const newPosition: AdminPositionInterface = {\n      name: position.name,\n      cost: position.cost,\n      category: this.categoryId!,\n      description: position.description,\n      quantity: position.quantity,\n      inputCost: position.inputCost,\n      promoCost: position.promoCost,\n      brand: position.brand,\n      imageSrc: position.imageSrc,\n      _id: position._id,\n      groupPages: 'promo',\n    };\n    event.stopPropagation();\n    const decision = window.confirm(`Добавить позицию в акции?`);\n    if (decision) {\n      this.addSub$ = this.positionsService.updateToPromo(newPosition).subscribe(\n        () => {\n          MaterialService.toast(\n            `Позиция ${position.name} помещена в раздел Акции`\n          );\n        },\n        (error) => {\n          MaterialService.toast(error.error.message);\n        },\n        () => {\n          this.reloadCurrentPage();\n        }\n      );\n    }\n  }\n\n  reloadCurrentPage() {\n    let currentUrl = this.router.url;\n    this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {\n      this.router.navigate([currentUrl]);\n    });\n  }\n\n  get f() {\n    return this.form.controls;\n  }\n}\n","<div class=\"row\">\n    <div class=\"col s12\">\n        <div class=\"page-subtitle\">\n            <h5>Позиции:</h5>\n            <button class=\"waves-effect waves-light btn blue-grey darken-1 btn-small\" (click)=\"onAddPosition()\">\n                Добавить позицию\n            </button>\n        </div>\n\n        <div *ngIf=\"!loading; else loader\">\n            <div class=\"collection\" *ngIf=\"positions.length !== 0; else empty\">\n                <a *ngFor=\"let position of positions\" class=\"collection-item collection-item-icon\" (click)=\"onSelectPosition(position)\">\n\n                    <span>\n                        {{position.name + \" - \"}} <strong>{{position.cost}} грн.</strong>\n                    </span>\n                    <span>\n                        <i class=\"material-icons delete\" (click)=\"onDeletePosition($event, position)\">delete</i>\n                        <i class=\"material-icons\" (click)=\"addToPromo($event, position)\">add</i>\n                    </span>\n                </a>\n            </div>\n            <ng-template #empty>\n                <div class=\"center\">В категории нет ни одной позиции</div>\n            </ng-template>\n        </div>\n        <ng-template #loader>\n            <app-loader></app-loader>\n        </ng-template>\n    </div>\n</div>\n\n<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"modal\" #modal>\n        <div class=\"modal-content\">\n            <h4 class=\"mb1\"> {{isNew ? 'Добавить' : 'Редактировать'}} позицию</h4>\n            <div class=\"input-field\">\n                <input formControlName=\"name\" id=\"pos-name\" type=\"text\" [ngClass]=\"{'invalid': f.name.invalid && f.name.touched}\">\n                <label for=\"pos-name\">Название</label>\n                <span *ngIf=\"f.name.invalid && f.name.touched\" class=\"helper-text red-text\">\n                    Название не должно быть пустым.\n                </span>\n            </div>\n            <div class=\"input-field\">\n                <input formControlName=\"brand\" id=\"pos-brand\" type=\"text\" [ngClass]=\"{'invalid': f.brand.invalid && f.brand.touched}\">\n                <label for=\"pos-name\">Бренд</label>\n                <span *ngIf=\"f.brand.invalid && f.brand.touched\" class=\"helper-text red-text\">\n                    Поле Бренд не должно быть пустым.\n                </span>\n            </div>\n            <div class=\"input-field\">\n                <textarea class=\"materialize-textarea col s12\" formControlName=\"description\" id=\"pos-description\" data-length=\"200\" type=\"text\" [ngClass]=\"{'invalid': f.description.invalid && f.description.touched}\"></textarea>\n                <label for=\"pos-description\">Характеристики, описание товара</label>\n                <span *ngIf=\"f.description.invalid && f.description.touched\" class=\"helper-text red-text\">\n                    Поле не должно быть пустым.\n                </span>\n            </div>\n            <div class=\"input-field\">\n                <input id=\"pos-cost\" type=\"number\" min=\"1\" formControlName=\"cost\" [ngClass]=\"{'invalid': f.cost.invalid && f.cost.touched}\">\n                <label for=\"pos-cost\">Цена</label>\n                <span *ngIf=\"f.cost.invalid && f.cost.touched\" class=\"helper-text red-text\">\n                    Введите корректную цену. Минимальное значение 1.\n                </span>\n            </div>\n            <div class=\"input-field\">\n                <input id=\"pos-inputCost\" type=\"number\" min=\"1\" formControlName=\"inputCost\" [ngClass]=\"{'invalid': f.inputCost.invalid && f.inputCost.touched}\">\n                <label for=\"pos-inputCost\">Цена закупки</label>\n                <span *ngIf=\"f.inputCost.invalid && f.inputCost.touched\" class=\"helper-text red-text\">\n                    Введите корректную цену. Минимальное значение 1.\n                </span>\n            </div>\n            <div class=\"input-field\">\n                <input id=\"pos-promoCost\" type=\"number\" min=\"1\" formControlName=\"promoCost\">\n                <label for=\"pos-inputCost\">Акционная цена</label>\n            </div>\n            <div class=\"input-field\">\n                <input id=\"pos-quantity\" type=\"number\" min=\"1\" formControlName=\"quantity\" [ngClass]=\"{'invalid': f.quantity.invalid && f.quantity.touched}\">\n                <label for=\"pos-quantity\">Количество</label>\n                <span *ngIf=\"f.quantity.invalid && f.quantity.touched\" class=\"helper-text red-text\">\n                    Введите количество товара. Минимальное значение 1.\n                </span>\n            </div>\n            <div>\n                <input type=\"file\" class=\"hide-input\" (change)=\"onFileUpload($event)\" #input>\n                <button *ngIf=\"isNew\" (click)=\"triggerClick()\" [disabled]=\"form.disabled\" type=\"button\" class=\"waves-effect waves-light btn orange lighten-2 mb2\">\n                    <i class=\"material-icons left\">backup</i>\n                    Загрузить изображение\n                </button>\n            </div>\n            <div class=\"col s12 l4 center\">\n                <img class=\"responsive-img h200\" [src]=\"imagePreview\" *ngIf=\"imagePreview\">\n            </div>\n        </div>\n        <div class=\"modal-footer\">\n            <button type=\"button\" (click)=\"onCancel()\" class=\"modal-action waves-effect waves-black btn-flat\" [disabled]=\"form!.disabled\">\n                Отмена\n            </button>\n            <button class=\"modal-action btn waves-effect\" type=\"submit\" [disabled]=\"form!.invalid || form!.disabled\">\n                Сохранить\n            </button>\n        </div>\n    </div>\n</form>","import {\n  Component,\n  OnInit,\n} from '@angular/core';\nimport {\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport {\n  ActivatedRoute,\n  Params,\n  Router,\n} from '@angular/router';\n\nimport { Subscription } from 'rxjs';\n\nimport { MaterialService } from '../../../../shared/classes/material.service';\nimport { AdminAuthService } from '../../services/admin-auth.service';\n\n@Component({\n  selector: 'app-admin-register',\n  templateUrl: './admin-register.component.html',\n  styleUrls: ['./admin-register.component.css'],\n})\nexport class AdminRegisterComponent implements OnInit {\n  form = new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.minLength(6)]),\n    password: new FormControl('', [\n      Validators.required,\n      Validators.minLength(8),\n    ]),\n  });\n\n  aSub: Subscription | undefined;\n\n  constructor(\n    private auth: AdminAuthService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe((params: Params) => {\n      if (params['registered']) {\n      } else if (params['accessDenied']) {\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.aSub) {\n      this.aSub?.unsubscribe();\n    }\n  }\n\n  get f() {\n    return this.form.controls;\n  }\n\n  onSubmit() {\n    this.form.disable();\n    this.aSub = this.auth.register(this.form.value).subscribe(\n      () => {\n        this.router.navigate(['/admin/login'], {\n          queryParams: {\n            registered: true,\n          },\n        });\n      },\n      (error) => {\n        MaterialService.toast(error.error.message);\n        this.form.enable();\n      }\n    );\n  }\n}\n","<div class=\"auth-block\">\n    <form class=\"card\" [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"card-content\">\n            <span class=\"card-title\">Добавить администратора</span>\n            <div class=\"input-field\">\n                <input formControlName=\"email\" id=\"email\" type=\"email\" [ngClass]=\"{'invalid': f.email.invalid && f.email.touched}\">\n                <label for=\"email\">Логин:</label>\n                <span class=\"helper-text red-text\" *ngIf=\"f.email.invalid && f.email.touched\">\n                    <span *ngIf=\"f.email.errors?.required\">Поле Логин не должно быть пустым</span>\n                <span *ngIf=\"f.email.errors?.minlength\n                    && f.email.errors?.minlength.requiredLength\">\n                        Логин должен содержать более {{f.email.errors?.minlength.requiredLength}} символов.\n                        Вы ввели {{f.email.errors?.minlength.actualLength}} символа(ов)\n                    </span>\n                </span>\n            </div>\n            <div class=\"input-field\">\n                <input formControlName=\"password\" id=\"password\" type=\"password\" [ngClass]=\"{'invalid': f.password.invalid && f.password.touched}\">\n                <label for=\"password\">Пароль:</label>\n                <span class=\"helper-text red-text\" *ngIf=\"f.password.invalid && f.password.touched\">\n                    <span *ngIf=\"f.password.errors?.required\">Поле пароля не должно быть пустым</span>\n                <span *ngIf=\"f.password.errors?.minlength\n                     && f.password.errors?.minlength.requiredLength\">\n                        Пароль должен содержать более {{f.password.errors?.minlength.requiredLength}} символов.\n                        Вы ввели {{f.password.errors?.minlength.actualLength}} символа(ов)\n                    </span>\n                </span>\n            </div>\n        </div>\n        <div class=\"card-action\">\n            <button type=\"submit\" class=\"modal-action btn waves-effect\" [disabled]=\"form.invalid || form.disabled\">Добавить</button>\n        </div>\n    </form>\n</div>","import {\n  Component,\n  OnInit,\n} from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\nimport {\n  AdminCategoriesService,\n} from '../../services/admin-categories.service';\nimport { AdminCategoryInterface } from '../../types/admin-categories.interface';\n\n@Component({\n  selector: 'app-admin-categories',\n  templateUrl: './admin-categories.component.html',\n  styleUrls: ['./admin-categories.component.css'],\n})\nexport class AdminCategoriesComponent implements OnInit {\n  categories$: Observable<AdminCategoryInterface[]> | undefined;\n\n  constructor(private categoriesService: AdminCategoriesService) {}\n\n  ngOnInit(): void {\n    this.categories$ = this.categoriesService.fetch();\n  }\n}\n","<div class=\"page-title\">\n    <h5>Категории</h5>\n    <button class=\"waves-effect waves-light btn grey darken-1\" routerLink=\"/admin/categories/new\">\n        Добавить категорию\n    </button>\n</div>\n\n<div class=\"row\" *ngIf=\"categories$ | async as categories; else loader\">\n    <div class=\"col s12 \">\n        <div class=\"collection \" *ngIf=\"categories.length !== 0; else empty\">\n            <a *ngFor=\"let category of categories\" [routerLink]=\"['/admin/categories', category._id]\" class=\"collection-item\">\n                {{category.name}}\n            </a>\n        </div>\n        <ng-template #empty>\n            <div class=\"center\">\n                У вас нет ни одной категории\n            </div>\n        </ng-template>\n    </div>\n</div>\n\n<ng-template #loader>\n    <app-loader></app-loader>\n</ng-template>","import {\n  Component,\n  OnInit,\n} from '@angular/core';\n\n@Component({\n  selector: 'app-admin-dashboard',\n  templateUrl: './admin-dashboard.component.html',\n  styleUrls: ['./admin-dashboard.component.css'],\n})\nexport class AdminDashboardComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<p>Welcome to admin panel!</p>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\nimport {\n  AdminPromoCategoryInterface,\n} from '../types/admin-promo-category.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AdminPromoCategoriesService {\n  constructor(private http: HttpClient) {}\n\n  // Получаем список всех категорий\n  fetch(): Observable<AdminPromoCategoryInterface[]> {\n    return this.http.get<AdminPromoCategoryInterface[]>('/api/admin/category');\n  }\n\n  getById(id: any): Observable<AdminPromoCategoryInterface> {\n    return this.http.get<AdminPromoCategoryInterface>(\n      `/api/admin/category/${id}`\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  RouterModule,\n  Routes,\n} from '@angular/router';\n\nimport { LoaderModule } from 'src/app/shared/modules/loader/loader.module';\n\nimport { AuthGuard } from '../shared/classes/auth.guard';\nimport {\n  AdminLayoutComponent,\n} from '../shared/layouts/admin-layout/admin-layout.component';\nimport {\n  AdminStorageFormComponent,\n} from './components/admin-storage-form/admin-storage-form.component';\nimport {\n  AdminStorageComponent,\n} from './components/admin-storage/admin-storage.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AdminLayoutComponent,\n    canActivate: [AuthGuard],\n    children: [\n      { path: 'storage', component: AdminStorageComponent },\n      { path: 'storage/:id', component: AdminStorageFormComponent },\n    ],\n  },\n];\n\n@NgModule({\n  declarations: [AdminStorageComponent, AdminStorageFormComponent],\n  imports: [CommonModule, RouterModule.forChild(routes), LoaderModule],\n})\nexport class AdminStorageModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-login-layout',\n  templateUrl: './admin-login-layout.component.html',\n  styleUrls: ['./admin-login-layout.component.css']\n})\nexport class AdminLoginLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"auth-block\">\n    <router-outlet></router-outlet>\n</div>","import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  ViewChild,\n} from '@angular/core';\n\nimport {\n  MenuEnum,\n} from 'src/app/admin/shared/admin.constants/admin.constants.enum';\nimport {\n  MaterialInstance,\n  MaterialService,\n} from 'src/app/shared/classes/material.service';\n\nimport { AdminOrdersService } from '../../services/admin-orders.service';\nimport { AdminOrderInterface } from '../../types/admin-orders.interface';\n\n@Component({\n  selector: 'app-admin-orders-position',\n  templateUrl: './admin-orders-position.component.html',\n  styleUrls: ['./admin-orders-position.component.css'],\n})\nexport class AdminOrdersPositionComponent implements OnDestroy, AfterViewInit {\n  @Input() orders: AdminOrderInterface[] | undefined;\n  @ViewChild('modal') modalRef: ElementRef | undefined;\n\n  modal: MaterialInstance | undefined;\n  selectedOrder: AdminOrderInterface | undefined;\n  main = MenuEnum.main;\n  promo = MenuEnum.promo;\n\n  constructor(private ordersService: AdminOrdersService) {}\n\n  ngAfterViewInit(): void {\n    this.modal = MaterialService.initModal(this.modalRef!);\n  }\n\n  ngOnDestroy(): void {\n    this.modal?.destroy();\n  }\n\n  closeModal() {\n    this.modal?.close();\n  }\n\n  onSelectOrder(order: AdminOrderInterface) {\n    this.selectedOrder = order;\n    this.modal?.open();\n  }\n\n  onDeleteOrder(event: Event, order: AdminOrderInterface) {\n    this.ordersService.delete(order).subscribe(\n      (response) => {\n        const idx = this.orders!.findIndex((o) => o._id === order._id);\n        this.orders!.splice(idx, 1);\n        MaterialService.toast(response.message);\n      },\n      (error) => MaterialService.toast(error.error.message)\n    );\n  }\n}\n","<table class=\"highlight mb2\">\n    <thead>\n        <tr>\n            <th>№ заказа</th>\n            <th>Дата</th>\n            <th>Время</th>\n            <th>Сумма заказа</th>\n            <th></th>\n        </tr>\n    </thead>\n\n    <tbody>\n        <tr *ngFor=\"let order of orders\">\n            <td>1</td>\n            <td>{{order.date | date:'dd.MM.yyyy'}}</td>\n            <td>{{order.date | date:'HH:mm:ss'}}</td>\n            <td>{{order.totalCost}} UAH</td>\n            <td>\n                <button class=\"btn btn-small grey darken-1\" (click)=\"onSelectOrder(order)\">\n                    <i class=\"material-icons\">open_in_new</i>\n                </button>\n            </td>\n            <td>\n                <button class=\"btn btn-small grey darken-1\" (click)=\"onDeleteOrder($event, order)\">\n                    <i class=\"material-icons\">delete</i>\n                </button>\n            </td>\n        </tr>\n    </tbody>\n</table>\n\n\n<div class=\"modal \" #modal>\n    <div>\n        <div class=\"modal-content\" *ngIf=\"selectedOrder\">\n            <h6 class=\"mb1\">Заказ №1</h6>\n            <table class=\"card\">\n                <thead>\n                    <tr>\n                        <th>Наименование</th>\n                        <th>Количество</th>\n                        <th>Цена</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let item of selectedOrder.cart\">\n                        <td>{{item.name}}</td>\n                        <td>{{item.orderQuantity}}</td>\n                        <td *ngIf=\"item.groupPages === main\">{{item.cost}}</td>\n                        <td *ngIf=\"item.groupPages === promo\">{{item.promoCost}}</td>\n                    </tr>\n                </tbody>\n            </table>\n            <table class=\"card\">\n                <thead>\n                    <tr>\n                        <th>Доставка</th>\n                        <th>Оплата</th>\n                        <th>Область</th>\n                        <th>Город</th>\n                        <th>№ отд.</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>{{selectedOrder.delivery.deliveryName}}</td>\n                        <td>{{selectedOrder.delivery.payment}}</td>\n                        <td>{{selectedOrder.delivery.area}}</td>\n                        <td>{{selectedOrder.delivery.city}}</td>\n                        <td>{{selectedOrder.delivery.department}}</td>\n                    </tr>\n                </tbody>\n            </table>\n            <table class=\"card\">\n                <thead>\n                    <tr>\n                        <th>Имя</th>\n                        <th>Фамилия</th>\n                        <th>Телефон</th>\n                        <th>Email</th>\n                        <th>Комментарий</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>{{selectedOrder.userData.firstName}}</td>\n                        <td>{{selectedOrder.userData.secondName}}</td>\n                        <td>{{selectedOrder.userData.phoneNumber}}</td>\n                        <td>{{selectedOrder.userData.email}}</td>\n                        <td>{{selectedOrder.userData.comment}}</td>\n                    </tr>\n                </tbody>\n                <div class=\"order-summary right\">\n                    <p>Общая сумма заказа <strong>{{selectedOrder.totalCost}} UAH</strong></p>\n                </div>\n            </table>\n\n        </div>\n        <div class=\"modal-footer\">\n            <button class=\"waves-effect waves-light btn-small\" (click)=\"closeModal()\">\n                Закрыть\n            </button>\n        </div>\n    </div>\n</div>","import {\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport {\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport {\n  ActivatedRoute,\n  Params,\n  Router,\n} from '@angular/router';\n\nimport { Subscription } from 'rxjs';\n\nimport { MaterialService } from '../../../../shared/classes/material.service';\nimport { AdminAuthService } from '../../services/admin-auth.service';\n\n@Component({\n  selector: 'app-admin-login',\n  templateUrl: './admin-login.component.html',\n  styleUrls: ['./admin-login.component.css'],\n})\nexport class AdminLoginComponent implements OnInit, OnDestroy {\n  form = new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.minLength(6)]),\n    password: new FormControl('', [\n      Validators.required,\n      Validators.minLength(8),\n    ]),\n  });\n\n  aSub: Subscription | undefined;\n\n  constructor(\n    private auth: AdminAuthService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe((params: Params) => {\n      if (params['registered']) {\n        // Вы зарегистрированы\n        MaterialService.toast('Пользователь успешно зарегистрирован!');\n      } else if (params['accessDenied']) {\n        // Сперва авторизируйтесь\n        MaterialService.toast(\n          'Для начала работы с сервисом авторизируйтесь в системе!'\n        );\n      } else if (params['sessionFailed']) {\n        // Закончилось время сессии\n        this.router.navigate(['/']);\n        MaterialService.toast(\n          'Время сессии истекло, авторизируйтесь в системе!'\n        );\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.aSub) {\n      this.aSub.unsubscribe();\n    }\n  }\n\n  get f() {\n    return this.form.controls;\n  }\n\n  onSubmit() {\n    this.form.disable();\n    this.aSub = this.auth.login(this.form.value).subscribe(\n      () => this.router.navigate(['/admin/dashboard']),\n      (error) => {\n        MaterialService.toast(error.error.message);\n        this.form.enable();\n      }\n    );\n  }\n}\n","<form class=\"card\" [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"card-content\">\n        <span class=\"card-title\">Войти в систему</span>\n        <div class=\"input-field\">\n            <input formControlName=\"email\" id=\"email\" type=\"email\" [ngClass]=\"{'invalid': f.email.invalid && f.email.touched}\">\n            <label for=\"email\">Логин:</label>\n            <span class=\"helper-text red-text\" *ngIf=\"f.email.invalid && f.email.touched\">\n                <span *ngIf=\"f.email.errors?.required\">Поле Логин не должно быть пустым</span>\n            <span *ngIf=\"f.email.errors?.minlength\n                && f.email.errors?.minlength.requiredLength\">\n                   Логин должен содержать более {{f.email.errors?.minlength.requiredLength}} символов.\n                   Вы ввели {{f.email.errors?.minlength.actualLength}} символа(ов)\n               </span>\n            </span>\n        </div>\n        <div class=\"input-field\">\n            <input formControlName=\"password\" id=\"password\" type=\"password\" [ngClass]=\"{'invalid': f.password.invalid && f.password.touched}\">\n            <label for=\"password\">Пароль:</label>\n            <span class=\"helper-text red-text\" *ngIf=\"f.password.invalid && f.password.touched\">\n                <span *ngIf=\"f.password.errors?.required\">Поле пароля не должно быть пустым</span>\n            <span *ngIf=\"f.password.errors?.minlength\n                 && f.password.errors?.minlength.requiredLength\">\n                    Пароль должен содержать более {{f.password.errors?.minlength.requiredLength}} символов.\n                    Вы ввели {{f.password.errors?.minlength.actualLength}} символа(ов)\n                </span>\n            </span>\n        </div>\n    </div>\n    <div class=\"card-action\">\n        <button type=\"submit\" class=\"modal-action btn waves-effect\" [disabled]=\"form.invalid || form.disabled\">Войти</button>\n    </div>\n</form>","export enum AdminMenuEnum {\n  categories = 'Добавить, изменить товар',\n  promo = 'Акции',\n  storage = 'Остатки по товарам',\n  orders = 'Заказы',\n  register = 'Добавить администратора',\n}\n\nexport enum AdminMenuUrlEnum {\n  categoriesUrl = '/admin/categories',\n  promoUrl = '/admin/promo',\n  storageUrl = '/admin/storage',\n  ordersUrl = '/admin/order',\n  registerUrl = '/admin/register',\n}\n\nexport enum MenuEnum {\n  main = 'main',\n  promo = 'promo',\n}\n\nexport enum AdminPaginationStep {\n  step = 10,\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { Message } from '../../shared/interfaces';\nimport { AdminPositionInterface } from '../types/admin-positions.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AdminPositionsService {\n  positions: AdminPositionInterface[] | undefined;\n  constructor(private http: HttpClient) {}\n\n  fetch(categoryId: any): Observable<AdminPositionInterface[]> {\n    return this.http\n      .get<AdminPositionInterface[]>(`/api/admin/position/${categoryId}`)\n      .pipe(\n        map((positions) => {\n          this.positions = positions;\n          return this.positions.filter((p) => p.groupPages === 'main');\n        })\n      );\n  }\n\n  fetchForStorage(categoryId: any): Observable<AdminPositionInterface[]> {\n    return this.http.get<AdminPositionInterface[]>(\n      `/api/admin/storage/${categoryId}`\n    );\n  }\n\n  create(\n    position: AdminPositionInterface,\n    image?: File\n  ): Observable<AdminPositionInterface> {\n    const fd = new FormData();\n    if (image) {\n      fd.append('image', image, image.name);\n    }\n    fd.append('name', position.name);\n    fd.append('brand', String(position.brand));\n    fd.append('description', position.description!);\n    fd.append('cost', String(position.cost));\n    fd.append('category', position.category);\n    fd.append('inputCost', String(position.inputCost));\n    fd.append('promoCost', String(position.promoCost));\n    fd.append('quantity', String(position.quantity));\n    fd.append('groupPages', String(position.groupPages));\n\n    return this.http.post<AdminPositionInterface>('/api/admin/position', fd);\n  }\n\n  update(position: AdminPositionInterface): Observable<AdminPositionInterface> {\n    return this.http.patch<AdminPositionInterface>(\n      `/api/admin/position/${position._id}`,\n      position\n    );\n  }\n\n  updateToPromo(\n    position: AdminPositionInterface\n  ): Observable<AdminPositionInterface> {\n    return this.http.patch<AdminPositionInterface>(\n      `/api/admin/position/${position._id}`,\n      position\n    );\n  }\n\n  delete(position: AdminPositionInterface): Observable<Message> {\n    return this.http.delete<Message>(`/api/admin/position/${position._id}`);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport {\n  FormsModule,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { AdminAuthModule } from './admin-auth/admin-auth.module';\nimport {\n  AdminCategoriesModule,\n} from './admin-categories/admin-categories.module';\nimport { AdminDashboardModule } from './admin-dashboard/admin-dashboard.module';\nimport { AdminOrdersModule } from './admin-orders/admin-orders.module';\nimport { AdminPromoModule } from './admin-promo/admin-promo.module';\nimport { AdminStorageModule } from './admin-storage/admin-storage.module';\nimport {\n  AdminLayoutComponent,\n} from './shared/layouts/admin-layout/admin-layout.component';\nimport {\n  AdminLoginLayoutComponent,\n} from './shared/layouts/admin-login-layout/admin-login-layout.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    AdminAuthModule,\n    AdminDashboardModule,\n    AdminCategoriesModule,\n    AdminStorageModule,\n    AdminOrdersModule,\n    AdminPromoModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    RouterModule,\n  ],\n  exports: [RouterModule],\n  declarations: [AdminLayoutComponent, AdminLoginLayoutComponent],\n})\nexport class AdminModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\nimport { Message } from '../../shared/interfaces';\nimport { AdminOrderInterface } from '../types/admin-orders.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AdminOrdersService {\n  orders: AdminOrderInterface[] = [];\n\n  constructor(private http: HttpClient) {}\n\n  fetchOrders(): Observable<AdminOrderInterface[]> {\n    return this.http.get<AdminOrderInterface[]>('/api/admin/order');\n  }\n\n  delete(order: AdminOrderInterface): Observable<Message> {\n    return this.http.delete<Message>(`/api/admin/order/${order._id}`);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  RouterModule,\n  Routes,\n} from '@angular/router';\n\nimport { LoaderModule } from 'src/app/shared/modules/loader/loader.module';\n\nimport { AuthGuard } from '../shared/classes/auth.guard';\nimport {\n  AdminLayoutComponent,\n} from '../shared/layouts/admin-layout/admin-layout.component';\nimport {\n  AdminOrdersComponent,\n} from './components/admin-orders/admin-orders.component';\nimport { AdminOrdersPositionComponent } from './components/admin-orders-position/admin-orders-position.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AdminLayoutComponent,\n    canActivate: [AuthGuard],\n    children: [{ path: 'order', component: AdminOrdersComponent }],\n  },\n];\n\n@NgModule({\n  declarations: [AdminOrdersComponent, AdminOrdersPositionComponent],\n  imports: [CommonModule, RouterModule.forChild(routes), LoaderModule],\n})\nexport class AdminOrdersModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\nimport { Message } from '../../shared/interfaces';\nimport { AdminCategoryInterface } from '../types/admin-categories.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AdminCategoriesService {\n  categoryName = '';\n  constructor(private http: HttpClient) {}\n\n  // Получаем список всех категорий\n  fetch(): Observable<AdminCategoryInterface[]> {\n    return this.http.get<AdminCategoryInterface[]>('/api/admin/category');\n  }\n\n  getById(id: any): Observable<AdminCategoryInterface> {\n    return this.http.get<AdminCategoryInterface>(`/api/admin/category/${id}`);\n  }\n\n  create(name: AdminCategoryInterface): Observable<AdminCategoryInterface> {\n    return this.http.post<AdminCategoryInterface>('/api/admin/category', name);\n  }\n  // createPromo(\n  //   name: AdminCategoryInterface\n  // ): Observable<AdminCategoryInterface> {\n  //   return this.http.post<AdminCategoryInterface>('/api/admin/promo', name);\n  // }\n\n  update(\n    id: any,\n    name: AdminCategoryInterface\n  ): Observable<AdminCategoryInterface> {\n    return this.http.patch<AdminCategoryInterface>(\n      `/api/admin/category/${id}`,\n      name\n    );\n  }\n  delete(id: any): Observable<Message> {\n    return this.http.delete<Message>(`/api/admin/category/${id}`);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  FormsModule,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport {\n  RouterModule,\n  Routes,\n} from '@angular/router';\n\nimport { LoaderModule } from 'src/app/shared/modules/loader/loader.module';\n\nimport { AuthGuard } from '../shared/classes/auth.guard';\nimport {\n  AdminLayoutComponent,\n} from '../shared/layouts/admin-layout/admin-layout.component';\nimport {\n  AdminPromoCategoriesFormComponent,\n} from './components/admin-promo-categories-form/admin-promo-categories-form.component';\nimport {\n  AdminPromoCategoriesComponent,\n} from './components/admin-promo-categories/admin-promo-categories.component';\nimport {\n  AdminPromoPositionsComponent,\n} from './components/admin-promo-positions/admin-promo-positions.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AdminLayoutComponent,\n    canActivate: [AuthGuard],\n    children: [\n      { path: 'promo', component: AdminPromoCategoriesComponent },\n      {\n        path: 'promo/:id',\n        component: AdminPromoCategoriesFormComponent,\n      },\n      { path: 'promoposition', component: AdminPromoPositionsComponent },\n    ],\n  },\n];\n\n@NgModule({\n  declarations: [\n    AdminPromoPositionsComponent,\n    AdminPromoCategoriesComponent,\n    AdminPromoCategoriesFormComponent,\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    LoaderModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n})\nexport class AdminPromoModule {}\n","import {\n  Component,\n  ElementRef,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\n\nimport { Subscription } from 'rxjs';\n\nimport { AdminOrdersService } from '../../services/admin-orders.service';\nimport { AdminOrderInterface } from '../../types/admin-orders.interface';\n\n@Component({\n  selector: 'app-admin-orders',\n  templateUrl: './admin-orders.component.html',\n  styleUrls: ['./admin-orders.component.css'],\n})\nexport class AdminOrdersComponent implements OnInit {\n  @ViewChild('modal') modalRef: ElementRef | undefined;\n  ordersSub$: Subscription | undefined;\n  orders: AdminOrderInterface[] = [];\n  loading = false;\n\n  constructor(private ordersService: AdminOrdersService) {}\n\n  ngOnInit(): void {\n    this.loading = true;\n    this.ordersSub$ = this.ordersService.fetchOrders().subscribe((orders) => {\n      this.orders = orders;\n    });\n    this.loading = false;\n  }\n}\n","<div class=\"page-title\">\n    <h5>История заказов</h5>\n</div>\n\n<div>\n    <div *ngIf=\"orders.length > 0; else empty\">\n        <app-admin-orders-position [orders]=\"orders\"></app-admin-orders-position>\n        <div class=\"center mb2\">\n            <ng-template #loader>\n                <app-loader></app-loader>\n            </ng-template>\n        </div>\n    </div>\n    <ng-template #empty>\n        <div class=\"center\">Заказов нет</div>\n    </ng-template>\n</div>","import {\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport {\n  FormControl,\n  FormGroup,\n} from '@angular/forms';\nimport {\n  ActivatedRoute,\n  Params,\n  Router,\n} from '@angular/router';\n\nimport {\n  of,\n  Subscription,\n} from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { MaterialService } from 'src/app/shared/classes/material.service';\n\nimport {\n  AdminPromoCategoriesService,\n} from '../../services/admin-promo-categories.service';\nimport {\n  AdminPromoCategoryInterface,\n} from '../../types/admin-promo-category.interface';\n\n@Component({\n  selector: 'app-admin-promo-categories-form',\n  templateUrl: './admin-promo-categories-form.component.html',\n  styleUrls: ['./admin-promo-categories-form.component.css'],\n})\nexport class AdminPromoCategoriesFormComponent implements OnInit, OnDestroy {\n  category: AdminPromoCategoryInterface | undefined;\n  form = new FormGroup({\n    name: new FormControl(''),\n  });\n  cSub$: Subscription | undefined;\n\n  constructor(\n    private route: ActivatedRoute,\n    private promoCategoriesService: AdminPromoCategoriesService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.route.params\n      .pipe(\n        switchMap((params: Params) => {\n          if (params['id']) {\n            return this.promoCategoriesService.getById(params['id']);\n          }\n          return of(null);\n        })\n      )\n      .subscribe(\n        (category) => {\n          if (category) {\n            this.category = category;\n            this.form.patchValue({\n              name: category.name,\n            });\n            MaterialService.updateTextInputs();\n          }\n        },\n        (error) => MaterialService.toast(error.error.message)\n      );\n  }\n\n  ngOnDestroy(): void {\n    this.cSub$?.unsubscribe();\n  }\n}\n","<div class=\"page-title\">\n    <h5><a routerLink=\"/admin/promo\">Категории</a></h5>\n</div>\n<form class=\"col s12 l6\" [formGroup]=\"form\">\n    <div class=\"input-field\">\n        <input formControlName=\"name\" id=\"name\" type=\"text\" class=\"disabled\">\n        <label for=\"name\">Название</label>\n    </div>\n</form>\n\n<app-admin-promo-positions *ngIf=\"category?._id\" [categoryId]=\"category?._id\"></app-admin-promo-positions>","import { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport {\n  FormsModule,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport {\n  RouterModule,\n  Routes,\n} from '@angular/router';\n\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { LoaderModule } from 'src/app/shared/modules/loader/loader.module';\n\nimport { AuthGuard } from '../shared/classes/auth.guard';\nimport {\n  AdminLayoutComponent,\n} from '../shared/layouts/admin-layout/admin-layout.component';\nimport {\n  AdminCategoriesFormComponent,\n} from './components/admin-categories-form/admin-categories-form.component';\nimport {\n  AdminCategoriesComponent,\n} from './components/admin-categories/admin-categories.component';\nimport {\n  AdminPositionsComponent,\n} from './components/admin-positions/admin-positions.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AdminLayoutComponent,\n    canActivate: [AuthGuard],\n    children: [\n      { path: 'categories', component: AdminCategoriesComponent },\n      { path: 'categories/new', component: AdminCategoriesFormComponent },\n      { path: 'categories/:id', component: AdminCategoriesFormComponent },\n      { path: 'position', component: AdminPositionsComponent },\n    ],\n  },\n];\n\n@NgModule({\n  declarations: [\n    AdminCategoriesComponent,\n    AdminCategoriesFormComponent,\n    AdminPositionsComponent,\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    LoaderModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxPaginationModule,\n  ],\n})\nexport class AdminCategoriesModule {}\n","import {\n  Component,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport {\n  ActivatedRoute,\n  Params,\n} from '@angular/router';\n\nimport {\n  Observable,\n  of,\n} from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { MaterialService } from 'src/app/shared/classes/material.service';\n\nimport { AdminStorageService } from '../../services/admin-storage.service';\nimport {\n  StorageCategoryInterface,\n  StoragePositionInterface,\n} from '../../types/admin-storage.interface';\n\n@Component({\n  selector: 'app-admin-storage-form',\n  templateUrl: './admin-storage-form.component.html',\n  styleUrls: ['./admin-storage-form.component.css'],\n})\nexport class AdminStorageFormComponent implements OnInit {\n  @Input('categoryId') categoryId: string | undefined;\n\n  storageCategories$: Observable<StorageCategoryInterface[]> | undefined;\n  storagePositions: StoragePositionInterface[] = [];\n  loading = false;\n  storageCategory: StorageCategoryInterface | undefined;\n\n  constructor(\n    private route: ActivatedRoute,\n    private storageService: AdminStorageService\n  ) {}\n\n  ngOnInit(): void {\n    this.loading = true;\n    this.route.params\n      .pipe(\n        switchMap((params: Params) => {\n          if (params['id']) {\n            this.categoryId = params['id'];\n            return this.storageService.fetchPositions(params['id']);\n          }\n\n          return of(null);\n        })\n      )\n      .subscribe(\n        (positions) => {\n          if (positions) {\n            this.storagePositions = positions;\n            this.loading = false;\n          }\n        },\n        (error) => MaterialService.toast(error.error.message)\n      );\n\n    this.route.params\n      .pipe(\n        switchMap((params: Params) => {\n          if (params['id']) {\n            return this.storageService.getCategoryById(params['id']);\n          }\n\n          return of(null);\n        })\n      )\n      .subscribe(\n        (category) => {\n          if (category) {\n            this.storageCategory = category;\n          }\n        },\n        (error) => MaterialService.toast(error.error.message)\n      );\n  }\n}\n","<div *ngIf=\"!loading; else loader\">\n    <div class=\"page-title\">\n        <h5>{{storageCategory?.name}}</h5>\n    </div>\n    <div *ngIf=\"storagePositions.length !== 0; else empty\">\n        <span *ngFor=\"let position of storagePositions; let i = index \">\n            <table class=\"centered\">\n                <thead>\n                    <tr *ngIf=\"i == 0 \">\n                        <th>Название</th>\n                        <th>Количество</th>\n                        <th>Цена закупки</th>\n                        <th>Цена</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td class=\"name name-align\">{{position.name}}</td>\n                        <td class=\"name\">{{position.quantity}}</td>\n                        <td class=\"name\">{{position.inputCost}}</td>\n                        <td class=\"name\">{{position.cost}}</td>\n                    </tr>\n                </tbody>\n\n\n            </table>\n        </span>\n    </div>\n</div>\n\n\n<ng-template #empty>\n    <div class=\"center\">В категории нет ни одной позиции</div>\n</ng-template>\n\n<ng-template #loader>\n    <app-loader></app-loader>\n</ng-template>"]}