{"version":3,"file":"primeng-button.umd.js","sources":["../../src/app/components/button/button.ts","../../src/app/components/button/primeng-button.ts"],"names":["DomHandler","Directive","ElementRef","Input","EventEmitter","Component","ChangeDetectionStrategy","ViewEncapsulation","ContentChildren","PrimeTemplate","Output","NgModule","CommonModule","RippleModule"],"mappings":"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","sourcesContent":["import {NgModule,Directive,Component,ElementRef,EventEmitter,AfterViewInit,Output,OnDestroy,Input,ChangeDetectionStrategy, ViewEncapsulation, ContentChildren, AfterContentInit, TemplateRef, QueryList} from '@angular/core';\nimport {DomHandler} from 'primeng/dom';\nimport {CommonModule} from '@angular/common';\nimport {RippleModule} from 'primeng/ripple'; \nimport {PrimeTemplate} from 'primeng/api'; \n\n@Directive({\n    selector: '[pButton]'\n})\nexport class ButtonDirective implements AfterViewInit, OnDestroy {\n\n    @Input() iconPos: 'left' | 'right' | 'top' | 'bottom' = 'left';\n            \n    @Input() loadingIcon: string = \"pi pi-spinner pi-spin\";\n\n    public _label: string;\n    \n    public _icon: string;\n\n    public _loading: boolean = false;\n            \n    public initialized: boolean;\n    \n    public _initialStyleClass: string;\n\n    constructor(public el: ElementRef) {}\n    \n    ngAfterViewInit() {\n        this._initialStyleClass = this.el.nativeElement.className;\n        DomHandler.addMultipleClasses(this.el.nativeElement, this.getStyleClass());\n\n        if (this.icon) {\n            this.createIconEl();\n        }\n        \n        let labelElement = document.createElement(\"span\");\n        if (this.icon && !this.label) {\n            labelElement.setAttribute('aria-hidden', 'true');\n        }\n        labelElement.className = 'p-button-label';\n\n        if (this.label)\n            labelElement.appendChild(document.createTextNode(this.label));\n        else \n            labelElement.innerHTML = '&nbsp;';\n        \n        this.el.nativeElement.appendChild(labelElement);\n        this.initialized = true;\n    }\n        \n    getStyleClass(): string {\n        let styleClass = 'p-button p-component';\n        if (this.icon && !this.label) {\n            styleClass = styleClass + ' p-button-icon-only';\n        }\n\n        if (this.loading) {\n            styleClass = styleClass + ' p-disabled p-button-loading';\n            if (!this.icon && this.label)\n                styleClass = styleClass + ' p-button-loading-label-only';\n        }\n        \n        return styleClass;\n    }\n\n    setStyleClass() {\n        let styleClass = this.getStyleClass();\n        this.el.nativeElement.className = styleClass + ' ' + this._initialStyleClass;\n    }\n\n    createIconEl() {\n        let iconElement = document.createElement(\"span\");\n        iconElement.className = 'p-button-icon';\n        iconElement.setAttribute(\"aria-hidden\", \"true\");\n        let iconPosClass = this.label ? 'p-button-icon-' + this.iconPos : null;\n        \n        if (iconPosClass) {\n            DomHandler.addClass(iconElement, iconPosClass);\n        }\n\n        DomHandler.addMultipleClasses(iconElement, this.getIconClass());\n        let labelEl = DomHandler.findSingle(this.el.nativeElement, '.p-button-label')\n\n        if (labelEl)\n            this.el.nativeElement.insertBefore(iconElement, labelEl);\n        else\n            this.el.nativeElement.appendChild(iconElement)\n    }\n\n    getIconClass() {\n        return this.loading ? 'p-button-loading-icon ' + this.loadingIcon : this._icon;\n    }\n\n    setIconClass() {\n        let iconElement = DomHandler.findSingle(this.el.nativeElement, '.p-button-icon');\n        if (iconElement) {\n            if (this.iconPos) \n                iconElement.className = 'p-button-icon p-button-icon-' + this.iconPos + ' ' + this.getIconClass();\n            else \n                iconElement.className = 'p-button-icon ' + this.getIconClass();\n        }\n        else {\n            this.createIconEl();\n        }\n    }\n\n    removeIconElement() {\n        let iconElement = DomHandler.findSingle(this.el.nativeElement, '.p-button-icon');\n        this.el.nativeElement.removeChild(iconElement)\n    }\n    \n    @Input() get label(): string {\n        return this._label;\n    }\n\n    set label(val: string) {\n        this._label = val;\n        \n        if (this.initialized) {\n            DomHandler.findSingle(this.el.nativeElement, '.p-button-label').textContent = this._label || '&nbsp;';\n            this.setStyleClass();\n        }\n    }\n    \n    @Input() get icon(): string {\n        return this._icon;\n    }\n\n    set icon(val: string) {\n        this._icon = val;\n        \n        if (this.initialized) {\n            this.setIconClass();\n            this.setStyleClass();\n        }\n    }\n\n    @Input() get loading(): boolean {\n        return this._loading;\n    }\n\n    set loading(val: boolean) {\n        this._loading = val;\n        \n        if (this.initialized) {\n            if (this.loading || this.icon)\n                this.setIconClass();\n            else \n                this.removeIconElement();\n            \n            this.setStyleClass();\n        }\n    }\n    \n    ngOnDestroy() {\n        this.initialized = false;\n    }\n}\n\n@Component({\n    selector: 'p-button',\n    template: `\n        <button [attr.type]=\"type\" [class]=\"styleClass\" [ngStyle]=\"style\" [disabled]=\"disabled || loading\"\n            [ngClass]=\"{'p-button p-component':true,\n                        'p-button-icon-only': (icon && !label),\n                        'p-button-vertical': (iconPos === 'top' || iconPos === 'bottom') && label,\n                        'p-disabled': this.disabled || this.loading,\n                        'p-button-loading': this.loading,\n                        'p-button-loading-label-only': this.loading && !this.icon && this.label}\"\n                        (click)=\"onClick.emit($event)\" (focus)=\"onFocus.emit($event)\" (blur)=\"onBlur.emit($event)\" pRipple>\n            <ng-content></ng-content>\n            <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\n            <span [ngClass]=\"{'p-button-icon': true,\n                        'p-button-icon-left': iconPos === 'left' && label,\n                        'p-button-icon-right': iconPos === 'right' && label,\n                        'p-button-icon-top': iconPos === 'top' && label,\n                        'p-button-icon-bottom': iconPos === 'bottom' && label}\"\n                        [class]=\"loading ? 'p-button-loading-icon ' + loadingIcon : icon\" *ngIf=\"!contentTemplate && (icon||loading)\" [attr.aria-hidden]=\"true\"></span>\n            <span class=\"p-button-label\" [attr.aria-hidden]=\"icon && !label\" *ngIf=\"!contentTemplate\">{{label||'&nbsp;'}}</span>\n            <span [ngClass]=\"badgeStyleClass()\" [class]=\"badgeClass\" *ngIf=\"!contentTemplate && badge\">{{badge}}</span>\n        </button>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class Button implements AfterContentInit {\n\n    @Input() type: string = \"button\";\n\n    @Input() iconPos: string = 'left';\n\n    @Input() icon: string;\n\n    @Input() badge: string;\n\n    @Input() label: string;\n\n    @Input() disabled: boolean;\n\n    @Input() loading: boolean = false;\n\n    @Input() loadingIcon: string = \"pi pi-spinner pi-spin\";\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Input() badgeClass: string;\n\n    contentTemplate: TemplateRef<any>;\n\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\n\n    @Output() onClick: EventEmitter<any> = new EventEmitter();\n\n    @Output() onFocus: EventEmitter<any> = new EventEmitter();\n\n    @Output() onBlur: EventEmitter<any> = new EventEmitter();\n\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch(item.getType()) {\n                case 'content':\n                    this.contentTemplate = item.template;\n                break;\n                \n                default:\n                    this.contentTemplate = item.template;\n                break;\n            }\n        });\n    }\n\n    badgeStyleClass() {\n        return {\n            'p-badge p-component': true,\n            'p-badge-no-gutter': this.badge && String(this.badge).length === 1\n        }\n    }\n}\n\n@NgModule({\n    imports: [CommonModule,RippleModule],\n    exports: [ButtonDirective,Button],\n    declarations: [ButtonDirective,Button]\n})\nexport class ButtonModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}