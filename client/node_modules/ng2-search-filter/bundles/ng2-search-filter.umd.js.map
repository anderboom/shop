{"version":3,"file":"ng2-search-filter.umd.js","sources":["~/ng2-search-filter/src/ng2-filter.pipe.ts","~/ng2-search-filter/src/ng2-filter.module.ts"],"names":["Pipe","Injectable","NgModule"],"mappings":";;;;;;AACA,IAAA,aAAA,IAAA,YAAA;AAAE,IAAF,SAAA,aAAA,GAAA;AAAE;AAAM;AAAQ;AAEhB;AAAqC;AACnB;AAAQ,IAG1B,aAAA,CAAA,SAAA,CAAA,SAGG,GAHH,UAGG,KAAA,EAAA,IAAA,EAHH;AAAE,QACE,IAAI,CAGC,IAAC,IAAO,CAAA,KAAE;AAGT,YAHe,OAAO,KAAA,CAAM;AAGV,QAJxB,OAGO,aAAA,CAAc,MAAC,CAAM,KAAC,EAAM,IAAA,CAAK,CAAC;AACF,KAHxC,CAAH;AAAC;AAEA;AACI;AACI;AAEA;AACR;AACe;AAAQ,IAGrB,aAAH,CAAA,MAAG,GAHH,UAGG,KAAA,EAAA,IAAA,EAAH;AAAE,QADE,qBAGM,SAAA,GAAY,IAAA,CAAK,WAAC,EAAW,CAAE;AAGrC;AAAY;AAA2B;AACrB;AAAuB;AACxC,QAFL,SAAA,WAAA,CADK,IAAA,EAAA,IAAA,EACL;AAAE,YACI,KAAK,qBADI,QAAA,IAAY,IAAA,EAAM;AAAE,gBAE3B,IAAI,IADC,CAAI,QAAC,CAAQ,KAAK,IAAA,IAAQ,IAAA,CAAK,QAAC,CAAQ,IAAI,SAAA,EAAW;AAClD,oBACR,SAAS;AACnB,iBAAS;AACT,gBAAQ,IAAI,OADO,IAAA,CAAK,QAAC,CAAQ,KAAK,QAAA,EAAU;AACR,oBAC9B,IAAI,WADC,CAAW,IAAC,CAAI,QAAC,CAAQ,EAAE,IAAA,CAAK,EAAE;AAChD,wBACW,OADO,IAAA,CAAK;AAAC,qBAEd;AACX,iBAAS;AACT,gBAAQ,IAAI,IADC,CAAI,QAAC,CAAQ,CAAC,QAAC,EAAQ,CAAE,WAAC,EAAW,CAAE,QAAC,CAAQ,SAAC,CAAS,EAAE;AACR,oBACvD,OADO,IAAA,CAAK;AAAC,iBAEd;AACT,aAAO;AACP,YAAM,OADO,KAAA,CAAM;AACP,SACP;AACL,QACI,OADO,KAAA,CAAM,MAAC,CAAM,UAAC,IAAU,EACnC;AAAE,YACI,OADO,WAAA,CAAY,IAAC,EAAK,IAAA,CAAK,CAAC;AAAC,SAEjC,CADC,CAAC;AAAC,KAEL;;;;;;;;;;;;gDAAH;AAAC;AACsB,CA/CvB,EAAA,CAAA,CAAA,AAoDE;AANK,AAMJ;SANH,CAAA,VAMO;AACP;CAPO,GAAoC,MAE3C,EADE,IAAA,EAAMA,SAAA,EAAM,IAAA,EAAM,CAAA,kBAElB,IAAI,1DAKL,aAAD,CAAA,cAAC,GAAA,YAAD,EAAC,OAAA,EAIA,CAJD,EAIC,CAAC;CAVM,QAAA,kBAEN,IAAI,EADE,KAAA,tCChDR,IAAA,mBAAA,IAAA,YAAA;WDkDC,EADC,EAAG,MAEL,EADE,IAAA,EAAMC,7BClDN,IAAF,SAAA,mBAAA,GAAA;AAAE;CDkDM,EAAW,GAElB;;;;;;;;;gDCpDM;AAAC;AAAgC,CAAxC,EAAA,CAAA,CAAA,AAQE;AALwC,AAKvC;AACA;AANH,CAAA,DAMkB;OANwB,GAAoC,MAF9E,EAGE,IAAA,EAAMC,aAAA,EAAU,IAAA,EAAM,CAAA,kBAFtB,hEAQD,mBAAD,CAAA,cAAC,GAAA,YAAD,EAAC,OAAA,EAAA,CAAD,EAAC,CAAC;AACF;UATc,EAGE,CAAA,aAAE,CAAa,kBAF7B,7CAQD;CARQ,EAGE,CAAA,aAAE,CAAa,cAFzB,EAGC,EAAG,pCAM4C;AARhD,AAUQ;AAAC;AAKL;AAAC;AAAM","sourcesContent":["import { Pipe, PipeTransform, Injectable } from '@angular/core';\nexport class Ng2SearchPipe implements PipeTransform {\n/**\n * @param {?} items object from array\n * @param {?} term term's search\n * @return {?}\n */\ntransform(items: any, term: string): any {\n    if (!term || !items) return items;\n\n    return Ng2SearchPipe.filter(items, term);\n  }\n/**\n *\n * @param {?} items List of items to filter\n * @param {?} term  a string term to compare with every property of the list\n * \n * @return {?}\n */\nstatic filter(items: Array<{ [key: string]: any }>, term: string): Array<{ [key: string]: any }> {\n\n    const /** @type {?} */ toCompare = term.toLowerCase();\n/**\n * @param {?} item\n * @param {?} term\n * @return {?}\n */\nfunction checkInside(item: any, term: string) {\n      for (let /** @type {?} */ property in item) {\n        if (item[property] === null || item[property] == undefined) {\n          continue;\n        }\n        if (typeof item[property] === 'object') {\n          if (checkInside(item[property], term)) {\n            return true;\n          }\n        }\n        if (item[property].toString().toLowerCase().includes(toCompare)) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    return items.filter(function (item) {\n      return checkInside(item, term);\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n  name: 'filter',\n  pure: false\n}, ] },\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction Ng2SearchPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nNg2SearchPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNg2SearchPipe.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { Ng2SearchPipe } from './ng2-filter.pipe';\nexport class Ng2SearchPipeModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations: [Ng2SearchPipe],\n  exports: [Ng2SearchPipe]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction Ng2SearchPipeModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNg2SearchPipeModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNg2SearchPipeModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}