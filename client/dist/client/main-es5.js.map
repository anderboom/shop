{"version":3,"sources":["webpack:///src/app/categories/services/categories.service.ts","webpack:///src/app/shared/modules/navbar/navbar.module.ts","webpack:///src/app/search/services/search.service.ts","webpack:///src/app/cart/components/order/order.component.ts","webpack:///src/app/cart/components/order/order.component.html","webpack:///src/app/admin/shared/classes/token.interceptor.ts","webpack:///src/app/cart/services/order.service.ts","webpack:///src/app/shared/modules/footer/components/footer/footer.component.ts","webpack:///src/app/shared/modules/footer/components/footer/footer.component.html","webpack:///src/app/cart/services/cart.service.ts","webpack:///src/environments/environment.ts","webpack:///src/app/shared/modules/loader/loader.module.ts","webpack:///src/app/cart/services/novaposhta.service.ts","webpack:///src/app/shared/modules/navbar/components/navbar/navbar.component.ts","webpack:///src/app/shared/modules/navbar/components/navbar/navbar.component.html","webpack:///src/app/categories/services/position.service.ts","webpack:///src/app/auth/services/auth.service.ts","webpack:///src/app/shared/classes/material.service.ts","webpack:///src/app/auth/components/login/login.component.ts","webpack:///src/app/auth/components/login/login.component.html","webpack:///src/app/shared/modules/footer/footer.module.ts","webpack:///src/app/shared/classes/usertoken.interceptor.ts","webpack:///src/app/search/components/search/search.component.ts","webpack:///src/app/search/components/search/search.component.html","webpack:///src/app/search/search.module.ts","webpack:///src/app/shared/layouts/auth-layout/auth-layout.component.ts","webpack:///src/app/shared/classes/authclient.guard.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/dashboard/dashboard.module.ts","webpack:///src/app/shared/layouts/site-layout/site-layout.component.ts","webpack:///src/app/shared/layouts/site-layout/site-layout.component.html","webpack:///src/app/shared/modules/loader/components/loader/loader.component.ts","webpack:///src/app/shared/modules/loader/components/loader/loader.component.html","webpack:///src/app/auth/auth.module.ts","webpack:///src/app/categories/components/categories-form/categories-form.component.ts","webpack:///src/app/categories/components/categories-form/categories-form.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/categories/components/positions-form/positions-form.component.ts","webpack:///src/app/categories/components/positions-form/positions-form.component.html","webpack:///src/app/cart/components/cart/cart.component.ts","webpack:///src/app/cart/components/cart/cart.component.html","webpack:///src/app/categories/components/promo-positions/promo-positions.component.ts","webpack:///src/app/categories/components/promo-positions/promo-positions.component.html","webpack:///src/app/categories/categories.module.ts","webpack:///src/app/shared/constants/constants.enum.ts","webpack:///src/app/admin/admin-auth/services/admin-auth.service.ts","webpack:///src/app/dashboard/components/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/components/dashboard/dashboard.component.html","webpack:///src/app/cart/cart.module.ts","webpack:///src/app/categories/components/categories/categories.component.ts","webpack:///src/app/categories/components/categories/categories.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/auth/components/register/register.component.ts","webpack:///src/app/auth/components/register/register.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["CategoriesService","http","categoryName","get","id","providedIn","NavbarModule","declarations","imports","exports","SearchService","isFilter","foundPositions","brandsArr","brandsNameArr","positionId","categoryId","sorting","pipe","positions","forEach","p","orderQuantity","push","brand","Array","from","Set","filter","OrderComponent","router","cartService","orderService","novaposhta","isDisableSenderDropdownCity","isDisableRecipientDropdownCity","isDisableRecipientDropdownDepartment","isDisableSenderDropdownDepartment","form","payment","required","delivery","area","city","department","firstName","secondName","phoneNumber","email","comment","cart","totalCost","isNovaPoshta","dateNow","Date","orderNumber","JSON","parse","localStorage","getItem","deliveryList","name","paymentList","cash","card","postpay","getAreas","initSelect","select1Ref","select2Ref","updateTextInputs","subscribe","response","areasSender","data","map","label","Description","value","Ref","slice","areasRecipient","ref","type","getCities","arr","citiesSender","citiesRecipient","getDepartments","departmentsSender","departmentsRecipient","find","a","c","d","deliveryName","userData","newOrder","createOrder","order","console","log","toast","error","message","clearOrder","resetCart","navigate","novaPoshtaSelected","controls","onSubmit","deliverySelected","onCancel","selector","templateUrl","styleUrls","TokenInterceptor","auth","req","next","isAuthAdmin","clone","setHeaders","Authorization","getToken","handle","handleAuthError","status","queryParams","sessionFailed","OrderService","post","FooterComponent","CartService","totalQuantity","totalMain","totalPromo","main","promo","getCartItemsFromLocalStorage","position","cartPosition","Object","assign","cost","promoCost","quantity","imageSrc","groupPages","_id","candidate","computeTotalPrice","setCartItemsToLocalStorage","setItem","stringify","splice","indexOf","computeTotalQuantityAfterDelete","computeTotalQuantity","length","removeItem","reduce","total","item","environment","production","apiEndPoint","apiKey","LoaderModule","NovaposhtaService","modelName","calledMethod","methodProperties","AreaRef","CityRef","NavbarComponent","categoriesService","categories$","fetch","sidenav","destroy","initSidenav","sidenavRef","open","close","logout","PositionService","searchService","sort","p1","p2","AuthService","token","user","setToken","MaterialService","M","html","FloatingActionButton","init","nativeElement","Dropdown","updateTextFields","Modal","Tooltip","Sidenav","FormSelect","onClose","Datepicker","format","showClearBtn","LoginComponent","route","minLength","password","params","loginSub","unsubscribe","disable","login","enable","FooterModule","UserTokenInterceptor","isAuth","SearchComponent","sortPositionsMenu","brandNameArr","loading","selectedBrand","paginationStep","step","searchStr","increase","decrease","brandSelectSub$","getBrandNames","brands","modal","setFilterMode","priceSelector","brandSelector","initModal","modalRef","foundPositions$","addToCart","event","target","selectedBrandFetch","sortingSelect","brandSelect","searchHandleChange","quantityInput","SearchModule","AuthLayoutComponent","AuthclientGuard","state","accessDenied","canActivate","AppComponent","authClient","localStorageToken","adminLocalStorageToken","routes","path","component","DashboardModule","forChild","SiteLayoutComponent","LoaderComponent","AuthModule","CategoriesFormComponent","cSub$","getById","category","AppModule","provide","multi","useClass","providers","bootstrap","PositionsFormComponent","positionsService","positions$","positionsByInc$","fetchByIncrease","positionsByDec$","fetchByDecrease","CartComponent","getCartItems","deleteCartItem","PromoPositionsComponent","promoPositions$","fetchPromo","promoPositionsByInc$","fetchPromoByIncrease","promoPositionsByDec$","fetchPromoByDecrease","children","redirectTo","pathMatch","CategoriesModule","SortingEnum","MenuEnum","DeliveryEnum","PaymentEnum","PaginationStep","AdminAuthService","clear","DashboardComponent","CartModule","CategoriesComponent","loadChildren","then","m","AdminModule","AppRoutingModule","forRoot","RegisterComponent","registerSub","register","registered","bootstrapModule","err","webpackEmptyAsyncContext","Promise","resolve","e","Error","code","keys","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\nimport { CategoryInterface } from '../types/catergory.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CategoriesService {\n  categoryName = '';\n  constructor(private http: HttpClient) {}\n\n  // Получаем список всех категорий\n  fetch(): Observable<CategoryInterface[]> {\n    return this.http.get<CategoryInterface[]>('/api/admin/category');\n  }\n\n  getById(id: any): Observable<CategoryInterface> {\n    return this.http.get<CategoryInterface>(`/api/admin/category/${id}`);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { LoaderModule } from '../loader/loader.module';\nimport { NavbarComponent } from './components/navbar/navbar.component';\n\n@NgModule({\n  declarations: [NavbarComponent],\n  imports: [CommonModule, RouterModule, LoaderModule],\n  exports: [NavbarComponent],\n})\nexport class NavbarModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { PositionInterface } from 'src/app/categories/types/position.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SearchService {\n  isFilter = false;\n  foundPositions: PositionInterface[] = [];\n  brandsArr: PositionInterface[] = [];\n  brandsNameArr: string[] = [];\n  positionId: any = null;\n  categoryId: any = null;\n  sorting = '';\n\n  constructor(private http: HttpClient) {}\n\n  fetch(): Observable<PositionInterface[]> {\n    return this.http.get<PositionInterface[]>(`/api/admin/position/`).pipe(\n      map((positions) => {\n        this.foundPositions = positions;\n        this.foundPositions.forEach((p) => (p.orderQuantity = 1));\n        return this.foundPositions;\n      })\n    );\n  }\n\n  getBrandNames(): Observable<string[]> {\n    return this.http.get<PositionInterface[]>('/api/admin/position/').pipe(\n      map((positions: PositionInterface[]) => {\n        this.brandsArr = positions;\n        this.brandsArr.forEach((p) => {\n          this.brandsNameArr.push(p.brand!);\n          this.brandsNameArr = Array.from(new Set(this.brandsNameArr));\n        });\n        return this.brandsNameArr;\n      })\n    );\n  }\n  selectedBrandFetch(brand: string): Observable<PositionInterface[]> {\n    return this.http.get<PositionInterface[]>('/api/admin/position/').pipe(\n      map((positions: PositionInterface[]) => {\n        this.foundPositions = positions;\n        this.foundPositions.forEach((p) => (p.orderQuantity = 1));\n        return (this.foundPositions = this.foundPositions.filter(\n          (p) => p.brand === brand\n        ));\n      })\n    );\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport {\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { SelectItem } from 'primeng/api';\nimport { CartService } from 'src/app/cart/services/cart.service';\nimport { MaterialService } from 'src/app/shared/classes/material.service';\nimport {\n  DeliveryEnum,\n  PaymentEnum,\n} from 'src/app/shared/constants/constants.enum';\n\nimport { NovaposhtaService } from '../../services/novaposhta.service';\nimport { OrderService } from '../../services/order.service';\nimport { CartInterface } from '../../types/cart.interface';\nimport {\n  DeliveryInterface,\n  OrderInterface,\n  UserDataInterface,\n} from '../../types/order.interface';\n\ntype UserType = 'sender';\n\n@Component({\n  selector: 'app-order',\n  templateUrl: './order.component.html',\n  styleUrls: ['./order.component.css'],\n})\nexport class OrderComponent implements OnInit {\n  @ViewChild('paymentSelector') select1Ref: ElementRef | undefined;\n  @ViewChild('deliverySelector') select2Ref: ElementRef | undefined;\n\n  public areasSender: SelectItem[] | undefined;\n  public areasRecipient: SelectItem[] | undefined;\n  public citiesSender: SelectItem[] | undefined;\n  public citiesRecipient: SelectItem[] | undefined;\n  public departmentsSender: SelectItem[] | undefined;\n  public departmentsRecipient: SelectItem[] | undefined;\n  public isDisableSenderDropdownCity: boolean = true;\n  public isDisableRecipientDropdownCity: boolean = true;\n  public isDisableRecipientDropdownDepartment: boolean = true;\n  public isDisableSenderDropdownDepartment: boolean = true;\n\n  form = new FormGroup({\n    payment: new FormControl('', Validators.required),\n    delivery: new FormControl('', Validators.required),\n    area: new FormControl(''),\n    city: new FormControl(''),\n    department: new FormControl(''),\n    firstName: new FormControl('', Validators.required),\n    secondName: new FormControl('', Validators.required),\n    phoneNumber: new FormControl(null, Validators.required),\n    email: new FormControl(null),\n    comment: new FormControl(null),\n  });\n\n  cart: CartInterface[] = [];\n  totalCost = 0;\n  paymentList: any;\n  deliveryList: any;\n  isNovaPoshta = false;\n  novaposhtaResponse: any;\n  area: any;\n  city: any;\n  department: any;\n  dateNow = new Date();\n  orderNumber = 0;\n\n  constructor(\n    private router: Router,\n    private cartService: CartService,\n    private orderService: OrderService,\n    private novaposhta: NovaposhtaService\n  ) {}\n\n  ngOnInit(): void {\n    this.cart = JSON.parse(localStorage.getItem('cart') || '{}');\n    this.totalCost = JSON.parse(localStorage.getItem('total') || '0');\n\n    this.deliveryList = [{ id: 1, name: DeliveryEnum.novaposhta }];\n    this.paymentList = [\n      { id: 1, name: PaymentEnum.cash },\n      { id: 2, name: PaymentEnum.card },\n      { id: 3, name: PaymentEnum.postpay },\n    ];\n  }\n\n  ngAfterViewInit() {\n    this.getAreas();\n    MaterialService.initSelect(this.select1Ref!);\n    MaterialService.initSelect(this.select2Ref!);\n    MaterialService.updateTextInputs;\n  }\n\n  public getAreas() {\n    this.novaposhta.getAreas().subscribe((response: any) => {\n      this.areasSender = response.data.map((area: any) => ({\n        label: area.Description,\n        value: area.Ref,\n      }));\n      this.areasSender = this.areasSender?.slice(1);\n      this.areasRecipient = [...this.areasSender!];\n    });\n  }\n\n  public getCities(ref: string, type?: UserType) {\n    this.novaposhta.getCities(ref).subscribe((response: any) => {\n      const arr = response.data.map((city: any) => ({\n        label: city.Description,\n        value: city.Ref,\n      }));\n\n      type == 'sender'\n        ? (this.citiesSender = arr)\n        : (this.citiesRecipient = arr);\n      type == 'sender'\n        ? (this.isDisableSenderDropdownCity = false)\n        : (this.isDisableRecipientDropdownCity = false);\n    });\n  }\n\n  public getDepartments(ref: string, type?: UserType) {\n    this.novaposhta.getDepartments(ref).subscribe((response: any) => {\n      const arr = response.data.map((department: any) => ({\n        label: department.Description,\n        value: department.Ref,\n      }));\n      type == 'sender'\n        ? (this.departmentsSender = arr)\n        : (this.departmentsRecipient = arr);\n      type == 'sender'\n        ? (this.isDisableSenderDropdownDepartment = false)\n        : (this.isDisableRecipientDropdownDepartment = false);\n    });\n  }\n\n  onSubmit() {\n    this.area = this.areasSender?.find((a) => a.value == this.form.value.area);\n    this.city = this.citiesSender?.find((c) => c.value == this.form.value.city);\n    this.department = this.departmentsSender?.find(\n      (d) => d.value == this.form.value.department\n    );\n    const delivery: DeliveryInterface = {\n      payment: this.form.value.payment,\n      deliveryName: this.form.value.delivery,\n      area: this.area.label,\n      city: this.city.label,\n      department: this.department.label,\n    };\n\n    const userData: UserDataInterface = {\n      firstName: this.form.value.firstName,\n      secondName: this.form.value.secondName,\n      phoneNumber: this.form.value.phoneNumber,\n      email: this.form.value.email,\n      comment: this.form.value.comment,\n    };\n\n    const newOrder: OrderInterface = {\n      delivery: delivery,\n      userData: userData,\n      cart: this.cart,\n      totalCost: this.totalCost,\n    };\n\n    this.orderService.createOrder(newOrder).subscribe(\n      (order) => {\n        console.log(order);\n        MaterialService.toast(\n          \"Дякуємо за замовлення! Наш оператор зв'яжеться з Вами найближчим часом.\"\n        );\n      },\n      (error) => {\n        MaterialService.toast(error.error.message);\n      },\n      () => this.clearOrder()\n    );\n  }\n\n  clearOrder() {\n    this.cartService.resetCart();\n    this.router.navigate(['/']);\n  }\n\n  onCancel() {\n    this.router.navigate(['/cart']);\n  }\n\n  deliverySelected(value: any) {\n    this.novaPoshtaSelected(value);\n  }\n\n  novaPoshtaSelected(value: any) {\n    if (value == 'Нова пошта') {\n      this.isNovaPoshta = true;\n    } else {\n      this.isNovaPoshta = false;\n    }\n  }\n\n  get f() {\n    return this.form.controls;\n  }\n}\n","<div class=\"row container\">\n    <div class=\"col s7 order-form\">\n        <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"modal-content\">\n                <h5 class=\"mb4 blue-text order\">Оформлення замовлення</h5>\n                <div class=\"input-field\">\n                    <select formControlName=\"payment\" id=\"pos-payment\" type=\"text\" [ngClass]=\"{'invalid': f.payment.invalid && f.payment.touched}\" #paymentSelector>\n                        <option disabled selected>Выберіть спосіб оплати</option>\n                        <option *ngFor=\"let item of paymentList\" [value]=\"item.name\">{{item.name}}</option>\n                    </select>\n                    <label for=\"pos-payment\">Спосіб оплати:<span class=\"red-text\">*</span></label>\n                </div>\n                <div class=\"input-field\">\n                    <select formControlName=\"delivery\" id=\"pos-delivery\" type=\"text\" (ngModelChange)=\"deliverySelected($event)\" [ngClass]=\"{'invalid': f.delivery.invalid && f.delivery.touched}\" #deliverySelector>\n                        <option disabled selected>Выберіть спосіб доставки</option>\n                        <option *ngFor=\"let item of deliveryList\" [value]=\"item.name\">\n                            <img *ngIf=\"item.id == 2\" class=\"image\" src=\"../../../assets/Nova_Poshta.png\">{{item.name}}\n                        </option>\n                    </select>\n                    <label for=\"pos-delivery\">Спосіб доставки:<span class=\"red-text\">*</span></label>\n                </div>\n\n                <div *ngIf=\"isNovaPoshta\">\n                    <p-tabView>\n                        <p-tabPanel header=\"Дані для відправки\">\n                            <div class=\"p-col \">\n                                <div class=\"m-bottom-15\">\n                                    <label>Виберіть область</label>\n                                    <p-dropdown [style]=\"{ width: '100%' }\" [autoDisplayFirst]=\"false\" [options]=\"areasSender!\" [filter]=\"true\" formControlName=\"area\" (onChange)=\"getCities($event.value, 'sender')\">\n                                    </p-dropdown>\n                                </div>\n                                <div class=\"m-bottom-15\">\n                                    <label for=\"pos-city\">Виберіть населений пункт</label>\n                                    <p-dropdown [style]=\"{ width: '100%' }\" id=\"pos-city\" [attr.disabled]=\"isDisableSenderDropdownCity\" [autoDisplayFirst]=\"false\" [options]=\"citiesSender!\" formControlName=\"city\" [filter]=\"true\" (onChange)=\"getDepartments($event.value, 'sender')\" [attr.title]=\"isDisableSenderDropdownCity ? 'Спочатку виберіть область' : ''\">\n                                    </p-dropdown>\n                                </div>\n                                <div class=\"m-bottom-15\">\n                                    <label>Виберіть відділення</label>\n                                    <p-dropdown [style]=\"{ width: '100%' }\" [attr.disabled]=\"isDisableSenderDropdownDepartment\" [autoDisplayFirst]=\"false\" [options]=\"departmentsSender!\" formControlName=\"department\" [filter]=\"true\" [attr.title]=\"isDisableSenderDropdownDepartment ? 'Спочатку виберіть населений пункт' : ''\">\n                                    </p-dropdown>\n                                </div>\n                            </div>\n                        </p-tabPanel>\n                    </p-tabView>\n                </div>\n\n                <div class=\"input-field\">\n                    <input formControlName=\"firstName\" id=\"pos-firstName\" type=\"text\" [ngClass]=\"{'invalid': f.firstName.invalid && f.firstName.touched}\">\n                    <label for=\"pos-firstName\">Ім'я<span class=\"red-text\">*</span></label>\n                    <span *ngIf=\"f.firstName.invalid && f.firstName.touched\" class=\"helper-text red-text\">\n                        Поле Ім'я не повинно бути порожнім.\n                    </span>\n                </div>\n                <div class=\"input-field\">\n                    <input formControlName=\"secondName\" id=\"pos-secondName\" type=\"text\" [ngClass]=\"{'invalid': f.secondName.invalid && f.secondName.touched}\">\n                    <label for=\"pos-secondName\">Прізвище<span class=\"red-text\">*</span></label>\n                    <span *ngIf=\"f.secondName.invalid && f.secondName.touched\" class=\"helper-text red-text\">\n                        Поле Прізвище не повинно бути порожнім.\n                    </span>\n                </div>\n                <div class=\"input-field\">\n                    <input formControlName=\"phoneNumber\" id=\"pos-phoneNumber\" type=\"text\" [ngClass]=\"{'invalid': f.phoneNumber.invalid && f.phoneNumber.touched}\">\n                    <label for=\"pos-phoneNumber\">Телефон<span class=\"red-text\">*</span></label>\n                    <span *ngIf=\"f.phoneNumber.invalid && f.phoneNumber.touched\" class=\"helper-text red-text\">\n                        Поле Телефон не повинно бути порожнім.\n                    </span>\n                </div>\n                <div class=\"input-field\">\n                    <input formControlName=\"email\" id=\"pos-email\" type=\"text\">\n                    <label for=\"pos-email\">Email</label>\n\n                </div>\n                <div class=\"input-field\">\n                    <i class=\"material-icons prefix\">mode_edit</i>\n                    <textarea formControlName=\"comment\" id=\"pos-comment\" type=\"text\" class=\"materialize-textarea\"></textarea>\n                    <label for=\"pos-comment\">Коментарі</label>\n                </div>\n\n                <!-- <div class=\"col s4 left mb4 total right\">Сума: {{totalCost}} грн </div> -->\n            </div>\n            <div class=\"modal-footer row col s12\">\n                <div class=\"col s6\">\n                    <button type=\"button\" (click)=\"onCancel()\" class=\"modal-action waves-effect waves-black btn-flat left\">\n                        До кошика\n                    </button>\n                </div>\n                <div class=\"col s6 \">\n                    <button class=\"modal-action btn waves-effect right\" type=\"submit\" [disabled]=\"form!.invalid || form!.disabled\">\n                        Оформити замовлення\n                    </button>\n                </div>\n\n            </div>\n        </form>\n    </div>\n    <div class=\"col s4 order-order right\">\n        <h6 class=\"mb4 blue-text order\">Ваше замовлення</h6>\n        <div class=\"row\" *ngFor=\"let order of cart\">\n            <div class=\"col s4 left line\">\n                <img class=\"imageOrder\" src={{order.imageSrc}}>\n            </div>\n            <div class=\"col s8 line\">\n                <div class=\"name\">{{order.name}}</div>\n                <div>Кількість: {{order.orderQuantity}}</div>\n                <div>Ціна: {{order.cost}} грн</div>\n            </div>\n            <hr>\n        </div>\n        <hr>\n        <h6 class=\"mb4 total order\">Сума до оплати: {{totalCost}} грн</h6>\n    </div>\n\n</div>","import {\n  HttpErrorResponse,\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport {\n  Observable,\n  throwError,\n} from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { AdminAuthService } from '../../admin-auth/services/admin-auth.service';\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n  constructor(private auth: AdminAuthService, private router: Router) {}\n\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    if (this.auth.isAuthAdmin()) {\n      req = req.clone({\n        setHeaders: {\n          Authorization: this.auth.getToken(),\n        },\n      });\n    }\n    return next\n      .handle(req)\n      .pipe(\n        catchError((error: HttpErrorResponse) => this.handleAuthError(error))\n      );\n  }\n\n  private handleAuthError(error: HttpErrorResponse): Observable<any> {\n    if (error.status === 401) {\n      this.router.navigate(['/api/admin'], {\n        queryParams: {\n          sessionFailed: true,\n        },\n      });\n    }\n    return throwError(error);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\nimport { OrderInterface } from '../types/order.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderService {\n  public order: OrderInterface[] = [];\n  public totalCost = 0;\n\n  constructor(private http: HttpClient) {}\n\n  createOrder(order: OrderInterface): Observable<OrderInterface> {\n    return this.http.post<OrderInterface>('/api/admin/order', order);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer class=\"page-footer grey lighten-3 \">\n    <div class=\"container \">\n        <div class=\"row \">\n            <div class=\"col l6 s12\">\n                <h5 class=\"blue-text\">Про нас</h5>\n                <!-- <p class=\"grey-text text-lighten-4\">You can use rows and columns here to organize your footer content.</p> -->\n            </div>\n            <div class=\"col l4 offset-l2 s12\">\n                <h5 class=\"blue-text\">Контакти</h5>\n                <!-- <ul>\n                    <li><a class=\"blue-text text-lighten-3\" href=\"#!\">Link 1</a></li>\n                </ul> -->\n            </div>\n        </div>\n    </div>\n    <div class=\"footer-copyright\">\n        <div class=\"container white-text\">\n            © 2020 AcaCompany\n            <a class=\"white-text text-lighten-4 right\" href=\"#!\">FB</a>\n        </div>\n    </div>\n</footer>","import { Injectable } from '@angular/core';\n\nimport { PositionInterface } from 'src/app/categories/types/position.interface';\nimport { MenuEnum } from 'src/app/shared/constants/constants.enum';\n\nimport { CartInterface } from '../types/cart.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CartService {\n  cart: CartInterface[] = [];\n  totalQuantity = 0;\n  totalMain = 0;\n  totalPromo = 0;\n  totalCost = 0;\n  main = MenuEnum.main;\n  promo = MenuEnum.promo;\n\n  constructor() {\n    this.getCartItemsFromLocalStorage();\n  }\n  addToCart(position: PositionInterface) {\n    const cartPosition: CartInterface = Object.assign(\n      {},\n      {\n        name: position.name,\n        cost: position.cost,\n        promoCost: position.promoCost,\n        quantity: position.quantity,\n        imageSrc: position.imageSrc,\n        orderQuantity: position.orderQuantity,\n        groupPages: position.groupPages,\n        _id: position._id,\n      }\n    );\n\n    let candidate = this.cart.find((p) => p._id === position._id);\n    if (candidate) {\n      candidate.orderQuantity! += cartPosition.orderQuantity!;\n    } else {\n      this.cart.push(cartPosition);\n    }\n    this.totalQuantity += position.orderQuantity!;\n    this.computeTotalPrice(cartPosition);\n    this.setCartItemsToLocalStorage();\n  }\n\n  setCartItemsToLocalStorage() {\n    localStorage.setItem('totalQuantity', JSON.stringify(this.totalQuantity));\n    localStorage.setItem('cart', JSON.stringify(this.cart));\n    localStorage.setItem('total', JSON.stringify(this.totalCost));\n  }\n\n  getCartItemsFromLocalStorage() {\n    this.totalQuantity = JSON.parse(\n      localStorage.getItem('totalQuantity') || '0'\n    );\n    this.cart = JSON.parse(localStorage.getItem('cart') || '[]');\n    this.totalCost = JSON.parse(localStorage.getItem('total') || '0');\n  }\n\n  getCartItems() {\n    return this.cart;\n  }\n\n  deleteCartItem(position: CartInterface) {\n    this.cart.splice(this.cart.indexOf(position), 1);\n    this.computeTotalQuantityAfterDelete(position);\n    this.computeTotalQuantity();\n    this.setCartItemsToLocalStorage();\n    if (this.cart.length === 0) {\n      localStorage.removeItem('totalQuantity');\n      localStorage.removeItem('cart');\n      localStorage.removeItem('total');\n    }\n  }\n\n  computeTotalQuantityAfterDelete(position: CartInterface) {\n    if (position.groupPages === this.main) {\n      this.totalMain =\n        this.totalMain - position.orderQuantity! * position.cost!;\n    }\n    if (position.groupPages === this.promo) {\n      this.totalPromo =\n        this.totalPromo - position.orderQuantity! * position.promoCost!;\n    }\n    this.totalCost = this.totalMain + this.totalPromo;\n  }\n  computeTotalQuantity() {\n    return (this.totalQuantity = this.cart.reduce((total, item) => {\n      return (total += item.orderQuantity!);\n    }, 0));\n  }\n  computeTotalPrice(position: CartInterface) {\n    if (position.groupPages === this.main) {\n      this.totalMain =\n        this.totalMain + position.orderQuantity! * position.cost!;\n    }\n    if (position.groupPages === this.promo) {\n      this.totalPromo =\n        this.totalPromo + position.orderQuantity! * position.promoCost!;\n    }\n    this.totalCost = this.totalMain + this.totalPromo;\n  }\n\n  resetCart() {\n    localStorage.removeItem('totalQuantity');\n    localStorage.removeItem('cart');\n    localStorage.removeItem('total');\n    this.totalQuantity = 0;\n    this.totalMain = 0;\n    this.totalPromo = 0;\n    this.totalCost = 0;\n    this.cart = [];\n  }\n}\n","export const environment = {\n  production: false,\n  apiEndPoint: 'https://api.novaposhta.ua/v2.0/json/',\n  apiKey: '3e4fd3d514c693ed7e72b47909596d4c',\n};\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { LoaderComponent } from './components/loader/loader.component';\n\n@NgModule({\n  declarations: [LoaderComponent],\n  imports: [CommonModule],\n  exports: [LoaderComponent],\n})\nexport class LoaderModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\nimport { environment } from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NovaposhtaService {\n  constructor(private http: HttpClient) {}\n\n  public getAreas(): Observable<any> {\n    return this.http.post(environment.apiEndPoint, {\n      apiKey: environment.apiKey,\n      modelName: 'Address',\n      calledMethod: 'getAreas',\n      methodProperties: {},\n    });\n  }\n\n  public getCities(ref: string): Observable<any> {\n    return this.http.post(environment.apiEndPoint, {\n      apiKey: environment.apiKey,\n      modelName: 'Address',\n      calledMethod: 'getCities',\n      methodProperties: {\n        AreaRef: ref,\n      },\n    });\n  }\n\n  public getDepartments(ref: string): Observable<any> {\n    return this.http.post(environment.apiEndPoint, {\n      apiKey: environment.apiKey,\n      modelName: 'AddressGeneral',\n      calledMethod: 'getWarehouses',\n      methodProperties: {\n        CityRef: ref,\n      },\n    });\n  }\n}\n","import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport {\n  AdminCategoryInterface,\n} from 'src/app/admin/admin-categories/types/admin-categories.interface';\nimport { AuthService } from 'src/app/auth/services/auth.service';\nimport { CartService } from 'src/app/cart/services/cart.service';\nimport {\n  CategoriesService,\n} from 'src/app/categories/services/categories.service';\nimport {\n  MaterialInstance,\n  MaterialService,\n} from 'src/app/shared/classes/material.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css'],\n})\nexport class NavbarComponent implements OnInit, OnDestroy, AfterViewInit {\n  @ViewChild('sidenav') sidenavRef: ElementRef | undefined;\n  categories$: Observable<AdminCategoryInterface[]> | undefined;\n  category: AdminCategoryInterface | undefined;\n  sidenav: MaterialInstance | undefined;\n\n  constructor(\n    private auth: AuthService,\n    public order: CartService,\n    private categoriesService: CategoriesService\n  ) {}\n\n  ngOnInit(): void {\n    this.categories$ = this.categoriesService.fetch();\n  }\n\n  ngOnDestroy() {\n    this.sidenav?.destroy();\n  }\n\n  ngAfterViewInit() {\n    if (!this.isAuthAdmin) {\n      this.sidenav = MaterialService.initSidenav(this.sidenavRef!);\n    }\n  }\n\n  open() {\n    this.sidenav?.open();\n  }\n\n  onCancel() {\n    this.sidenav?.close();\n  }\n\n  get total(): number {\n    let totalQuantity = JSON.parse(\n      localStorage.getItem('totalQuantity') || '0'\n    );\n    return totalQuantity;\n  }\n\n  get isAuth(): boolean {\n    return !!localStorage.getItem('auth-token');\n  }\n\n  get isAuthAdmin(): boolean {\n    return !!localStorage.getItem('auth-token-admin');\n  }\n\n  logout() {\n    this.auth.logout();\n  }\n}\n","<ng-container *ngIf=\"!isAuthAdmin\">\n    <nav class=\"nav-fixed\">\n        <div class=\"nav-wrapper  grey lighten-4 row col s12\">\n            <div class=\"col s2 left-align\">\n                <a [routerLink]=\"['/']\" class=\"brand-logo blue-text left\"><i class=\"material-icons\">home</i></a>\n                <a data-target=\"slide-out\" class=\"sidenav-trigger left\"><i\n                        class=\"menu material-icons blue-text\">menu</i></a>\n            </div>\n\n            <div class=\"col s10\">\n                <ul id=\"nav-mobile\" class=\"right blue-grey-text \">\n                    <li>\n                        <div class=\"phones\">\n                            <div class=\"phone \">+380668888888</div>\n                            <div class=\"phone \">+380689999999</div>\n                        </div>\n                    </li>\n                    <li>\n                        <a *ngIf=\"!total\">\n                            <i class=\"material-icons cart\">shopping_cart</i>\n                        </a>\n                    </li>\n                    <li>\n                        <a *ngIf=\"total\" [routerLink]=\"['/cart']\">\n                            <i class=\"material-icons cart\">shopping_cart</i>\n                        </a>\n                    </li>\n                    <li *ngIf=\"total\">\n                        <span class=\"badge tiny\" data-badge-caption=\"\">{{total}}</span>\n                    </li>\n                    <ng-container *ngIf=\"!isAuth\">\n                        <li routerLinkActive=\"active\">\n                            <a class=\"auth bold blue-text\" [routerLink]=\"['/login']\">Вхід</a>\n                        </li>\n                        <li routerLinkActive=\"active\">\n                            <a class=\"auth right bold  blue-text\" [routerLink]=\"['/register']\">Реєстрація</a>\n                        </li>\n                    </ng-container>\n                    <ng-container *ngIf=\"isAuth\">\n                        <li routerLinkActive=\"active\">\n                            <a class=\"auth right bold  blue-text\" [routerLink]=\"['/']\" (click)=\"logout()\">Вихід</a>\n                        </li>\n                    </ng-container>\n\n                </ul>\n            </div>\n\n        </div>\n    </nav>\n\n    <ul class=\"sidenav\" id=\"slide-out\" #sidenav>\n        <div *ngIf=\"categories$ | async as categories; else loader\">\n            <li>\n                <div class=\"header1 blue-text bold\">Категорії товарів</div>\n            </li>\n            <hr class=\"hr1\">\n            <li class=\"bold\" *ngFor=\"let category of categories\" routerLinkActive=\"active\" (click)=\"onCancel()\">\n                <a [routerLink]=\"['/category', category._id]\" class=\"waves-effect waves-orange\">{{category.name}}\n                    <a class=\" black-text secondary-content\">\n                        <i class=\"name material-icons\">keyboard_arrow_right</i></a>\n                </a>\n            </li>\n            <li class=\"bold\">\n                <a class=\"promotions waves-effect waves-orange\">Акції\n                    <a class=\"promotions secondary-content\">\n                        <i class=\"name material-icons\">keyboard_arrow_right</i></a>\n                </a>\n            </li>\n        </div>\n    </ul>\n    <ng-template #loader>\n        <app-loader></app-loader>\n    </ng-template>\n</ng-container>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SearchService } from 'src/app/search/services/search.service';\nimport { MenuEnum } from 'src/app/shared/constants/constants.enum';\n\nimport { PositionInterface } from '../types/position.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PositionService {\n  positions: PositionInterface[] = [];\n\n  constructor(private http: HttpClient, private searchService: SearchService) {}\n  fetch(categoryId: any): Observable<PositionInterface[]> {\n    return this.http\n      .get<PositionInterface[]>(`/api/admin/position/${categoryId}`)\n      .pipe(\n        map((positions) => {\n          this.positions = positions;\n          this.positions.map((p) => (p.orderQuantity = 1));\n          return this.positions.filter((p) => p.groupPages === MenuEnum.main);\n        })\n      );\n  }\n\n  fetchByIncrease(categoryId: any): Observable<PositionInterface[]> {\n    return this.http\n      .get<PositionInterface[]>(`/api/admin/position/${categoryId}`)\n      .pipe(\n        map((positions) => {\n          this.positions = positions;\n          this.positions.map((p) => (p.orderQuantity = 1));\n          this.positions.sort((p1, p2) => p1.cost - p2.cost);\n          return this.positions.filter((p) => p.groupPages === MenuEnum.main);\n        })\n      );\n  }\n\n  fetchByDecrease(categoryId: any): Observable<PositionInterface[]> {\n    return this.http\n      .get<PositionInterface[]>(`/api/admin/position/${categoryId}`)\n      .pipe(\n        map((positions) => {\n          this.positions = positions;\n          this.positions.map((p) => (p.orderQuantity = 1));\n          this.positions.sort((p1, p2) => p2.cost - p1.cost);\n          return this.positions.filter((p) => p.groupPages === MenuEnum.main);\n        })\n      );\n  }\n\n  fetchPromo(): Observable<PositionInterface[]> {\n    return this.http.get<PositionInterface[]>(`/api/admin/position`).pipe(\n      map((positions) => {\n        this.positions = positions;\n        this.positions.map((p) => (p.orderQuantity = 1));\n        return this.positions.filter((p) => p.groupPages === MenuEnum.promo);\n      })\n    );\n  }\n  fetchPromoByIncrease(): Observable<PositionInterface[]> {\n    return this.http.get<PositionInterface[]>(`/api/admin/position`).pipe(\n      map((positions) => {\n        this.positions = positions;\n        this.positions.map((p) => (p.orderQuantity = 1));\n        this.positions.sort((p1, p2) => p1.promoCost! - p2.promoCost!);\n        return this.positions.filter((p) => p.groupPages === MenuEnum.promo);\n      })\n    );\n  }\n  fetchPromoByDecrease(): Observable<PositionInterface[]> {\n    return this.http.get<PositionInterface[]>(`/api/admin/position`).pipe(\n      map((positions) => {\n        this.positions = positions;\n        this.positions.map((p) => (p.orderQuantity = 1));\n        this.positions.sort((p1, p2) => p2.promoCost! - p1.promoCost!);\n        return this.positions.filter((p) => p.groupPages === MenuEnum.promo);\n      })\n    );\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { LoginInterface } from '../types/login.interface';\nimport { RegisterInterface } from '../types/register.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private token = '';\n\n  constructor(private http: HttpClient) {}\n\n  login(user: LoginInterface): Observable<{ token: string }> {\n    return this.http.post<{ token: string }>('/api/login', user).pipe(\n      tap(({ token }) => {\n        localStorage.setItem('auth-token', token);\n        this.setToken(token);\n      })\n    );\n  }\n\n  setToken(token: string) {\n    this.token = token;\n  }\n\n  getToken(): string {\n    return this.token;\n  }\n\n  isAuth(): boolean {\n    return !!this.token;\n  }\n\n  logout() {\n    localStorage.removeItem('auth-token');\n  }\n\n  register(user: RegisterInterface): Observable<RegisterInterface> {\n    return this.http.post<RegisterInterface>('/api/register', user);\n  }\n}\n","import { ElementRef } from '@angular/core';\n\ndeclare var M: any;\n\nexport interface MaterialInstance {\n  open(): void;\n  close(): void;\n  destroy(): void;\n}\n\nexport interface MaterialDatepicker extends MaterialInstance {\n  date?: Date;\n}\n\nexport class MaterialService {\n  static toast(message: string) {\n    M.toast({ html: message });\n  }\n\n  static initializeFloatingButton(ref: ElementRef) {\n    M.FloatingActionButton.init(ref.nativeElement);\n  }\n\n  static initializeDropdownButton(ref: ElementRef): MaterialInstance {\n    return M.Dropdown.init(ref.nativeElement);\n  }\n\n  static updateTextInputs() {\n    M.updateTextFields();\n  }\n\n  static initModal(ref: ElementRef): MaterialInstance {\n    return M.Modal.init(ref.nativeElement);\n  }\n\n  static initTooltip(ref: ElementRef): MaterialInstance {\n    return M.Tooltip.init(ref.nativeElement);\n  }\n\n  static initSidenav(ref: ElementRef): MaterialInstance {\n    return M.Sidenav.init(ref.nativeElement);\n  }\n\n  static initSelect(ref: ElementRef) {\n    M.FormSelect.init(ref.nativeElement);\n  }\n\n  static initDatepicker(\n    ref: ElementRef,\n    onClose: () => void\n  ): MaterialDatepicker {\n    return M.Datepicker.init(ref.nativeElement, {\n      format: 'dd.mm.yyyy',\n      showClearBtn: true,\n      onClose,\n    });\n  }\n}\n","import {\n  Component,\n  OnInit,\n} from '@angular/core';\nimport {\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport {\n  ActivatedRoute,\n  Params,\n  Router,\n} from '@angular/router';\n\nimport { Subscription } from 'rxjs';\nimport { MaterialService } from 'src/app/shared/classes/material.service';\n\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  form = new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.minLength(6)]),\n    password: new FormControl('', [\n      Validators.required,\n      Validators.minLength(8),\n    ]),\n  });\n  loginSub: Subscription | undefined;\n\n  constructor(\n    private auth: AuthService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe((params: Params) => {\n      if (params['registered']) {\n        MaterialService.toast('Зайдіть в систему використовуючи свої дані!');\n      } else if (params['accessDenied']) {\n        MaterialService.toast(\n          'Для початку роботи з сервісом необхідно пройти авторизацію в системі!'\n        );\n      } else if (params['sessionFailed']) {\n        MaterialService.toast(\n          'Час сесії минув, необхідно пройти авторизацію в системі!'\n        );\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.loginSub) {\n      this.loginSub.unsubscribe();\n    }\n  }\n\n  get f() {\n    return this.form.controls;\n  }\n\n  onSubmit() {\n    this.form.disable();\n    this.loginSub = this.auth.login(this.form.value).subscribe(\n      () => this.router.navigate(['/dashboard']),\n      (error) => {\n        MaterialService.toast(error.error.message);\n        this.form.enable();\n      }\n    );\n  }\n}\n","<div class=\"auth-block\">\n    <form class=\"card\" [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"card-content\">\n            <span class=\"card-title\">Введіть дані для авторизації</span>\n            <div class=\"input-field\">\n                <input formControlName=\"email\" id=\"email\" type=\"email\" [ngClass]=\"{'invalid': f.email.invalid && f.email.touched}\">\n                <label for=\"email\">Логін:</label>\n                <span class=\"helper-text red-text\" *ngIf=\"f.email.invalid && f.email.touched\">\n                    <span *ngIf=\"f.email.errors?.required\">Поле Логін не повинно бути порожнім</span>\n                <span *ngIf=\"f.email.errors?.minlength\n                    && f.email.errors?.minlength.requiredLength\">\n                        Логін повинен містити більш {{f.email.errors?.minlength.requiredLength}} символів.\n                        Ви ввели {{f.email.errors?.minlength.actualLength}} символи(ів)\n                    </span>\n                </span>\n            </div>\n            <div class=\"input-field\">\n                <input formControlName=\"password\" id=\"password\" type=\"password\" [ngClass]=\"{'invalid': f.password.invalid && f.password.touched}\">\n                <label for=\"password\">Пароль:</label>\n                <span class=\"helper-text red-text\" *ngIf=\"f.password.invalid && f.password.touched\">\n                    <span *ngIf=\"f.password.errors?.required\">Поле пароля не повинно бути порожнім</span>\n                <span *ngIf=\"f.password.errors?.minlength\n                     && f.password.errors?.minlength.requiredLength\">\n                        Пароль повинен містити більш{{f.password.errors?.minlength.requiredLength}} символів.\n                        Ви ввели {{f.password.errors?.minlength.actualLength}} символи(ів)\n                    </span>\n                </span>\n            </div>\n        </div>\n        <div class=\"card-action\">\n            <button type=\"submit\" class=\"modal-action btn waves-effect\" [disabled]=\"form.invalid || form.disabled\">Увійти</button>\n        </div>\n    </form>\n</div>","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { FooterComponent } from './components/footer/footer.component';\n\n@NgModule({\n  declarations: [FooterComponent],\n  imports: [CommonModule],\n  exports: [FooterComponent],\n})\nexport class FooterModule {}\n","import {\n  HttpErrorResponse,\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport {\n  Observable,\n  throwError,\n} from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { AuthService } from 'src/app/auth/services/auth.service';\n\n@Injectable()\nexport class UserTokenInterceptor implements HttpInterceptor {\n  constructor(private auth: AuthService, private router: Router) {}\n\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    if (this.auth.isAuth()) {\n      req = req.clone({\n        setHeaders: {\n          Authorization: this.auth.getToken(),\n        },\n      });\n    }\n    return next\n      .handle(req)\n      .pipe(\n        catchError((error: HttpErrorResponse) => this.handleAuthError(error))\n      );\n  }\n\n  private handleAuthError(error: HttpErrorResponse): Observable<any> {\n    if (error.status === 401) {\n      this.router.navigate(['/login'], {\n        queryParams: {\n          sessionFailed: true,\n        },\n      });\n    }\n    return throwError(error);\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\n\nimport {\n  Observable,\n  Subscription,\n} from 'rxjs';\nimport { CartService } from 'src/app/cart/services/cart.service';\nimport { PositionInterface } from 'src/app/categories/types/position.interface';\nimport { SearchService } from 'src/app/search/services/search.service';\nimport {\n  MaterialInstance,\n  MaterialService,\n} from 'src/app/shared/classes/material.service';\nimport {\n  PaginationStep,\n  SortingEnum,\n} from 'src/app/shared/constants/constants.enum';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css'],\n})\nexport class SearchComponent implements OnInit {\n  @ViewChild('priceSelector') priceSelector: ElementRef | undefined;\n  @ViewChild('brandSelector') brandSelector: ElementRef | undefined;\n  @ViewChild('modal') modalRef: ElementRef | undefined;\n  @ViewChild('quantityInput') quantityInput: ElementRef | undefined;\n  modal: MaterialInstance | undefined;\n\n  foundPositions$: Observable<PositionInterface[]> | undefined;\n  brandSelectSub$: Subscription | undefined;\n  sortPositionsMenu: string[] = [];\n  brandNameArr: string[] = [];\n  positionId: any = null;\n  isFilter = false;\n  loading = false;\n  selectedBrand = '';\n  p: number = 1;\n  paginationStep = PaginationStep.step;\n  searchStr = '';\n  minLength = 3;\n  sorting = '';\n\n  constructor(\n    private searchService: SearchService,\n    public order: CartService\n  ) {}\n\n  ngOnInit(): void {\n    this.sortPositionsMenu = [SortingEnum.increase, SortingEnum.decrease];\n    this.brandSelectSub$ = this.searchService\n      .getBrandNames()\n      .subscribe((brands) => (this.brandNameArr = brands));\n  }\n\n  ngOnDestroy() {\n    this.modal?.destroy();\n    this.brandSelectSub$?.unsubscribe();\n    this.setFilterMode(false);\n  }\n\n  ngAfterViewInit() {\n    MaterialService.initSelect(this.priceSelector!);\n    MaterialService.initSelect(this.brandSelector!);\n    MaterialService.updateTextInputs;\n    this.modal = MaterialService.initModal(this.modalRef!);\n  }\n\n  searchHandleChange() {\n    if (this.minLength <= this.searchStr.length) {\n      this.foundPositions$ = this.searchService.fetch();\n      this.setFilterMode(true);\n    }\n    if (this.minLength > this.searchStr.length) {\n      this.setFilterMode(false);\n    }\n  }\n\n  setFilterMode(isFilter: boolean) {\n    this.isFilter = isFilter;\n    this.searchService.isFilter = isFilter;\n  }\n\n  open() {\n    this.modal?.open();\n  }\n\n  onCancel() {\n    this.modal?.close();\n  }\n\n  onSelectPosition(position: PositionInterface) {\n    this.positionId = position._id;\n  }\n\n  addToCart(position: PositionInterface) {\n    this.order.addToCart(position);\n    MaterialService.toast(`Товар додано до кошика!`);\n    this.modal?.close();\n  }\n\n  brandSelect(event: any) {\n    let value = event.target.value;\n    this.selectedBrand = value;\n    this.searchStr = '';\n    this.foundPositions$ = this.searchService.selectedBrandFetch(\n      this.selectedBrand\n    );\n    this.setFilterMode(true);\n    if (value === '') {\n      this.searchStr = '';\n      this.setFilterMode(false);\n    }\n  }\n\n  sortingSelect(event: any) {\n    let value = event.target.value;\n    this.searchService.sorting = value;\n    this.searchStr = '';\n  }\n}\n","<ng-container>\n    <div class=\"row\">\n        <div class=\"search-filter col s9 right\">\n            <div class=\"search\">\n                <div class=\"row filter col s12 grey lighten-5\">\n                    <div class=\"col s3\">\n                        <div class=\"input-field\">\n                            <span class=\"brand\">ціна</span>\n                            <select class=\"browser-default\" (change)=\"sortingSelect($event)\" #priceSelector>\n                                <option value=\"\" selected>фільтр</option>\n                                <option *ngFor=\"let position of sortPositionsMenu\" [value]=\"position\">{{position}}\n                                </option>\n                            </select>\n                        </div>\n                    </div>\n                    <div class=\"col s3\">\n                        <div class=\"input-field\">\n                            <span class=\"brand\">бренд</span>\n                            <select class=\"browser-default\" (change)=\"brandSelect($event)\" #brandSelector>\n                                <option value=\"\" selected>бренд</option>\n                                <option *ngFor=\"let brand of brandNameArr\" [value]=\"brand\">\n                                    {{brand}}\n                                </option>\n                            </select>\n                        </div>\n                    </div>\n\n                    <div class=\"input-field col s6 mr0 white\">\n                        <i class=\"search-icon material-icons prefix \">search</i>\n                        <input id=\"icon_prefix\" type=\"text\" class=\"validate\" [minlength]=\"minLength\" [(ngModel)]=\"searchStr\" (ngModelChange)=\"searchHandleChange()\">\n                        <label class=\"search\" for=\"icon_prefix\">Пошук... </label>\n                        <span class=\"helper-text mb0\" data-error=\"Мінімальна довжина слова 3 символи\" data-success=\"Пошук...\"></span>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</ng-container>\n\n<ng-container>\n    <div *ngIf=\"isFilter\">\n        <div class=\"row\">\n            <div class=\"center blue-text col s9 right\">\n                <span class=\"category\">Результати пошуку</span>\n            </div>\n        </div>\n        <div class=\"row card-width\">\n            <div class=\"col s9 right \">\n                <div *ngFor=\"let position of foundPositions$ | async | filter: searchStr | paginate: {itemsPerPage: paginationStep,currentPage: p};\" class=\"card col s12 m6 l4\">\n                    <div class=\"card-image waves-effect waves-block waves-light mb0\">\n                        <img class=\"img activator center-block\" src={{position.imageSrc}}>\n                    </div>\n                    <div class=\"card-content\">\n                        <hr class=\"hr1\">\n                        <div class=\"card-title activator grey-text text-darken-4\">\n                            <div class=\"name\" [title]=\"position.name\">{{position.name}}</div>\n                        </div>\n                        <hr class=\"hr1\">\n                        <div class=\"cost center mb4\">{{position.cost}} грн</div>\n                        <div *ngIf=\"position.quantity\" class=\"availability green-text center mt4\">в наявності</div>\n                        <div *ngIf=\"!position.quantity\" class=\"availability blue-text center mt4\">очікується</div>\n                    </div>\n                    <div class=\"card-action mt0 center-align\" (click)=\"onSelectPosition(position)\">\n                        <button class=\"add waves-effect waves-light btn \" (click)=\"open()\" [disabled]=\"!position.quantity\"><i\n                                class=\"addIcon material-icons \">shopping_cart</i></button>\n                    </div>\n                    <div class=\"card-reveal\">\n                        <span class=\"card-title text-size grey lighten-5\">{{position.name}}<i\n                                class=\"material-icons right\">close</i></span>\n                        <p>{{position.description}}</p>\n                    </div>\n                </div>\n                <div class=\"col s12\">\n                    <pagination-controls (pageChange)=\"p = $event\" previousLabel=\"\" nextLabel=\"\"></pagination-controls>\n                </div>\n            </div>\n        </div>\n    </div>\n</ng-container>\n\n<ng-container>\n    <div class=\"modal\" #modal>\n        <div *ngFor=\"let position of foundPositions$ | async\">\n            <div *ngIf=\"position._id == positionId\">\n                <div class=\"modal-content\">\n                    <span>Найменування товару: {{position.name}}</span>\n                    <span class=\"right\">Ціна: {{position.cost}} UAH</span>\n                    <input #quantityInput id=\"pos-quantity\" type=\"number\" value=\"1\" [(ngModel)]=\"position.orderQuantity\">\n                    <label for=\"pos-quantity\">Кількість</label>\n                </div>\n                <div class=\"modal-footer\">\n                    <button type=\"button\" (click)=\"onCancel()\" class=\"modal-action waves-effect waves-black btn-flat\">\n                        Скасувати\n                    </button>\n                    <button class=\"modal-action btn waves-effect btn-small\" type=\"submit\" (click)=\"addToCart(position)\" [disabled]=\"!position.orderQuantity\">\n                        Додати в кошик\n                    </button>\n                </div>\n            </div>\n        </div>\n    </div>\n</ng-container>","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  FormsModule,\n  ReactiveFormsModule,\n} from '@angular/forms';\n\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\nimport { NgxPaginationModule } from 'ngx-pagination';\n\nimport { SearchComponent } from './components/search/search.component';\n\n@NgModule({\n  declarations: [SearchComponent],\n  imports: [\n    CommonModule,\n    NgxPaginationModule,\n    Ng2SearchPipeModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  exports: [SearchComponent],\n})\nexport class SearchModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth-layout',\n  templateUrl: './auth-layout.component.html',\n  styleUrls: ['./auth-layout.component.css']\n})\nexport class AuthLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  RouterStateSnapshot,\n} from '@angular/router';\n\nimport {\n  Observable,\n  of,\n} from 'rxjs';\nimport { AuthService } from 'src/app/auth/services/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthclientGuard implements CanActivate {\n  constructor(private auth: AuthService, private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> {\n    if (this.auth.isAuth()) {\n      return of(true);\n    } else {\n      this.router.navigate(['/login'], {\n        queryParams: {\n          accessDenied: true,\n        },\n      });\n      return of(false);\n    }\n  }\n  canActivateChild(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> {\n    return this.canActivate(route, state);\n  }\n}\n","import {\n  Component,\n  OnInit,\n} from '@angular/core';\n\nimport {\n  AdminAuthService,\n} from './admin/admin-auth/services/admin-auth.service';\nimport { AuthService } from './auth/services/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n  constructor(\n    private auth: AdminAuthService,\n    private authClient: AuthService\n  ) {}\n\n  ngOnInit() {\n    const localStorageToken = localStorage.getItem('auth-token');\n    const adminLocalStorageToken = localStorage.getItem('auth-token-admin');\n    if (localStorageToken !== null) {\n      this.authClient.setToken(localStorageToken);\n    }\n    if (adminLocalStorageToken !== null) {\n      this.auth.setToken(adminLocalStorageToken);\n    }\n  }\n}\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet>","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  RouterModule,\n  Routes,\n} from '@angular/router';\n\nimport { AuthclientGuard } from '../shared/classes/authclient.guard';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\n\nconst routes: Routes = [\n  {\n    path: 'dashboard',\n    canActivate: [AuthclientGuard],\n    component: DashboardComponent,\n  },\n];\n\n@NgModule({\n  declarations: [DashboardComponent],\n  imports: [CommonModule, RouterModule.forChild(routes)],\n})\nexport class DashboardModule {}\n","import {\n  Component,\n  OnInit\n} from '@angular/core';\n\n@Component({\n  selector: 'app-site-layout',\n  templateUrl: './site-layout.component.html',\n  styleUrls: ['./site-layout.component.css'],\n})\nexport class SiteLayoutComponent implements OnInit {\n  ngOnInit(): void {}\n}\n","<body>\n    <app-categories></app-categories>\n    <app-search></app-search>\n    <main></main>\n    <div class=\"container\">\n        <router-outlet></router-outlet>\n    </div>\n    <app-footer></app-footer>\n</body>","import {\n  Component,\n  OnInit,\n} from '@angular/core';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.css'],\n})\nexport class LoaderComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"row s12 center\">\n    <div class=\"col s3\"></div>\n    <div class=\"col s6 center\">\n        <div class=\"progress\">\n            <div class=\"indeterminate\"></div>\n        </div>\n    </div>\n</div>","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  FormsModule,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport {\n  RouterModule,\n  Routes,\n} from '@angular/router';\n\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\n\nconst routes: Routes = [\n  {\n    path: 'register',\n    component: RegisterComponent,\n  },\n  {\n    path: 'login',\n    component: LoginComponent,\n  },\n];\n\n@NgModule({\n  declarations: [RegisterComponent, LoginComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    ReactiveFormsModule,\n    FormsModule,\n  ],\n})\nexport class AuthModule {}\n","import {\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport {\n  ActivatedRoute,\n  Params,\n  Router,\n} from '@angular/router';\n\nimport {\n  Observable,\n  of,\n  Subscription,\n} from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { SearchService } from 'src/app/search/services/search.service';\n\nimport { CategoriesService } from '../../services/categories.service';\nimport { CategoryInterface } from '../../types/catergory.interface';\n\n@Component({\n  selector: 'app-categories-form',\n  templateUrl: './categories-form.component.html',\n  styleUrls: ['./categories-form.component.css'],\n})\nexport class CategoriesFormComponent implements OnInit, OnDestroy {\n  categories$: Observable<CategoryInterface[]> | undefined;\n  categories: CategoryInterface[] | undefined;\n  category: CategoryInterface | undefined;\n  cSub$: Subscription | undefined;\n\n  constructor(\n    private categoriesService: CategoriesService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private searchService: SearchService\n  ) {}\n\n  ngOnDestroy(): void {\n    this.cSub$?.unsubscribe();\n  }\n  ngOnInit(): void {\n    this.categories$ = this.categoriesService.fetch();\n\n    this.cSub$ = this.route.params\n      .pipe(\n        switchMap((params: Params) => {\n          if (params['id']) {\n            return this.categoriesService.getById(params['id']);\n          }\n          return of(null);\n        })\n      )\n      .subscribe((category) => {\n        if (category) {\n          this.category = category;\n          this.categoriesService.categoryName = category.name;\n          this.router.navigate([`category/${this.category._id}/shop`]);\n        }\n      });\n  }\n}\n","<div class=\"row\" *ngIf=\"categories$ | async as categories; else loader\">\n    <div class=\"col s12 m12 l9 right\">\n        <app-positions-form *ngIf=\"category?._id\" [categoryId]=\"category?._id\"></app-positions-form>\n    </div>\n</div>\n<ng-template #loader>\n    <app-loader class=\"loader\"></app-loader>\n</ng-template>","import {\n  HTTP_INTERCEPTORS,\n  HttpClientModule,\n} from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport {\n  FormsModule,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { ButtonModule } from 'primeng/button';\nimport { CalendarModule } from 'primeng/calendar';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { InputMaskModule } from 'primeng/inputmask';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { InputTextareaModule } from 'primeng/inputtextarea';\nimport { TabViewModule } from 'primeng/tabview';\nimport { ToolbarModule } from 'primeng/toolbar';\n\nimport { TokenInterceptor } from './admin/shared/classes/token.interceptor';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AuthModule } from './auth/auth.module';\nimport { CartModule } from './cart/cart.module';\nimport { CategoriesModule } from './categories/categories.module';\nimport { DashboardModule } from './dashboard/dashboard.module';\nimport { SearchModule } from './search/search.module';\nimport { UserTokenInterceptor } from './shared/classes/usertoken.interceptor';\nimport {\n  AuthLayoutComponent,\n} from './shared/layouts/auth-layout/auth-layout.component';\nimport {\n  SiteLayoutComponent,\n} from './shared/layouts/site-layout/site-layout.component';\nimport { FooterModule } from './shared/modules/footer/footer.module';\nimport { LoaderModule } from './shared/modules/loader/loader.module';\nimport { NavbarModule } from './shared/modules/navbar/navbar.module';\n\n@NgModule({\n  declarations: [AppComponent, AuthLayoutComponent, SiteLayoutComponent],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    DropdownModule,\n    TabViewModule,\n    ToolbarModule,\n    ButtonModule,\n    InputTextareaModule,\n    InputTextModule,\n    InputMaskModule,\n    CalendarModule,\n    Ng2SearchPipeModule,\n    NgxPaginationModule,\n    AuthModule,\n    NavbarModule,\n    FooterModule,\n    LoaderModule,\n    CategoriesModule,\n    SearchModule,\n    CartModule,\n    DashboardModule,\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      multi: true,\n      useClass: TokenInterceptor,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      multi: true,\n      useClass: UserTokenInterceptor,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { CartService } from 'src/app/cart/services/cart.service';\nimport { OrderService } from 'src/app/cart/services/order.service';\nimport { SearchService } from 'src/app/search/services/search.service';\nimport {\n  MaterialInstance,\n  MaterialService,\n} from 'src/app/shared/classes/material.service';\nimport {\n  PaginationStep,\n  SortingEnum,\n} from 'src/app/shared/constants/constants.enum';\n\nimport { CategoriesService } from '../../services/categories.service';\nimport { PositionService } from '../../services/position.service';\nimport { PositionInterface } from '../../types/position.interface';\n\n@Component({\n  selector: 'app-positions-form',\n  templateUrl: './positions-form.component.html',\n  styleUrls: ['./positions-form.component.css'],\n})\nexport class PositionsFormComponent\n  implements OnInit, OnDestroy, AfterViewInit\n{\n  @Input('categoryId') categoryId: string | undefined;\n  @ViewChild('modal') modalRef: ElementRef | undefined;\n  @ViewChild('quantityInput') quantityInput: ElementRef | undefined;\n\n  modal: MaterialInstance | undefined;\n  positions$: Observable<PositionInterface[]> | undefined;\n  positionsByInc$: Observable<PositionInterface[]> | undefined;\n  positionsByDec$: Observable<PositionInterface[]> | undefined;\n  positionId: any = null;\n  loading = false;\n  p: number = 1;\n  paginationStep = PaginationStep.step;\n  categoryName = '';\n  increase: string = SortingEnum.increase;\n  decrease: string = SortingEnum.decrease;\n\n  constructor(\n    private positionsService: PositionService,\n    public orderService: OrderService,\n    private categoriesService: CategoriesService,\n    private cartService: CartService,\n    private searchService: SearchService\n  ) {}\n\n  ngOnInit(): void {\n    this.loading = true;\n    this.categoryName = this.categoriesService.categoryName;\n    this.positions$ = this.positionsService.fetch(this.categoryId);\n    this.positionsByInc$ = this.positionsService.fetchByIncrease(\n      this.categoryId\n    );\n    this.positionsByDec$ = this.positionsService.fetchByDecrease(\n      this.categoryId\n    );\n    this.loading = false;\n  }\n\n  ngOnDestroy() {\n    this.modal?.destroy();\n  }\n\n  ngAfterViewInit() {\n    this.modal = MaterialService.initModal(this.modalRef!);\n  }\n\n  open() {\n    this.modal?.open();\n  }\n\n  onCancel() {\n    this.modal?.close();\n  }\n\n  onSelectPosition(position: PositionInterface) {\n    this.positionId = position._id;\n  }\n\n  addToCart(position: PositionInterface) {\n    this.cartService.addToCart(position);\n    MaterialService.toast(`Товар додано до кошика!`);\n    this.modal?.close();\n  }\n\n  get sortingSelected(): string {\n    return this.searchService.sorting;\n  }\n}\n","<ng-container>\n    <div class=\"center-align mb1 mt0 blue-text\">\n        <span class=\"category\">{{categoryName}}</span>\n    </div>\n\n    <div class=\"card-width row\" *ngIf=\"!loading; else loader\">\n        <div *ngIf=\"sortingSelected === ''\">\n            <div *ngIf=\"positions$ | async as positions\">\n                <div *ngFor=\"let position of positions | paginate: {itemsPerPage: paginationStep,currentPage: p};\" class=\"card col s12 m6 l4\">\n                    <div class=\"card-image waves-effect waves-block waves-light mb0\">\n                        <img class=\"img activator center-block\" src={{position.imageSrc}}>\n                    </div>\n                    <div class=\"card-content\">\n                        <hr class=\"hr1\">\n                        <div class=\"card-title activator grey-text text-darken-4\">\n                            <p class=\"name\" [title]=\"position.name\">{{position.name}}</p>\n                            <p></p>\n                        </div>\n                        <hr class=\"hr1\">\n                        <div class=\"cost center mb4\">{{position.cost}} грн</div>\n                        <div *ngIf=\"position.quantity\" class=\"availability green-text center mt4\">в наявності</div>\n                        <div *ngIf=\"!position.quantity\" class=\"availability blue-text center mt4\">очікується</div>\n                    </div>\n                    <div class=\"card-action mt0 center-align\" (click)=\"onSelectPosition(position)\">\n                        <button class=\"add waves-effect waves-light btn \" (click)=\"open()\" [disabled]=\"!position.quantity\"><i\n                                class=\"addIcon material-icons \">shopping_cart</i></button>\n                    </div>\n                    <div class=\"card-reveal\">\n                        <span class=\"card-title text-size grey lighten-5\">{{position.name}}<i\n                                class=\"material-icons right\">close</i></span>\n                        <span class=\"description\">{{position.description}}</span>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col s12\">\n                <pagination-controls (pageChange)=\"p = $event\" previousLabel=\"\" nextLabel=\"\">\n                </pagination-controls>\n            </div>\n        </div>\n    </div>\n    <div class=\"card-width row\" *ngIf=\"!loading; else loader\">\n        <div *ngIf=\"sortingSelected === increase\">\n            <div *ngIf=\"positionsByInc$ | async as positions\">\n                <div *ngFor=\"let position of positions | paginate: {itemsPerPage: 6,currentPage: p};\" class=\"card col s12 m6 l4\">\n                    <div class=\"card-image waves-effect waves-block waves-light mb0\">\n                        <img class=\"img activator center-block\" src={{position.imageSrc}}>\n                    </div>\n                    <div class=\"card-content\">\n                        <hr class=\"hr1\">\n                        <div class=\"card-title activator grey-text text-darken-4\">\n                            <p class=\"name\" [title]=\"position.name\">{{position.name}}</p>\n                            <p></p>\n                        </div>\n                        <hr class=\"hr1\">\n                        <div class=\"cost center mb4\">{{position.cost}} грн</div>\n                        <div *ngIf=\"position.quantity\" class=\"availability green-text center mt4\">в наявності</div>\n                        <div *ngIf=\"!position.quantity\" class=\"availability blue-text center mt4\">очікується</div>\n                    </div>\n                    <div class=\"card-action mt0 center-align\" (click)=\"onSelectPosition(position)\">\n                        <button class=\"add waves-effect waves-light btn \" (click)=\"open()\" [disabled]=\"!position.quantity\"><i\n                                class=\"addIcon material-icons \">shopping_cart</i></button>\n                    </div>\n                    <div class=\"card-reveal\">\n                        <span class=\"card-title text-size grey lighten-5\">{{position.name}}<i\n                                class=\"material-icons right\">close</i></span>\n                        <span class=\"description\">{{position.description}}</span>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col s12\">\n                <pagination-controls (pageChange)=\"p = $event\" previousLabel=\"\" nextLabel=\"\">\n                </pagination-controls>\n            </div>\n        </div>\n    </div>\n    <div class=\"card-width row\" *ngIf=\"!loading; else loader\">\n        <div *ngIf=\"sortingSelected === decrease\">\n            <div *ngIf=\"positionsByDec$ | async as positions\">\n                <div *ngFor=\"let position of positions | paginate: {itemsPerPage: 6,currentPage: p};\" class=\"card col s12 m6 l4\">\n                    <div class=\"card-image waves-effect waves-block waves-light mb0\">\n                        <img class=\"img activator center-block\" src={{position.imageSrc}}>\n                    </div>\n                    <div class=\"card-content\">\n                        <hr class=\"hr1\">\n                        <div class=\"card-title activator grey-text text-darken-4\">\n                            <p class=\"name\" [title]=\"position.name\">{{position.name}}</p>\n                            <p></p>\n                        </div>\n                        <hr class=\"hr1\">\n                        <div class=\"cost center mb4\">{{position.cost}} грн</div>\n                        <div *ngIf=\"position.quantity\" class=\"availability green-text center mt4\">в наявності</div>\n                        <div *ngIf=\"!position.quantity\" class=\"availability blue-text center mt4\">очікується</div>\n                    </div>\n                    <div class=\"card-action mt0 center-align\" (click)=\"onSelectPosition(position)\">\n                        <button class=\"add waves-effect waves-light btn \" (click)=\"open()\" [disabled]=\"!position.quantity\"><i\n                                class=\"addIcon material-icons \">shopping_cart</i></button>\n                    </div>\n                    <div class=\"card-reveal\">\n                        <span class=\"card-title text-size grey lighten-5\">{{position.name}}<i\n                                class=\"material-icons right\">close</i></span>\n                        <span class=\"description\">{{position.description}}</span>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col s12\">\n                <pagination-controls (pageChange)=\"p = $event\" previousLabel=\"\" nextLabel=\"\">\n                </pagination-controls>\n            </div>\n        </div>\n    </div>\n</ng-container>\n\n<ng-template #loader>\n    <app-loader></app-loader>\n</ng-template>\n\n<div class=\"modal\" #modal>\n    <div *ngIf=\"positions$ | async as positions\">\n        <div *ngFor=\"let position of positions\">\n            <div *ngIf=\"position._id == positionId\">\n                <div class=\"modal-content\">\n                    <span>Найменування товару: {{position.name}}</span>\n                    <span class=\"right\">Ціна: {{position.cost}} UAH</span>\n                    <input #quantityInput id=\"pos-quantity\" type=\"number\" [(ngModel)]=\"position.orderQuantity\">\n                    <label for=\"pos-quantity\">Кількість</label>\n                </div>\n                <div class=\"modal-footer\">\n                    <button type=\"button\" (click)=\"onCancel()\" class=\"modal-action waves-effect waves-black btn-flat\">\n                        Скасувати\n                    </button>\n                    <button class=\"modal-action btn waves-effect btn-small\" type=\"submit\" (click)=\"addToCart(position)\" [disabled]=\"!position.orderQuantity\">\n                        Додати в кошик\n                    </button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import {\n  Component,\n  ElementRef,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { PositionService } from 'src/app/categories/services/position.service';\nimport { MenuEnum } from 'src/app/shared/constants/constants.enum';\n\nimport { CartService } from '../../services/cart.service';\nimport { CartInterface } from '../../types/cart.interface';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css'],\n})\nexport class CartComponent implements OnInit {\n  @ViewChild('quantityInput') quantityInput: ElementRef | undefined;\n  cart: CartInterface[] = [];\n  totalCost = 0;\n  main = MenuEnum.main;\n  promo = MenuEnum.promo;\n\n  constructor(\n    private router: Router,\n    private cartService: CartService,\n    private positionsService: PositionService\n  ) {}\n\n  ngOnInit(): void {\n    this.cart = this.cartService.getCartItems();\n    this.totalCost = this.cartService.totalCost;\n  }\n\n  onCancel() {\n    this.router.navigate(['/']);\n  }\n\n  delete(position: CartInterface) {\n    this.cartService.deleteCartItem(position);\n    this.cart = this.cartService.getCartItems();\n    this.totalCost = this.cartService.totalCost;\n    if (this.cart.length === 0) {\n      this.router.navigate(['/']);\n    }\n  }\n}\n","<div class=\"container grey lighten-5 order-order col center\">\n    <hr>\n    <p class=\"blue-text cart\">КОШИК</p>\n    <hr>\n    <div *ngIf=\"cart.length > 0; else empty\">\n        <div *ngFor=\"let position of cart; let i = index\" class=\"row\">\n            <table class=\"table-cart container centered mt4\">\n                <thead>\n                    <tr *ngIf=\"i == 0 \">\n                        <th class=\"image\"></th>\n                        <th class=\"name name-align\">Назва</th>\n                        <th class=\"quantity\">Кількість</th>\n                        <th>Ціна</th>\n                        <th></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td class=\"image\"><img class=\"img activator \" src={{position.imageSrc}}></td>\n                        <td class=\"name name-align\">{{position.name}}</td>\n                        <td class=\"quantity\">\n                            <div class=\"quant\">{{position.orderQuantity}}</div>\n                        </td>\n                        <td *ngIf=\"position.groupPages === main\" class=\"name\">\n                            {{position.cost}} грн\n                        </td>\n                        <td *ngIf=\"position.groupPages === promo\" class=\"name\">\n                            {{position.promoCost}} грн\n                        </td>\n                        <td class=\"name\">\n                            <button class=\"btn btn-small red\" (click)=\"delete(position)\">\n                                <i class=\"material-icons\">delete</i>\n                            </button>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        <div class=\"mb4\">\n            <div class=\"left mb4 total right\"><span>Загальна сума замовлення: {{totalCost}} грн </span></div>\n            <div class=\"left mb4\">\n                <button type=\"button\" (click)=\"onCancel()\" class=\"modal-action waves-effect waves-black btn-flat\">\n                    Повернутися до покупок\n                </button>\n                <button class=\" btn waves-effect btn-small\" type=\"submit\" [routerLink]=\"['/order']\">\n                    Оформити замовлення\n                </button>\n            </div>\n        </div>\n    </div>\n    <ng-template #empty>\n        <div class=\"center-align mt4\">Кошик порожній<i class=\"material-icons\">sentiment_very_dissatisfied</i></div>\n    </ng-template>\n</div>","import {\n  Component,\n  ElementRef,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { CartService } from 'src/app/cart/services/cart.service';\nimport { OrderService } from 'src/app/cart/services/order.service';\nimport { SearchService } from 'src/app/search/services/search.service';\nimport {\n  MaterialInstance,\n  MaterialService,\n} from 'src/app/shared/classes/material.service';\nimport {\n  PaginationStep,\n  SortingEnum,\n} from 'src/app/shared/constants/constants.enum';\n\nimport { PositionService } from '../../services/position.service';\nimport { PositionInterface } from '../../types/position.interface';\n\n@Component({\n  selector: 'app-promo-positions',\n  templateUrl: './promo-positions.component.html',\n  styleUrls: ['./promo-positions.component.css'],\n})\nexport class PromoPositionsComponent implements OnInit {\n  @ViewChild('modal') modalRef: ElementRef | undefined;\n  @ViewChild('quantityInput') quantityInput: ElementRef | undefined;\n\n  modal: MaterialInstance | undefined;\n  promoPositions$: Observable<PositionInterface[]> | undefined;\n  promoPositionsByInc$: Observable<PositionInterface[]> | undefined;\n  promoPositionsByDec$: Observable<PositionInterface[]> | undefined;\n  positionId: any = null;\n  loading = false;\n  p: number = 1;\n  paginationStep = PaginationStep.step;\n  increase = SortingEnum.increase;\n  decrease = SortingEnum.decrease;\n\n  constructor(\n    private positionsService: PositionService,\n    public orderService: OrderService,\n    private cartService: CartService,\n    private searchService: SearchService\n  ) {}\n\n  ngOnInit(): void {\n    this.loading = true;\n\n    this.promoPositions$ = this.positionsService.fetchPromo();\n    this.promoPositionsByInc$ = this.positionsService.fetchPromoByIncrease();\n    this.promoPositionsByDec$ = this.positionsService.fetchPromoByDecrease();\n\n    this.loading = false;\n  }\n\n  ngOnDestroy() {\n    this.modal?.destroy();\n  }\n\n  ngAfterViewInit() {\n    this.modal = MaterialService.initModal(this.modalRef!);\n  }\n\n  open() {\n    this.modal?.open();\n  }\n\n  onCancel() {\n    this.modal?.close();\n  }\n  onSelectPosition(position: PositionInterface) {\n    this.positionId = position._id;\n  }\n\n  addToCart(position: PositionInterface): void {\n    this.cartService.addToCart(position);\n    MaterialService.toast(`Товар додано до кошика!`);\n    this.modal?.close();\n  }\n\n  get sortingSelected(): string {\n    return this.searchService.sorting;\n  }\n}\n","<div class=\"card-width row\" *ngIf=\"!loading; else loader\">\n    <div class=\"col s9 right\">\n        <div *ngIf=\"sortingSelected === ''\">\n            <div *ngIf=\"promoPositions$ | async as positions\">\n                <div *ngFor=\"let position of positions | paginate: {itemsPerPage: 6,currentPage: p};\" class=\"card col s12 m6 l4\">\n                    <div class=\"card-image waves-effect waves-block waves-light mb0\">\n                        <img class=\"img-responsive\" src=\"../../../../assets/akcia.png\">\n                        <img class=\"img activator center-block\" src={{position.imageSrc}}>\n                    </div>\n                    <div class=\"card-content\">\n                        <hr class=\"hr1\">\n                        <div class=\"card-title activator grey-text text-darken-4\">\n                            <p class=\"name\" [title]=\"position.name\">{{position.name}}</p>\n                            <p></p>\n                        </div>\n                        <hr class=\"hr1\">\n                        <div class=\"cost center mb4\">\n                            <div class=\"promo-cost\">{{position.cost}} </div>{{position.promoCost}} грн\n                        </div>\n                        <div *ngIf=\"position.quantity\" class=\"availability green-text center mt4\">в наявності</div>\n                        <div *ngIf=\"!position.quantity\" class=\"availability blue-text center mt4\">очікується</div>\n                    </div>\n                    <div class=\"card-action mt0 center-align\" (click)=\"onSelectPosition(position)\">\n                        <button class=\"add waves-effect waves-light btn \" (click)=\"open()\" [disabled]=\"!position.quantity\"><i\n                                class=\"addIcon material-icons \">shopping_cart</i></button>\n                    </div>\n                    <div class=\"card-reveal\">\n                        <span class=\"card-title text-size grey lighten-5\">{{position.name}}<i\n                                class=\"material-icons right\">close</i></span>\n                        <span class=\"description\">{{position.description}}</span>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col s12\">\n                <pagination-controls (pageChange)=\"p = $event\" previousLabel=\"\" nextLabel=\"\">\n                </pagination-controls>\n            </div>\n        </div>\n    </div>\n</div>\n<div class=\"card-width row\" *ngIf=\"!loading; else loader\">\n    <div class=\"col s9 right\">\n        <div *ngIf=\"sortingSelected === increase\">\n            <div *ngIf=\"promoPositionsByInc$ | async as positions\">\n                <div *ngFor=\"let position of positions | paginate: {itemsPerPage: 6,currentPage: p};\" class=\"card col s12 m6 l4\">\n                    <div class=\"card-image waves-effect waves-block waves-light mb0\">\n                        <img class=\"img-responsive\" src=\"../../../../assets/akcia.png\">\n                        <img class=\"img activator center-block\" src={{position.imageSrc}}>\n                    </div>\n                    <div class=\"card-content\">\n                        <hr class=\"hr1\">\n                        <div class=\"card-title activator grey-text text-darken-4\">\n                            <p class=\"name\" [title]=\"position.name\">{{position.name}}</p>\n                            <p></p>\n                        </div>\n                        <hr class=\"hr1\">\n                        <div class=\"cost center mb4\">\n                            <div class=\"promo-cost\">{{position.cost}} </div>{{position.promoCost}} грн\n                        </div>\n                        <div *ngIf=\"position.quantity\" class=\"availability green-text center mt4\">в наявності</div>\n                        <div *ngIf=\"!position.quantity\" class=\"availability blue-text center mt4\">очікується</div>\n                    </div>\n                    <div class=\"card-action mt0 center-align\" (click)=\"onSelectPosition(position)\">\n                        <button class=\"add waves-effect waves-light btn \" (click)=\"open()\" [disabled]=\"!position.quantity\"><i\n                                class=\"addIcon material-icons \">shopping_cart</i></button>\n                    </div>\n                    <div class=\"card-reveal\">\n                        <span class=\"card-title text-size grey lighten-5\">{{position.name}}<i\n                                class=\"material-icons right\">close</i></span>\n                        <span class=\"description\">{{position.description}}</span>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col s12\">\n                <pagination-controls (pageChange)=\"p = $event\" previousLabel=\"\" nextLabel=\"\">\n                </pagination-controls>\n            </div>\n        </div>\n    </div>\n</div>\n<div class=\"card-width row\" *ngIf=\"!loading; else loader\">\n    <div class=\"col s9 right\">\n        <div *ngIf=\"sortingSelected === decrease\">\n            <div *ngIf=\"promoPositionsByDec$ | async as positions\">\n                <div *ngFor=\"let position of positions | paginate: {itemsPerPage: paginationStep, currentPage: p};\" class=\"card col s12 m6 l4\">\n                    <div class=\"card-image waves-effect waves-block waves-light mb0\">\n                        <img class=\"img-responsive\" src=\"../../../../assets/akcia.png\">\n                        <img class=\"img activator center-block\" src={{position.imageSrc}}>\n                    </div>\n                    <div class=\"card-content\">\n                        <hr class=\"hr1\">\n                        <div class=\"card-title activator grey-text text-darken-4\">\n                            <p class=\"name\" [title]=\"position.name\">{{position.name}}</p>\n                            <p></p>\n                        </div>\n                        <hr class=\"hr1\">\n                        <div class=\"cost center mb4\">\n                            <div class=\"promo-cost\">{{position.cost}} </div>{{position.promoCost}} грн\n                        </div>\n                        <div *ngIf=\"position.quantity\" class=\"availability green-text center mt4\">в наявності</div>\n                        <div *ngIf=\"!position.quantity\" class=\"availability blue-text center mt4\">очікується</div>\n                    </div>\n                    <div class=\"card-action mt0 center-align\" (click)=\"onSelectPosition(position)\">\n                        <button class=\"add waves-effect waves-light btn \" (click)=\"open()\" [disabled]=\"!position.quantity\"><i\n                                class=\"addIcon material-icons \">shopping_cart</i></button>\n                    </div>\n                    <div class=\"card-reveal\">\n                        <span class=\"card-title text-size grey lighten-5\">{{position.name}}<i\n                                class=\"material-icons right\">close</i></span>\n                        <span class=\"description\">{{position.description}}</span>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col s12\">\n                <pagination-controls (pageChange)=\"p = $event\" previousLabel=\"\" nextLabel=\"\">\n                </pagination-controls>\n            </div>\n        </div>\n    </div>\n</div>\n\n<ng-template #loader>\n    <app-loader></app-loader>\n</ng-template>\n\n\n<div class=\"modal\" #modal>\n    <div *ngIf=\"promoPositions$ | async as positions\">\n        <div *ngFor=\"let position of positions\">\n            <div *ngIf=\"position._id == positionId\">\n                <div class=\"modal-content\">\n                    <span>Найменування товару: {{position.name}}</span>\n                    <span class=\"right\">Ціна: {{ position.promoCost}} UAH</span>\n                    <input #quantityInput id=\"pos-quantity\" type=\"number\" [(ngModel)]=\"position.orderQuantity\">\n                    <label for=\"pos-quantity\">Кількість</label>\n                </div>\n                <div class=\"modal-footer\">\n                    <button type=\"button\" (click)=\"onCancel()\" class=\"modal-action waves-effect waves-black btn-flat\">\n                        Скасувати\n                    </button>\n                    <button class=\"modal-action btn waves-effect btn-small\" type=\"submit\" (click)=\"addToCart(position)\" [disabled]=\"!position.orderQuantity\">\n                        Додати в кошик\n                    </button>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</div>","import { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport {\n  RouterModule,\n  Routes,\n} from '@angular/router';\n\nimport { NgxPaginationModule } from 'ngx-pagination';\n\nimport {\n  SiteLayoutComponent,\n} from '../shared/layouts/site-layout/site-layout.component';\nimport { LoaderModule } from '../shared/modules/loader/loader.module';\nimport {\n  CategoriesFormComponent,\n} from './components/categories-form/categories-form.component';\nimport {\n  CategoriesComponent,\n} from './components/categories/categories.component';\nimport {\n  PositionsFormComponent,\n} from './components/positions-form/positions-form.component';\nimport {\n  PromoPositionsComponent,\n} from './components/promo-positions/promo-positions.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SiteLayoutComponent,\n    children: [\n      { path: '', redirectTo: 'category/promo', pathMatch: 'full' },\n      {\n        path: 'category/promo',\n        component: PromoPositionsComponent,\n      },\n      {\n        path: 'category',\n        component: CategoriesComponent,\n      },\n      {\n        path: 'category/:id',\n        component: CategoriesFormComponent,\n      },\n      {\n        path: 'category/:id/shop',\n        component: CategoriesFormComponent,\n      },\n    ],\n  },\n];\n\n@NgModule({\n  declarations: [\n    CategoriesComponent,\n    CategoriesFormComponent,\n    PositionsFormComponent,\n    PromoPositionsComponent,\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    LoaderModule,\n    HttpClientModule,\n    FormsModule,\n    NgxPaginationModule,\n  ],\n  exports: [\n    CategoriesComponent,\n    CategoriesFormComponent,\n    PositionsFormComponent,\n  ],\n})\nexport class CategoriesModule {}\n","export enum SortingEnum {\n  increase = 'за зростанням',\n  decrease = 'за спаданням',\n}\n\nexport enum MenuEnum {\n  main = 'main',\n  promo = 'promo',\n}\n\nexport enum DeliveryEnum {\n  novaposhta = 'Нова пошта',\n}\n\nexport enum PaymentEnum {\n  cash = 'Готівкою',\n  card = 'Оплата на карту',\n  postpay = 'Післяплата \"Нова Пошта\"',\n}\n\nexport enum PaginationStep {\n  step = 6,\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { AdminLoginInterface } from '../types/admin-login.interface';\nimport { AdminRegisterInterface } from '../types/admin-password.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AdminAuthService {\n  private token = '';\n\n  constructor(private http: HttpClient) {}\n\n  login(user: AdminLoginInterface): Observable<{ token: string }> {\n    return this.http.post<{ token: string }>('/api/admin/login', user).pipe(\n      tap(({ token }) => {\n        localStorage.setItem('auth-token-admin', token);\n        this.setToken(token);\n      })\n    );\n  }\n\n  setToken(token: string) {\n    this.token = token;\n  }\n\n  getToken(): string {\n    return this.token;\n  }\n\n  isAuthAdmin(): boolean {\n    return !!this.token;\n  }\n\n  logout() {\n    this.setToken('');\n    localStorage.clear();\n  }\n\n  register(user: AdminRegisterInterface): Observable<AdminRegisterInterface> {\n    return this.http.post<AdminRegisterInterface>('/api/admin/register', user);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>Welcome to dashboard page!</p>","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  FormsModule,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport {\n  RouterModule,\n  Routes,\n} from '@angular/router';\n\nimport { ButtonModule } from 'primeng/button';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { TabViewModule } from 'primeng/tabview';\nimport { ToolbarModule } from 'primeng/toolbar';\n\nimport { CartComponent } from './components/cart/cart.component';\nimport { OrderComponent } from './components/order/order.component';\n\nconst routes: Routes = [\n  {\n    path: 'cart',\n    component: CartComponent,\n  },\n  {\n    path: 'order',\n    component: OrderComponent,\n  },\n];\n@NgModule({\n  declarations: [CartComponent, OrderComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    FormsModule,\n    ReactiveFormsModule,\n    DropdownModule,\n    TabViewModule,\n    ToolbarModule,\n    ButtonModule,\n  ],\n})\nexport class CartModule {}\n","import {\n  Component,\n  OnInit,\n} from '@angular/core';\n\nimport {\n  Observable,\n  Subscription,\n} from 'rxjs';\nimport { SearchService } from 'src/app/search/services/search.service';\n\nimport { CategoriesService } from '../../services/categories.service';\nimport { CategoryInterface } from '../../types/catergory.interface';\n\n@Component({\n  selector: 'app-categories',\n  templateUrl: './categories.component.html',\n  styleUrls: ['./categories.component.css'],\n})\nexport class CategoriesComponent implements OnInit {\n  categories$: Observable<CategoryInterface[]> | undefined;\n  cSub: Subscription | undefined;\n\n  constructor(\n    private categoriesService: CategoriesService,\n    private searchService: SearchService\n  ) {}\n\n  ngOnInit(): void {\n    this.categories$ = this.categoriesService.fetch();\n  }\n}\n","<div class=\"row\" *ngIf=\"categories$ | async as categories; else loader\">\n    <div class=\"col s3\">\n        <ul id=\"slide-out\" class=\"sidenav sidenav-fixed\" style=\"width: 25%\">\n            <div class=\"header blue-text bold\">Категорії товарів</div>\n            <hr class=\"hr1\">\n            <li class=\"bold\" *ngFor=\"let category of categories\" routerLinkActive=\"active\">\n                <a [routerLink]=\"['/category', category._id]\" class=\"waves-effect waves-orange\">{{category.name}}\n                    <a class=\" black-text secondary-content\">\n                        <i class=\"name material-icons\">keyboard_arrow_right</i></a>\n                </a>\n            </li>\n            <li class=\"bold\">\n                <a [routerLink]=\"['/category/promo']\" class=\"promotions waves-effect waves-orange\">Акції\n                    <a class=\"promotions secondary-content\">\n                        <i class=\"name material-icons\">keyboard_arrow_right</i></a>\n                </a>\n            </li>\n        </ul>\n    </div>\n</div>\n<ng-template #loader>\n    <app-loader></app-loader>\n</ng-template>","import { NgModule } from '@angular/core';\nimport {\n  RouterModule,\n  Routes,\n} from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: 'admin',\n    loadChildren: () =>\n      import('./admin/admin.module').then((m) => m.AdminModule),\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import {\n  Component,\n  OnInit,\n} from '@angular/core';\nimport {\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport {\n  ActivatedRoute,\n  Router,\n} from '@angular/router';\n\nimport { Subscription } from 'rxjs';\nimport { MaterialService } from 'src/app/shared/classes/material.service';\n\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css'],\n})\nexport class RegisterComponent implements OnInit {\n  form = new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.minLength(6)]),\n    password: new FormControl('', [\n      Validators.required,\n      Validators.minLength(8),\n    ]),\n  });\n\n  registerSub: Subscription | undefined;\n  constructor(\n    private auth: AuthService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {}\n\n  ngOnDestroy() {\n    if (this.registerSub) {\n      this.registerSub.unsubscribe();\n    }\n  }\n\n  get f() {\n    return this.form.controls;\n  }\n\n  onSubmit() {\n    this.form.disable();\n    this.registerSub = this.auth.register(this.form.value).subscribe(\n      () => {\n        this.router.navigate(['/login'], {\n          queryParams: {\n            registered: true,\n          },\n        });\n      },\n      (error) => {\n        MaterialService.toast(error.error.message);\n        this.form.enable();\n      }\n    );\n  }\n}\n","<div class=\"auth-block\">\n    <form class=\"card\" [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"card-content\">\n            <span class=\"card-title\">Введіть дані для реєстрації</span>\n            <div class=\"input-field\">\n                <input formControlName=\"email\" id=\"email\" type=\"email\" [ngClass]=\"{'invalid': f.email.invalid && f.email.touched}\">\n                <label for=\"email\">Логін:</label>\n                <span class=\"helper-text red-text\" *ngIf=\"f.email.invalid && f.email.touched\">\n                    <span *ngIf=\"f.email.errors?.required\">Поле Логін не повинно бути порожнім</span>\n                <span *ngIf=\"f.email.errors?.minlength\n                    && f.email.errors?.minlength.requiredLength\">\n                        Логін повинен містити більш {{f.email.errors?.minlength.requiredLength}} символів.\n                        Ви ввели {{f.email.errors?.minlength.actualLength}} символи(ів)\n                    </span>\n                </span>\n            </div>\n            <div class=\"input-field\">\n                <input formControlName=\"password\" id=\"password\" type=\"password\" [ngClass]=\"{'invalid': f.password.invalid && f.password.touched}\">\n                <label for=\"password\">Пароль:</label>\n                <span class=\"helper-text red-text\" *ngIf=\"f.password.invalid && f.password.touched\">\n                    <span *ngIf=\"f.password.errors?.required\">Поле пароля не повинно бути порожнім</span>\n                <span *ngIf=\"f.password.errors?.minlength\n                     && f.password.errors?.minlength.requiredLength\">\n                        Пароль повинен містити більш{{f.password.errors?.minlength.requiredLength}} символів.\n                        Ви ввели {{f.password.errors?.minlength.actualLength}} символи(ів)\n                    </span>\n                </span>\n            </div>\n        </div>\n        <div class=\"card-action\">\n            <button type=\"submit\" class=\"modal-action btn waves-effect\" [disabled]=\"form.invalid || form.disabled\">Зареєструватися</button>\n        </div>\n    </form>\n</div>","import 'materialize-css/dist/js/materialize';\n\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}