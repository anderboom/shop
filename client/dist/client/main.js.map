{"version":3,"sources":["./src/app/admin/shared/services/auth.service.ts","./src/app/cart-page/cart-page.component.ts","./src/app/cart-page/cart-page.component.html","./src/app/categories-page/categories-form/categories-form.component.ts","./src/app/categories-page/categories-form/categories-form.component.html","./src/app/admin/shared/classes/token.interceptor.ts","./src/app/admin/shared/services/order.service.ts","./src/app/shared/components/loader/loader.component.ts","./src/app/shared/components/loader/loader.component.html","./src/app/categories-page/categories-form/filtered-position-form/filtered-position-form.component.ts","./src/app/categories-page/categories-form/filtered-position-form/filtered-position-form.component.html","./src/app/shared/services/search.service.ts","./src/environments/environment.ts","./src/app/dashboard-page/dashboard-page.component.ts","./src/app/dashboard-page/dashboard-page.component.html","./src/app/categories-page/categories-page.component.ts","./src/app/categories-page/categories-page.component.html","./src/app/shared/services/authclient.service.ts","./src/app/admin/shared/services/categories.service.ts","./src/app/shared/classes/usertoken.interceptor.ts","./src/app/admin/shared/services/positions.service.ts","./src/app/shared/layouts/auth-layout/auth-layout.component.ts","./src/app/shared/layouts/auth-layout/auth-layout.component.html","./src/app/shared/classes/authclient.guard.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/shared/services/novaposhta.service.ts","./src/app/shared/layouts/site-layout/site-layout.component.ts","./src/app/shared/layouts/site-layout/site-layout.component.html","./src/app/app.module.ts","./src/app/search-filter-form/search-filter-form.component.ts","./src/app/search-filter-form/search-filter-form.component.html","./src/app/cart-page/order-form/order-form.component.ts","./src/app/cart-page/order-form/order-form.component.html","./src/app/register-page/register-page.component.ts","./src/app/register-page/register-page.component.html","./src/app/login-page/login-page.component.ts","./src/app/login-page/login-page.component.html","./src/app/admin/shared/classes/material.service.ts","./src/app/categories-page/categories-form/positions-form/positions-form.component.ts","./src/app/categories-page/categories-form/positions-form/positions-form.component.html","./src/app/app-routing.module.ts","./src/app/footer-form/footer-form.component.ts","./src/app/footer-form/footer-form.component.html","./src/app/navbar-form/navbar-form.component.ts","./src/app/navbar-form/navbar-form.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { User } from '../interfaces';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthService {\n\n    private token = ''\n\n    constructor(private http: HttpClient) {}\n\n    login(user: User): Observable<{token: string}> {\n       return this.http.post<{token: string}>('/api/admin/login', user)\n       .pipe(\n          tap(({ token }) => {\n            localStorage.setItem('auth-token', token);\n            this.setToken(token);\n          })\n       )\n    }\n\n    setToken(token: string) {\n        this.token = token;\n      }\n\n      getToken(): string {\n        return this.token;\n      }\n    \n      isAuth(): boolean {\n        return !!this.token;\n      }\n    \n      logout() {\n        this.setToken('');\n        localStorage.clear();\n      }\n\n      register(user: User): Observable<User> {\n        return this.http.post<User>('/api/admin/register', user);\n      }\n}\n\n\n","import {\n  Component,\n  ElementRef,\n  OnInit,\n  ViewChild\n} from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { OrderPosition } from 'src/app/admin/shared/interfaces';\n\nimport { OrderService } from '../admin/shared/services/order.service';\n\n@Component({\n  selector: 'app-cart-page',\n  templateUrl: './cart-page.component.html',\n  styleUrls: ['./cart-page.component.css'],\n})\nexport class CartPageComponent implements OnInit {\n  @ViewChild('quantityInput') quantityInput: ElementRef | undefined;\n  orders: OrderPosition[] = [];\n  totalCost = 0;\n  positionQuantity = 1;\n\n  constructor(private ordersService: OrderService, private router: Router) {}\n\n  ngOnInit(): void {\n    this.orders = this.ordersService.list;\n    this.totalCost = this.ordersService.totalCost;\n\n    // let totalOrder: OrderPosition[] = JSON.parse(\n    //   localStorage.getItem('cart') || '{}'\n    // );\n    let sumTotalCost = JSON.parse(localStorage.getItem('total') || '0');\n    // this.orders = totalOrder;\n    this.totalCost = sumTotalCost;\n  }\n\n  onCancel() {\n    this.router.navigate(['/']);\n  }\n\n  delete(order: OrderPosition) {\n    this.totalCost -= order.cost * order.orderQuantity!;\n    this.orders.splice(this.orders.indexOf(order), 1);\n    this.ordersService.totalQuantity -= order.orderQuantity!;\n    this.ordersService.totalCost = this.totalCost;\n\n    localStorage.setItem('cart', JSON.stringify(this.orders));\n    localStorage.setItem('total', JSON.stringify(this.totalCost));\n    localStorage.setItem(\n      'totalQuantity',\n      JSON.stringify(this.ordersService.totalQuantity)\n    );\n    this.ordersService.remove(order);\n    if (this.orders.length === 0) {\n      this.ordersService.totalCost = 0;\n      this.ordersService.totalQuantity = 0;\n      this.ordersService.list = [];\n      localStorage.removeItem('total');\n      localStorage.removeItem('totalQuantity');\n      localStorage.removeItem('cart');\n    }\n  }\n}\n","<div class=\"container grey lighten-5 order-order col center\">\n    <hr>\n    <p class=\"blue-text cart\">КОШИК</p>\n    <hr>\n    <div *ngIf=\"orders.length > 0; else empty\">\n        <div *ngFor=\"let order of orders; let i = index\" class=\"row\">\n            <table class=\"table-cart container centered mt4\">\n                <thead>\n                    <tr *ngIf=\"i == 0 \">\n                        <th class=\"image\"></th>\n                        <th class=\"name name-align\">Назва</th>\n                        <th class=\"quantity\">Кількість</th>\n                        <th>Ціна</th>\n                        <th></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td class=\"image\"><img class=\"img activator \" src={{order.imageSrc}}></td>\n                        <td class=\"name name-align\">{{order.name}}</td>\n                        <td class=\"quantity\">\n                            <div class=\"quant\">{{order.orderQuantity}}</div>\n                            <!-- <input #quantityInput class=\"col s6\" id=\"pos-quantity\" min=1 type=\"number\" [(ngModel)]=\"order.orderQuantity\"> -->\n                        </td>\n                        <td class=\"name\">\n                            {{order.cost}} грн</td>\n                        <td class=\"name\">\n                            <button class=\"btn btn-small red\" (click)=\"delete(order)\">\n                                <i class=\"material-icons\">delete</i>\n                            </button>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        <div class=\"mb4\">\n            <div class=\"left mb4 total right\"><span>Загальна сума замовлення: {{totalCost}} грн </span></div>\n            <div class=\"left mb4\">\n                <button type=\"button\" (click)=\"onCancel()\" class=\"modal-action waves-effect waves-black btn-flat\">\n                    Повернутися до покупок\n                </button>\n                <button class=\" btn waves-effect btn-small\" type=\"submit\" [routerLink]=\"['/order']\">\n                    Оформити замовлення\n                </button>\n            </div>\n        </div>\n    </div>\n    <ng-template #empty>\n        <div class=\"center-align mt4\">Кошик порожній<i class=\"material-icons\">sentiment_very_dissatisfied</i></div>\n    </ng-template>\n</div>","import {\n  Component,\n  OnInit\n} from '@angular/core';\nimport {\n  ActivatedRoute,\n  Params,\n  Router\n} from '@angular/router';\n\nimport {\n  Observable,\n  of\n} from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { MaterialService } from 'src/app/admin/shared/classes/material.service';\nimport { Category } from 'src/app/admin/shared/interfaces';\nimport {\n  CategoriesService\n} from 'src/app/admin/shared/services/categories.service';\nimport { SearchService } from 'src/app/shared/services/search.service';\n\n@Component({\n  selector: 'app-categories-form',\n  templateUrl: './categories-form.component.html',\n  styleUrls: ['./categories-form.component.css'],\n})\nexport class CategoriesFormComponent implements OnInit {\n  categories$: Observable<Category[]> | undefined;\n\n  category!: Category;\n\n  constructor(\n    private route: ActivatedRoute,\n    private categoriesService: CategoriesService,\n    private router: Router,\n    private searchService: SearchService\n  ) {}\n\n  ngOnInit(): void {\n    this.categories$ = this.categoriesService.fetch();\n    this.route.params\n      .pipe(\n        switchMap((params: Params) => {\n          if (params['id']) {\n            return this.categoriesService.getById(params['id']);\n          }\n          return of(null);\n        })\n      )\n      .subscribe(\n        (category) => {\n          if (category) {\n            this.category = category;\n            this.categoriesService.categoryName = category.name;\n            this.router.routeReuseStrategy.shouldReuseRoute = function () {\n              return false;\n            };\n          }\n        },\n        (error) => MaterialService.toast(error.error.message)\n      );\n  }\n\n  get isSearch(): boolean {\n    return this.searchService.isSearch;\n  }\n\n  get isBrand(): boolean {\n    return this.searchService.isBrand;\n  }\n  get isPrice(): boolean {\n    return this.searchService.isPrice;\n  }\n}\n","<div class=\"row\" *ngIf=\"categories$ | async as categories; else loader\">\n    <!-- <div class=\"categories col s9 m3 l3\" *ngIf=\"categories$ | async as categories; else loader\">\n        <ul class=\"collection \">\n            <li class=\"collection-item grey lighten-3 blue-text bold menu\">Категорії товарів</li>\n            <div class=\"active\">\n                <li class=\"collection-item grey lighten-5 category \" *ngFor=\"let category of categories\">\n                    <div class=\"name bold waves-effect \" *ngIf=\"category._id\" [routerLink]=\"['/categories', category._id]\">\n                        <a class=\" black-text\">{{category.name}}</a>\n                        <a class=\"black-text secondary-content\">\n                            <i class=\"name material-icons mr0\">keyboard_arrow_right</i></a>\n                    </div>\n                </li>\n            </div>\n        </ul>\n        <div>\n            <ul class=\"collection \">\n                <li class=\"collection-item grey lighten-5\">\n                    <div class=\"name bold waves-effect\"><i class=\"blue-text material-icons tiny\">redeem</i>\n                        <a class=\"promotions\">Акції</a><i class=\"blue-text material-icons tiny\">redeem</i>\n                        <a class=\"promotions secondary-content\">\n                            <i class=\"name material-icons\">keyboard_arrow_right</i></a>\n                    </div>\n                </li>\n            </ul>\n        </div>\n    </div> -->\n\n    <div class=\"col s3\" *ngIf=\"categories$ | async as categories; else loader\">\n        <ul id=\"slide-out\" class=\"sidenav sidenav-fixed\" style=\"width: 25%\">\n            <div class=\"header blue-text bold\">Категорії товарів</div>\n            <hr class=\"hr1\">\n            <li class=\"bold\" routerLinkActive=\"active\" *ngFor=\"let category of categories\">\n                <a [routerLink]=\"['/category', category._id]\" class=\"waves-effect waves-orange\">{{category.name}}\n                    <a class=\" black-text secondary-content\">\n                        <i class=\"name material-icons\">keyboard_arrow_right</i></a>\n                </a>\n            </li>\n            <li class=\"bold\">\n                <a class=\"promotions waves-effect waves-orange\">Акції\n                    <a class=\"promotions secondary-content\">\n                        <i class=\"name material-icons\">keyboard_arrow_right</i></a>\n                </a>\n            </li>\n        </ul>\n    </div>\n\n    <div class=\"col s12 m12 l9 right\">\n        <div>\n            <app-search-filter-form></app-search-filter-form>\n        </div>\n        <div *ngIf=\"!isSearch\">\n            <div *ngIf=\"!isBrand\">\n                <div *ngIf=\"isPrice\">\n                    <app-filtered-position-form *ngIf=\"category?._id\" [categoryId]=\"category._id\">\n                    </app-filtered-position-form>\n                </div>\n                <div *ngIf=\"!isPrice\">\n                    <app-positions-form *ngIf=\"category?._id\" [categoryId]=\"category._id\"></app-positions-form>\n                </div>\n            </div>\n        </div>\n\n    </div>\n</div>\n<ng-template #loader>\n    <app-loader></app-loader>\n</ng-template>","import {\n  HttpErrorResponse,\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport {\n  Observable,\n  throwError\n} from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { AuthService } from '../services/auth.service';\n\n@Injectable()\n  \n  export class TokenInterceptor implements HttpInterceptor{\n  \n    constructor(private auth: AuthService, private router: Router) {}\n  \n    intercept( req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        if(this.auth.isAuth()) {\n          req = req.clone({\n              setHeaders: {\n                  Authorization: this.auth.getToken()\n              }\n          })\n        }\n        return next.handle(req).pipe(\n            catchError(\n                ( error: HttpErrorResponse) => this.handleAuthError(error)\n            )\n        )\n    }\n  \n    private handleAuthError(error: HttpErrorResponse): Observable<any> {\n        if (error.status === 401) {\n          this.router.navigate(['/api/admin'], {\n              queryParams: {\n                  sessionFailed: true\n              }\n          })\n        }\n        return throwError(error)\n    }\n  }\n  ","import {\n  HttpClient,\n  HttpParams\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\nimport {\n  Order,\n  OrderPosition,\n  Position\n} from '../interfaces';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderService {\n  public list: OrderPosition[] = [];\n  public totalQuantity = 0;\n  public totalCost = 0;\n\n  constructor(private http: HttpClient) {\n    let localTotalQuantity = JSON.parse(\n      localStorage.getItem('totalQuantity') || '0'\n    );\n    if (localTotalQuantity) {\n      this.totalQuantity = localTotalQuantity;\n    }\n    let totalOrder: OrderPosition[] = JSON.parse(\n      localStorage.getItem('cart') || '[]'\n    );\n    if (totalOrder) {\n      this.list = totalOrder;\n    }\n  }\n\n  addToCart(position: Position) {\n    const orderPosition: OrderPosition = Object.assign(\n      {},\n      {\n        name: position.name,\n        cost: position.cost,\n        quantity: position.quantity,\n        imageSrc: position.imageSrc,\n        orderQuantity: position.orderQuantity,\n        _id: position._id,\n      }\n    );\n\n    let candidate = this.list.find((p) => p._id === position._id);\n    if (candidate) {\n      candidate.orderQuantity! += orderPosition.orderQuantity!;\n    } else {\n      this.list.push(orderPosition);\n    }\n    this.totalQuantity += position.orderQuantity!;\n    localStorage.setItem('totalQuantity', JSON.stringify(this.totalQuantity));\n    this.computePrice();\n    localStorage.setItem('cart', JSON.stringify(this.list));\n    localStorage.setItem('total', JSON.stringify(this.totalCost));\n  }\n\n  private computePrice() {\n    this.totalCost = this.list.reduce((total, item) => {\n      return (total += item.orderQuantity! * item.cost);\n    }, 0);\n  }\n\n  create(order: Order): Observable<Order> {\n    return this.http.post<Order>('/api/order', order);\n  }\n\n  fetch(params: any = {}): Observable<Order[]> {\n    return this.http.get<Order[]>('/api/order', {\n      params: new HttpParams({\n        fromObject: params,\n      }),\n    });\n  }\n\n  remove(order: OrderPosition) {\n    // this.totalCost -= order.cost * order.orderQuantity!;\n    // this.list.splice(this.list.indexOf(order), 1);\n    // this.totalQuantity -= order.orderQuantity!;\n    // localStorage.setItem('cart', JSON.stringify(this.list));\n    // localStorage.setItem('total', JSON.stringify(this.totalCost));\n    // localStorage.setItem('totalQuantity', JSON.stringify(this.totalQuantity));\n  }\n\n  clear() {}\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.css']\n})\nexport class LoaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row s12 center\">\n    <div class=\"col s3\"></div>\n    <div class=\"col s6 center\">\n        <div class=\"progress\">\n            <div class=\"indeterminate\"></div>\n        </div>\n    </div>\n</div>","import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewChild\n} from '@angular/core';\n\nimport {\n  MaterialInstance,\n  MaterialService\n} from 'src/app/admin/shared/classes/material.service';\nimport { Position } from 'src/app/admin/shared/interfaces';\nimport {\n  CategoriesService\n} from 'src/app/admin/shared/services/categories.service';\nimport { OrderService } from 'src/app/admin/shared/services/order.service';\nimport {\n  PositionsService\n} from 'src/app/admin/shared/services/positions.service';\n\n@Component({\n  selector: 'app-filtered-position-form',\n  templateUrl: './filtered-position-form.component.html',\n  styleUrls: ['./filtered-position-form.component.css'],\n})\nexport class FilteredPositionFormComponent\n  implements OnInit, OnDestroy, AfterViewInit\n{\n  @Input('categoryId') categoryId: string | undefined;\n  @ViewChild('modal') modalRef: ElementRef | undefined;\n  @ViewChild('quantityInput') quantityInput: ElementRef | undefined;\n\n  modal: MaterialInstance | undefined;\n  sortedPositions: Position[] = [];\n  positionId: any = null;\n  loading = false;\n  totalQuantity = 0;\n  p: number = 1;\n  categoryName = '';\n\n  constructor(\n    private positionsService: PositionsService,\n    public orderService: OrderService,\n    private categoriesService: CategoriesService\n  ) {}\n\n  ngOnInit(): void {\n    this.loading = true;\n    this.categoryName = this.categoriesService.categoryName;\n    this.positionsService.fetch(this.categoryId).subscribe((positions) => {\n      this.sortedPositions = positions.sort((a, b) =>\n        a.cost > b.cost ? 1 : -1\n      );\n    });\n    this.loading = false;\n  }\n\n  ngOnDestroy() {\n    this.modal?.destroy();\n  }\n\n  ngAfterViewInit() {\n    this.modal = MaterialService.initModal(this.modalRef!);\n  }\n\n  open() {\n    this.modal?.open();\n  }\n\n  onCancel() {\n    this.modal?.close();\n  }\n\n  onSelectPosition(position: Position) {\n    this.positionId = position._id;\n    this.sortedPositions.map((position) => {\n      position.orderQuantity = 1;\n      return position;\n    });\n  }\n\n  addToCart(position: Position) {\n    this.orderService.addToCart(position);\n    // this.totalQuantity = this.order.totalQuantity;\n    MaterialService.toast(`Товар додано до кошика!`);\n    this.modal?.close();\n  }\n}\n","<div class=\"center-align mb4 mt0 blue-text\">\n    <span class=\"category\">{{categoryName}}</span>\n</div>\n<div class=\"card-width\" *ngIf=\"!loading; else loader\">\n    <div *ngFor=\"let position of sortedPositions | paginate: {itemsPerPage: 4,currentPage: p};\" class=\"card col s12 m6 l4\">\n        <div class=\"card-image waves-effect waves-block waves-light mb0\">\n            <img class=\"img activator center-block\" src={{position.imageSrc}}>\n        </div>\n        <div class=\"card-content\">\n            <hr class=\"hr1\">\n            <div class=\"card-title activator grey-text text-darken-4 centered\">\n                <div class=\"name\" [title]=\"position.name\">{{position.name}}</div>\n            </div>\n            <hr class=\"hr1\">\n            <div class=\"cost center mb4\">{{position.cost}} грн</div>\n            <div *ngIf=\"position.quantity\" class=\"availability green-text center mt4\">в наявності</div>\n            <div *ngIf=\"!position.quantity\" class=\"availability blue-text center mt4\">очікується</div>\n        </div>\n        <div class=\"card-action mt0 center-align\" (click)=\"onSelectPosition(position)\">\n            <button class=\"add waves-effect waves-light btn \" (click)=\"open()\" [disabled]=\"!position.quantity\"><i\n                    class=\"addIcon material-icons \">shopping_cart</i></button>\n        </div>\n        <div class=\"card-reveal\">\n            <span class=\"card-title text-size grey lighten-5\">{{position.name}}<i\n                    class=\"material-icons right\">close</i></span>\n            <span class=\"description\">{{position.description}}</span>\n        </div>\n    </div>\n</div>\n<div class=\"col s12\">\n    <pagination-controls (pageChange)=\"p = $event\" previousLabel=\"\" nextLabel=\"\"></pagination-controls>\n</div>\n<ng-template #loader>\n    <app-loader></app-loader>\n</ng-template>\n\n\n<div class=\"modal\" #modal>\n    <div *ngFor=\"let position of sortedPositions\">\n        <div *ngIf=\"position._id == positionId\">\n            <div class=\"modal-content\">\n                <span>Найменування товару: {{position.name}}</span>\n                <span class=\"right\">Ціна: {{position.cost}} UAH</span>\n                <input #quantityInput id=\"pos-quantity\" type=\"number\" [(ngModel)]=\"position.orderQuantity\">\n                <label for=\"pos-quantity\">Кількість</label>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" (click)=\"onCancel()\" class=\"modal-action waves-effect waves-black btn-flat\">\n                    Скасувати\n                </button>\n                <button class=\"modal-action btn waves-effect btn-small\" type=\"submit\" (click)=\"addToCart(position)\" [disabled]=\"!position.orderQuantity\">\n                    Додати в кошик\n                </button>\n            </div>\n        </div>\n    </div>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { Position } from 'src/app/admin/shared/interfaces';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SearchService {\n  isSearch = false;\n  isBrand = false;\n  isPrice = false;\n  foundPosition: Position[] = [];\n  brandPositions: Position[] = [];\n\n  constructor(private http: HttpClient) {}\n\n  fetch(): Observable<Position[]> {\n    return this.http.get<Position[]>(`/api/admin/position/`);\n  }\n\n  resetFilter() {\n    this.isSearch = false;\n    this.isBrand = false;\n    this.isPrice = false;\n  }\n}\n","export const environment = {\n  production: false,\n  apiEndPoint: 'https://api.novaposhta.ua/v2.0/json/',\n  apiKey: '3e4fd3d514c693ed7e72b47909596d4c',\n};\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard-page',\n  templateUrl: './dashboard-page.component.html',\n  styleUrls: ['./dashboard-page.component.css']\n})\nexport class DashboardPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>Кабінет користувача</p>","import {\n  Component,\n  OnInit,\n} from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { Observable } from 'rxjs';\n\nimport { Category } from '../admin/shared/interfaces';\nimport { CategoriesService } from '../admin/shared/services/categories.service';\nimport { SearchService } from '../shared/services/search.service';\n\n@Component({\n  selector: 'app-categories-page',\n  templateUrl: './categories-page.component.html',\n  styleUrls: ['./categories-page.component.css'],\n})\nexport class CategoriesPageComponent implements OnInit {\n  categories$: Observable<Category[]> | undefined;\n  category!: Category;\n\n  constructor(\n    private categoriesService: CategoriesService,\n    private searchService: SearchService,\n    private titleService: Title,\n    private route: ActivatedRoute\n  ) {\n    // this.titleService.setTitle(this.route.snapshot.data['title']);\n  }\n\n  ngOnInit(): void {\n    this.categories$ = this.categoriesService.fetch();\n  }\n\n  get isSearch(): boolean {\n    return this.searchService.isSearch;\n  }\n\n  get isBrand(): boolean {\n    return this.searchService.isBrand;\n  }\n\n  get isPrice(): boolean {\n    return this.searchService.isPrice;\n  }\n}\n","<div class=\"row\" *ngIf=\"categories$ | async as categories; else loader\">\n    <!-- <div class=\"categories col s9 m3 l3\">\n        <div>\n            <ul class=\"collection \">\n                <li class=\"collection-item grey lighten-3 blue-text bold menu\">Категорії товарів</li>\n                <div class=\"active\">\n                    <li class=\"collection-item grey lighten-5 active category\" *ngFor=\"let category of categories\">\n                        <div class=\"name bold waves-effect\" [routerLink]=\"['categories', category._id]\">\n                            <a class=\" black-text\">{{category.name}}</a>\n                            <a class=\" black-text secondary-content\">\n                                <i class=\"name material-icons\">keyboard_arrow_right</i></a>\n                        </div>\n                    </li>\n                </div>\n\n            </ul>\n        </div>\n        <div>\n            <ul class=\"collection \">\n                <li class=\"collection-item grey lighten-5\">\n                    <div class=\"name bold waves-effect\"><i class=\"blue-text material-icons tiny\">redeem</i>\n                        <a class=\"promotions\">Акції</a><i class=\"blue-text material-icons tiny\">redeem</i>\n                        <a class=\"promotions secondary-content\">\n                            <i class=\"name material-icons\">keyboard_arrow_right</i></a>\n                    </div>\n                </li>\n            </ul>\n        </div>\n    </div> -->\n\n    <div class=\"col s3\">\n        <ul id=\"slide-out\" class=\"sidenav sidenav-fixed\" style=\"width: 25%\">\n            <div class=\"header blue-text bold\">Категорії товарів</div>\n            <hr class=\"hr1\">\n            <li class=\"bold\" *ngFor=\"let category of categories\" routerLinkActive=\"active\">\n                <a [routerLink]=\"['/category', category._id]\" class=\"waves-effect waves-orange\">{{category.name}}\n                    <a class=\" black-text secondary-content\">\n                        <i class=\"name material-icons\">keyboard_arrow_right</i></a>\n                </a>\n            </li>\n            <li class=\"bold\">\n                <a class=\"promotions waves-effect waves-orange\">Акції\n                    <a class=\"promotions secondary-content\">\n                        <i class=\"name material-icons\">keyboard_arrow_right</i></a>\n                </a>\n            </li>\n        </ul>\n    </div>\n\n    <div class=\"col s12 m12 l9 right\">\n        <div>\n            <app-search-filter-form></app-search-filter-form>\n        </div>\n\n        <div *ngIf=\"!isSearch\">\n            <div *ngIf=\"!isBrand\">\n                <div *ngIf=\"isPrice\">\n                    <app-filtered-position-form [categoryId]=\"categories[0]._id\"></app-filtered-position-form>\n                </div>\n                <div *ngIf=\"!isPrice\">\n                    <app-positions-form [categoryId]=\"categories[0]._id\"></app-positions-form>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<ng-template #loader>\n    <app-loader></app-loader>\n</ng-template>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { User } from 'src/app/admin/shared/interfaces';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthclientService {\n  private token = '';\n  constructor(private http: HttpClient) {}\n\n  login(user: User): Observable<{ token: string }> {\n    return this.http.post<{ token: string }>('/api/login', user).pipe(\n      tap(({ token }) => {\n        localStorage.setItem('auth-token', token);\n        this.setToken(token);\n      })\n    );\n  }\n\n  setToken(token: string) {\n    this.token = token;\n  }\n\n  getToken(): string {\n    return this.token;\n  }\n\n  isAuth(): boolean {\n    return !!this.token;\n  }\n\n  logout() {\n    this.setToken('');\n    // localStorage.clear();\n  }\n\n  register(user: User): Observable<User> {\n    return this.http.post<User>('/api/register', user);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\nimport {\n  Category,\n  Message\n} from '../interfaces';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CategoriesService {\n  categoryName = '';\n  constructor(private http: HttpClient) {}\n\n  // Получаем список всех категорий\n  fetch(): Observable<Category[]> {\n    return this.http.get<Category[]>('/api/admin/category');\n  }\n\n  getById(id: any): Observable<Category> {\n    return this.http.get<Category>(`/api/admin/category/${id}`);\n  }\n\n  create(name: Category): Observable<Category> {\n    return this.http.post<Category>('/api/admin/category', name);\n  }\n\n  update(id: any, name: Category): Observable<Category> {\n    return this.http.patch<Category>(`/api/admin/category/${id}`, name);\n  }\n\n  delete(id: any): Observable<Message> {\n    return this.http.delete<Message>(`/api/admin/category/${id}`);\n  }\n}\n","import {\n  HttpErrorResponse,\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport {\n  Observable,\n  throwError\n} from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { AuthclientService } from '../services/authclient.service';\n\n@Injectable()\nexport class UserTokenInterceptor implements HttpInterceptor {\n  constructor(private auth: AuthclientService, private router: Router) {}\n\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    if (this.auth.isAuth()) {\n      req = req.clone({\n        setHeaders: {\n          Authorization: this.auth.getToken(),\n        },\n      });\n    }\n    return next\n      .handle(req)\n      .pipe(\n        catchError((error: HttpErrorResponse) => this.handleAuthError(error))\n      );\n  }\n\n  private handleAuthError(error: HttpErrorResponse): Observable<any> {\n    if (error.status === 401) {\n      this.router.navigate(['/login'], {\n        queryParams: {\n          sessionFailed: true,\n        },\n      });\n    }\n    return throwError(error);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\nimport {\n  Message,\n  Position\n} from '../interfaces';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PositionsService { \n\n  constructor(private http: HttpClient) {}\n\n  fetch(categoryId: any): Observable<Position[]> {\n    return this.http.get<Position[]>(`/api/admin/position/${categoryId}`);\n  }\n\n  fetchForStorage(categoryId: any): Observable<Position[]> {\n    return this.http.get<Position[]>(`/api/admin/storage/${categoryId}`);\n  }\n\n  create(position: Position, image?: File): Observable<Position> {\n    const fd = new FormData();\n    if (image) {\n      fd.append('image', image, image.name);\n    }\n    fd.append('name', position.name);\n    fd.append('brand', String(position.brand));\n    fd.append('description', position.description!);\n    fd.append('cost', String(position.cost));\n    fd.append('category', position.category);\n    fd.append('inputCost', String(position.inputCost));\n    fd.append('quantity', String(position.quantity));\n\n    return this.http.post<Position>('/api/admin/position', fd);\n  }\n\n  update(position: Position): Observable<Position> {\n    return this.http.patch<Position>(\n      `/api/admin/position/${position._id}`,\n      position\n    );\n  }\n\n  delete(position: Position): Observable<Message> {\n    return this.http.delete<Message>(`/api/admin/position/${position._id}`);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth-layout',\n  templateUrl: './auth-layout.component.html',\n  styleUrls: ['./auth-layout.component.css']\n})\nexport class AuthLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav>\n    <div class=\"nav-wrapper grey darken-1\">\n        <a routerLink=\"/\" class=\"brand-logo\">Maete</a>\n        <ul id=\"nav-mobile\" class=\"right hide-on-med-and-down\">\n            <li routerLinkActive=\"active\">\n                <a routerLink=\"login\">Вход</a>\n            </li>\n            <li routerLinkActive=\"active\">\n                <a routerLink=\"register\">Регистрация</a>\n            </li>\n        </ul>\n    </div>\n</nav>\n\n<div class=\"auth-block\">\n    <router-outlet></router-outlet>\n</div>","import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  RouterStateSnapshot\n} from '@angular/router';\n\nimport {\n  Observable,\n  of\n} from 'rxjs';\n\nimport { AuthclientService } from '../services/authclient.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthclientGuard implements CanActivate {\n  constructor(private auth: AuthclientService, private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> {\n    if (this.auth.isAuth()) {\n      return of(true);\n    } else {\n      this.router.navigate(['/login'], {\n        queryParams: {\n          accessDenied: true,\n        },\n      });\n      return of(false);\n    }\n  }\n  canActivateChild(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> {\n    return this.canActivate(route, state);\n  }\n}\n","import {\n  Component,\n  OnInit,\n} from '@angular/core';\n\nimport { AuthService } from './admin/shared/services/auth.service';\nimport { AuthclientService } from './shared/services/authclient.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n  // title = 'Shop';\n  constructor(\n    private auth: AuthService,\n    private authclient: AuthclientService\n  ) {}\n\n  ngOnInit() {\n    const localStorageToken = localStorage.getItem('auth-token');\n    if (localStorageToken !== null) {\n      this.auth.setToken(localStorageToken);\n      this.authclient.setToken(localStorageToken);\n    }\n  }\n}\n","<router-outlet></router-outlet>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\nimport { environment } from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NovaposhtaService {\n  constructor(private http: HttpClient) {}\n\n  public getAreas(): Observable<any> {\n    return this.http.post(environment.apiEndPoint, {\n      apiKey: environment.apiKey,\n      modelName: 'Address',\n      calledMethod: 'getAreas',\n      methodProperties: {},\n    });\n  }\n\n  public getCities(ref: string): Observable<any> {\n    return this.http.post(environment.apiEndPoint, {\n      apiKey: environment.apiKey,\n      modelName: 'Address',\n      calledMethod: 'getCities',\n      methodProperties: {\n        AreaRef: ref,\n      },\n    });\n  }\n\n  public getDepartments(ref: string): Observable<any> {\n    return this.http.post(environment.apiEndPoint, {\n      apiKey: environment.apiKey,\n      modelName: 'AddressGeneral',\n      calledMethod: 'getWarehouses',\n      methodProperties: {\n        CityRef: ref,\n      },\n    });\n  }\n}\n","import {\n  Component,\n  OnInit\n} from '@angular/core';\n\n@Component({\n  selector: 'app-site-layout',\n  templateUrl: './site-layout.component.html',\n  styleUrls: ['./site-layout.component.css'],\n})\nexport class SiteLayoutComponent implements OnInit {\n  ngOnInit(): void {}\n}\n","<body>\n    <app-navbar-form></app-navbar-form>\n    <div class=\"content\">\n        <router-outlet></router-outlet>\n    </div>\n    <main></main>\n    <app-footer-form></app-footer-form>\n</body>","import {\n  HTTP_INTERCEPTORS,\n  HttpClientModule\n} from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport {\n  FormsModule,\n  ReactiveFormsModule\n} from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { ButtonModule } from 'primeng/button';\nimport { CalendarModule } from 'primeng/calendar';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { InputMaskModule } from 'primeng/inputmask';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { InputTextareaModule } from 'primeng/inputtextarea';\nimport { TabViewModule } from 'primeng/tabview';\nimport { ToolbarModule } from 'primeng/toolbar';\n\nimport { TokenInterceptor } from './admin/shared/classes/token.interceptor';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CartPageComponent } from './cart-page/cart-page.component';\nimport {\n  OrderFormComponent\n} from './cart-page/order-form/order-form.component';\nimport {\n  CategoriesFormComponent\n} from './categories-page/categories-form/categories-form.component';\nimport {\n  FilteredPositionFormComponent\n} from './categories-page/categories-form/filtered-position-form/filtered-position-form.component';\nimport {\n  PositionsFormComponent\n} from './categories-page/categories-form/positions-form/positions-form.component';\nimport {\n  CategoriesPageComponent\n} from './categories-page/categories-page.component';\nimport {\n  DashboardPageComponent\n} from './dashboard-page/dashboard-page.component';\nimport { FooterFormComponent } from './footer-form/footer-form.component';\nimport { LoginPageComponent } from './login-page/login-page.component';\nimport { NavbarFormComponent } from './navbar-form/navbar-form.component';\nimport { RegisterPageComponent } from './register-page/register-page.component';\nimport {\n  SearchFilterFormComponent\n} from './search-filter-form/search-filter-form.component';\nimport { UserTokenInterceptor } from './shared/classes/usertoken.interceptor';\nimport { LoaderComponent } from './shared/components/loader/loader.component';\nimport {\n  AuthLayoutComponent\n} from './shared/layouts/auth-layout/auth-layout.component';\nimport {\n  SiteLayoutComponent\n} from './shared/layouts/site-layout/site-layout.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginPageComponent,\n    AuthLayoutComponent,\n    RegisterPageComponent,\n    SiteLayoutComponent,\n    CartPageComponent,\n    LoaderComponent,\n    NavbarFormComponent,\n    SearchFilterFormComponent,\n    CategoriesPageComponent,\n    CategoriesFormComponent,\n    PositionsFormComponent,\n    FooterFormComponent,\n    OrderFormComponent,\n    FilteredPositionFormComponent,\n    DashboardPageComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    DropdownModule,\n    TabViewModule,\n    ToolbarModule,\n    ButtonModule,\n    InputTextareaModule,\n    InputTextModule,\n    InputMaskModule,\n    CalendarModule,\n    Ng2SearchPipeModule,\n    NgxPaginationModule,\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      multi: true,\n      useClass: TokenInterceptor,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      multi: true,\n      useClass: UserTokenInterceptor,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  OnDestroy,\n  OnInit,\n  ViewChild\n} from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { OrderService } from 'src/app/admin/shared/services/order.service';\n\nimport {\n  MaterialInstance,\n  MaterialService\n} from '../admin/shared/classes/material.service';\nimport { Position } from '../admin/shared/interfaces';\nimport { PositionsService } from '../admin/shared/services/positions.service';\nimport { SearchService } from '../shared/services/search.service';\n\n@Component({\n  selector: 'app-search-filter-form',\n  templateUrl: './search-filter-form.component.html',\n  styleUrls: ['./search-filter-form.component.css'],\n})\nexport class SearchFilterFormComponent\n  implements OnInit, OnDestroy, AfterViewInit\n{\n  @ViewChild('priceSelector') priceSelector: ElementRef | undefined;\n  @ViewChild('brandSelector') brandSelector: ElementRef | undefined;\n  @ViewChild('modal') modalRef: ElementRef | undefined;\n  @ViewChild('modal1') modal1Ref: ElementRef | undefined;\n  @ViewChild('quantityInput') quantityInput: ElementRef | undefined;\n  modal: MaterialInstance | undefined;\n  modal1: MaterialInstance | undefined;\n  searchStr = '';\n  minLength = 3;\n  foundPositions: Position[] = [];\n  brandPositions: Position[] = [];\n  positionId: any = null;\n  isSearch = false;\n  isBrand = false;\n  isPrice = false;\n  loading = false;\n  totalQuantity = 0;\n  brandNameArr: string[] = [];\n  brandSelected = '';\n  p: number = 1;\n\n  constructor(\n    private searchService: SearchService,\n    private positionsService: PositionsService,\n    private router: Router,\n    public order: OrderService\n  ) {}\n\n  ngOnInit(): void {\n    this.sortByBrand();\n    this.searchService.resetFilter();\n  }\n\n  ngOnDestroy() {\n    this.modal?.destroy();\n    this.modal1?.destroy();\n  }\n\n  ngAfterViewInit() {\n    MaterialService.initSelect(this.priceSelector!);\n    MaterialService.initSelect(this.brandSelector!);\n    MaterialService.updateTextInputs;\n    this.modal = MaterialService.initModal(this.modalRef!);\n    this.modal1 = MaterialService.initModal(this.modal1Ref!);\n  }\n\n  handleChange() {\n    if (this.minLength <= this.searchStr.length) {\n      this.searchService.fetch().subscribe((positions) => {\n        this.foundPositions = positions;\n        this.isSearch = true;\n        this.searchService.isSearch = this.isSearch;\n        this.isBrand = false;\n        this.isPrice = false;\n        this.searchService.isBrand = this.isBrand;\n        this.searchService.isPrice = this.isPrice;\n      });\n    }\n    if (this.minLength > this.searchStr.length) {\n      this.searchService.fetch().subscribe((positions) => {\n        this.foundPositions = [];\n        this.isSearch = false;\n        this.searchService.isSearch = this.isSearch;\n      });\n    }\n  }\n\n  setDefaultBrand() {}\n\n  open() {\n    this.modal?.open();\n  }\n  open1() {\n    this.modal1?.open();\n  }\n\n  onCancel() {\n    this.modal?.close();\n  }\n  onCancel1() {\n    this.modal1?.close();\n  }\n\n  onSelectFoundPosition(position: Position) {\n    this.positionId = position._id;\n    this.foundPositions.map((position) => {\n      position.orderQuantity = 1;\n      return position;\n    });\n  }\n  onSelectBrandPosition(position: Position) {\n    this.positionId = position._id;\n    this.brandPositions.map((position) => {\n      position.orderQuantity = 1;\n      return position;\n    });\n  }\n\n  addToCart(position: Position) {\n    this.order.addToCart(position);\n    // this.totalQuantity = this.order.totalQuantity;\n    MaterialService.toast(`Товар додано до кошика!`);\n    this.modal?.close();\n    this.modal1?.close();\n  }\n\n  sortByBrand() {\n    this.searchService.fetch().subscribe((positions) => {\n      this.brandPositions = positions;\n      this.brandPositions.forEach((p) => {\n        this.brandNameArr.push(p.brand!);\n        this.brandNameArr = Array.from(new Set(this.brandNameArr));\n      });\n    });\n  }\n\n  brandSelect(event: any) {\n    let value = event.target.value;\n    this.brandSelected = value;\n    this.isBrand = true;\n    this.searchService.isBrand = this.isBrand;\n    this.isPrice = false;\n    this.isSearch = false;\n    this.searchService.isSearch = this.isSearch;\n    this.searchService.isPrice = this.isPrice;\n  }\n\n  isPriceSelect(event: any) {\n    let value = event.target.value;\n    this.isPrice = value;\n    this.searchService.isPrice = this.isPrice;\n    this.isBrand = false;\n    this.isSearch = false;\n    this.searchService.isBrand = this.isBrand;\n    this.searchService.isSearch = this.isSearch;\n  }\n}\n","<div class=\"search-filter row col s12\">\n    <div class=\"search\">\n        <div class=\"row filter col s12 grey lighten-5\">\n            <div class=\"filter-text blue-text\">\n                <span>Фільтр</span>\n            </div>\n            <div class=\"col s3\">\n                <div class=\"input-field\">\n                    <span class=\"brand\">ціна</span>\n                    <select class=\"browser-default\" (change)=\"isPriceSelect($event)\" #priceSelector>\n                        <option value=\"\" selected>ціна</option>\n                        <option [value]=\"!isPrice\">за зростанням</option>\n                    </select>\n                </div>\n            </div>\n            <div class=\"col s3\">\n                <div class=\"input-field\">\n                    <span class=\"brand\">бренд</span>\n                    <select class=\"browser-default\" (change)=\"brandSelect($event)\" #brandSelector>\n                        <option value=\"\" selected>бренд</option>\n                        <option *ngFor=\"let brand of brandNameArr\" [value]=\"brand\">\n                            {{brand}}\n                        </option>\n                    </select>\n                </div>\n            </div>\n\n            <div class=\"input-field col s6 mr0 white\">\n                <i class=\"search-icon material-icons prefix \">search</i>\n                <input id=\"icon_prefix\" type=\"text\" class=\"validate\" [minlength]=\"minLength\" [(ngModel)]=\"searchStr\" (ngModelChange)=\"handleChange()\">\n                <label class=\"search\" for=\"icon_prefix\">Пошук... </label>\n                <span class=\"helper-text mb0\" data-error=\"Мінімальна довжина слова 3 символи\" data-success=\"Пошук...\"></span>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div *ngIf=\"isSearch\">\n    <div class=\"card-width\">\n        <div *ngFor=\"let position of foundPositions | filter: searchStr | paginate: {itemsPerPage: 4,currentPage: p};\" class=\"card col s12 m6 l4\" #empty>\n            <div class=\"card-image waves-effect waves-block waves-light mb0\">\n                <img class=\"img activator center-block\" src={{position.imageSrc}}>\n            </div>\n            <div class=\"card-content\">\n                <hr class=\"hr1\">\n                <div class=\"card-title activator grey-text text-darken-4\">\n                    <div class=\"name\" [title]=\"position.name\">{{position.name}}</div>\n                </div>\n                <hr class=\"hr1\">\n                <div class=\"cost center mb4\">{{position.cost}} грн</div>\n                <div *ngIf=\"position.quantity\" class=\"availability green-text center mt4\">в наявності</div>\n                <div *ngIf=\"!position.quantity\" class=\"availability blue-text center mt4\">очікується</div>\n            </div>\n            <div class=\"card-action mt0 center-align\" (click)=\"onSelectFoundPosition(position)\">\n                <button class=\"add waves-effect waves-light btn \" (click)=\"open()\" [disabled]=\"!position.quantity\"><i\n                        class=\"addIcon material-icons \">shopping_cart</i></button>\n            </div>\n            <div class=\"card-reveal\">\n                <span class=\"card-title text-size grey lighten-5\">{{position.name}}<i\n                        class=\"material-icons right\">close</i></span>\n                <p>{{position.description}}</p>\n            </div>\n        </div>\n        <div class=\"col s12\">\n            <pagination-controls (pageChange)=\"p = $event\" previousLabel=\"\" nextLabel=\"\"></pagination-controls>\n        </div>\n        <ng-template #empty>\n            <div *ngIf=\"foundPositions.length == 0\" class=\"center-align mt4\">Збіг не знайдено!</div>\n        </ng-template>\n    </div>\n</div>\n\n<div *ngIf=\"isBrand\">\n    <div class=\"card-width\">\n        <div *ngFor=\"let position of brandPositions | filter: brandSelected | paginate: {itemsPerPage: 4,currentPage: p};\" class=\"card col s12 m6 l4\">\n            <div class=\"card-image waves-effect waves-block waves-light mb0\">\n                <img class=\"img activator center-block\" src={{position.imageSrc}}>\n            </div>\n            <div class=\"card-content\">\n                <hr class=\"hr1\">\n                <div class=\"card-title activator grey-text text-darken-4\">\n                    <div class=\"name\" [title]=\"position.name\">{{position.name}}</div>\n                </div>\n                <hr class=\"hr1\">\n                <div class=\"cost center mb4\">{{position.cost}} грн</div>\n                <div *ngIf=\"position.quantity\" class=\"availability green-text center mt4\">в наявності</div>\n                <div *ngIf=\"!position.quantity\" class=\"availability blue-text center mt4\">очікується</div>\n            </div>\n            <div class=\"card-action mt0 center-align\" (click)=\"onSelectBrandPosition(position)\">\n                <button class=\"add waves-effect waves-light btn \" (click)=\"open1()\" [disabled]=\"!position.quantity\"><i\n                        class=\"addIcon material-icons \">shopping_cart</i></button>\n            </div>\n            <div class=\"card-reveal\">\n                <span class=\"card-title text-size grey lighten-5\">{{position.name}}<i\n                        class=\"material-icons right\">close</i></span>\n                <p>{{position.description}}</p>\n            </div>\n        </div>\n        <div class=\"col s12\">\n            <pagination-controls (pageChange)=\"p = $event\" previousLabel=\"\" nextLabel=\"\"></pagination-controls>\n        </div>\n    </div>\n    <ng-template>\n        <div class=\"center-align mt4\">Збіг не знайдено!</div>\n    </ng-template>\n</div>\n\n<div class=\"modal\" #modal>\n    <div *ngFor=\"let position of foundPositions\">\n        <div *ngIf=\"position._id == positionId\">\n            <div class=\"modal-content\">\n                <span>Найменування товару: {{position.name}}</span>\n                <span class=\"right\">Ціна: {{position.cost}} UAH</span>\n                <input #quantityInput id=\"pos-quantity\" type=\"number\" [(ngModel)]=\"position.orderQuantity\">\n                <label for=\"pos-quantity\">Кількість</label>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" (click)=\"onCancel()\" class=\"modal-action waves-effect waves-black btn-flat\">\n                    Скасувати\n                </button>\n                <button class=\"modal-action btn waves-effect btn-small\" type=\"submit\" (click)=\"addToCart(position)\" [disabled]=\"!position.orderQuantity\">\n                    Додати в кошик\n                </button>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"modal\" #modal1>\n    <div *ngFor=\"let position of brandPositions\">\n        <div *ngIf=\"position._id == positionId\">\n            <div class=\"modal-content\">\n                <span>Найменування товару: {{position.name}}</span>\n                <span class=\"right\">Ціна: {{position.cost}} UAH</span>\n                <input #quantityInput id=\"pos-quantity\" type=\"number\" [(ngModel)]=\"position.orderQuantity\">\n                <label for=\"pos-quantity\">Кількість</label>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" (click)=\"onCancel1()\" class=\"modal-action waves-effect waves-black btn-flat\">\n                    Скасувати\n                </button>\n                <button class=\"modal-action btn waves-effect btn-small\" type=\"submit\" (click)=\"addToCart(position)\" [disabled]=\"!position.orderQuantity\">\n                    Додати в кошик\n                </button>\n            </div>\n        </div>\n    </div>\n</div>","import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport {\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { SelectItem } from 'primeng/api';\nimport { MaterialService } from 'src/app/admin/shared/classes/material.service';\nimport { OrderPosition } from 'src/app/admin/shared/interfaces';\nimport { OrderService } from 'src/app/admin/shared/services/order.service';\nimport { AuthclientService } from 'src/app/shared/services/authclient.service';\nimport { NovaposhtaService } from 'src/app/shared/services/novaposhta.service';\n\ntype UserType = 'sender';\n\n@Component({\n  selector: 'app-order-form',\n  templateUrl: './order-form.component.html',\n  styleUrls: ['./order-form.component.css'],\n})\nexport class OrderFormComponent implements OnInit, AfterViewInit {\n  @ViewChild('paymentSelector') select1Ref: ElementRef | undefined;\n  @ViewChild('deliverySelector') select2Ref: ElementRef | undefined;\n\n  public areasSender: SelectItem[] | undefined;\n  public areasRecipient: SelectItem[] | undefined;\n  public citiesSender: SelectItem[] | undefined;\n  public citiesRecipient: SelectItem[] | undefined;\n  public departmentsSender: SelectItem[] | undefined;\n  public departmentsRecipient: SelectItem[] | undefined;\n  public isDisableSenderDropdownCity: boolean = true;\n  public isDisableRecipientDropdownCity: boolean = true;\n  public isDisableRecipientDropdownDepartment: boolean = true;\n  public isDisableSenderDropdownDepartment: boolean = true;\n\n  form = new FormGroup({\n    payment: new FormControl('', Validators.required),\n    delivery: new FormControl('', Validators.required),\n    area: new FormControl(''),\n    city: new FormControl(''),\n    department: new FormControl(''),\n    firstName: new FormControl('', Validators.required),\n    secondName: new FormControl('', Validators.required),\n    number: new FormControl(null, Validators.required),\n    email: new FormControl(null),\n    comment: new FormControl(null),\n  });\n\n  orders: OrderPosition[] = [];\n  totalCost = 0;\n  paymentList: any;\n  deliveryList: any;\n  isNovaPoshta = false;\n  novaposhtaResponse: any;\n  area: any;\n  city: any;\n  department: any;\n\n  constructor(\n    private router: Router,\n    private ordersService: OrderService,\n    private novaposhta: NovaposhtaService,\n    private auth: AuthclientService\n  ) {}\n\n  ngOnInit(): void {\n    this.auth.logout();\n    localStorage.removeItem('auth-token');\n    this.orders = this.ordersService.list;\n    this.totalCost = this.ordersService.totalCost;\n    let totalOrder: OrderPosition[] = JSON.parse(\n      localStorage.getItem('cart') || '{}'\n    );\n    let sumTotalCost = JSON.parse(localStorage.getItem('total') || '0');\n    this.orders = totalOrder;\n    this.totalCost = sumTotalCost;\n    // this.getAreas();\n    this.deliveryList = [\n      // { id: 1, name: 'Самовивіз зі складу' },\n      { id: 2, name: 'Нова пошта' },\n    ];\n    this.paymentList = [\n      { id: 1, name: 'Готівкою' },\n      { id: 2, name: 'Оплата на карту' },\n      { id: 3, name: 'Післяплата \"Нова Пошта\"' },\n    ];\n  }\n\n  ngAfterViewInit() {\n    this.getAreas();\n    MaterialService.initSelect(this.select1Ref!);\n    MaterialService.initSelect(this.select2Ref!);\n    MaterialService.updateTextInputs;\n  }\n\n  public getAreas() {\n    this.novaposhta.getAreas().subscribe((response: any) => {\n      this.areasSender = response.data.map((area: any) => ({\n        label: area.Description,\n        value: area.Ref,\n      }));\n      this.areasSender = this.areasSender?.slice(1);\n      this.areasRecipient = [...this.areasSender!];\n    });\n  }\n\n  public getCities(ref: string, type?: UserType) {\n    this.novaposhta.getCities(ref).subscribe((response: any) => {\n      const arr = response.data.map((city: any) => ({\n        label: city.Description,\n        value: city.Ref,\n      }));\n\n      type == 'sender'\n        ? (this.citiesSender = arr)\n        : (this.citiesRecipient = arr);\n      type == 'sender'\n        ? (this.isDisableSenderDropdownCity = false)\n        : (this.isDisableRecipientDropdownCity = false);\n    });\n  }\n\n  public getDepartments(ref: string, type?: UserType) {\n    this.novaposhta.getDepartments(ref).subscribe((response: any) => {\n      const arr = response.data.map((department: any) => ({\n        label: department.Description,\n        value: department.Ref,\n      }));\n      type == 'sender'\n        ? (this.departmentsSender = arr)\n        : (this.departmentsRecipient = arr);\n      type == 'sender'\n        ? (this.isDisableSenderDropdownDepartment = false)\n        : (this.isDisableRecipientDropdownDepartment = false);\n    });\n  }\n\n  onSubmit() {\n    this.area = this.areasSender?.find((a) => a.value == this.form.value.area);\n    this.city = this.citiesSender?.find((c) => c.value == this.form.value.city);\n    this.department = this.departmentsSender?.find(\n      (d) => d.value == this.form.value.department\n    );\n\n    type Order = {\n      payment: string;\n      delivery: string;\n      area?: string;\n      city?: string;\n      department?: string;\n      firstName: string;\n      secondName: string;\n      number: string;\n      email?: string;\n      comment?: string;\n      orders: OrderPosition[];\n      totalCost: number;\n    };\n\n    const order: Order = {\n      payment: this.form.value.payment,\n      delivery: this.form.value.delivery,\n      area: this.area.label,\n      city: this.city.label,\n      department: this.department.label,\n      firstName: this.form.value.firstName,\n      secondName: this.form.value.secondName,\n      number: this.form.value.number,\n      email: this.form.value.email,\n      comment: this.form.value.comment,\n      orders: this.orders,\n      totalCost: this.totalCost,\n    };\n    console.log(order);\n    MaterialService.toast(\n      'Дякуємо за замовлення! Наш оператор зв`яжеться з Вами найближчим часом.'\n    );\n    localStorage.clear();\n    this.ordersService.totalCost = 0;\n    this.ordersService.totalQuantity = 0;\n    this.ordersService.list = [];\n    this.router.navigate(['/']);\n  }\n\n  onCancel() {\n    this.router.navigate(['/cart']);\n  }\n\n  deliverySelected(value: any) {\n    this.novaPoshtaSelected(value);\n  }\n\n  novaPoshtaSelected(value: any) {\n    if (value == 'Нова пошта') {\n      this.isNovaPoshta = true;\n    } else {\n      this.isNovaPoshta = false;\n    }\n  }\n\n  get f() {\n    return this.form.controls;\n  }\n}\n","<div class=\"row container\">\n    <div class=\"col s7 order-form\">\n        <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"modal-content\">\n                <h5 class=\"mb4 blue-text order\">Оформлення замовлення</h5>\n                <div class=\"input-field\">\n                    <select formControlName=\"payment\" id=\"pos-payment\" type=\"text\" [ngClass]=\"{'invalid': f.payment.invalid && f.payment.touched}\" #paymentSelector>\n                        <option disabled selected>Выберіть спосіб оплати</option>\n                        <option *ngFor=\"let item of paymentList\" [value]=\"item.name\">{{item.name}}</option>\n                    </select>\n                    <label for=\"pos-payment\">Спосіб оплати:<span class=\"red-text\">*</span></label>\n                </div>\n                <div class=\"input-field\">\n                    <select formControlName=\"delivery\" id=\"pos-delivery\" type=\"text\" (ngModelChange)=\"deliverySelected($event)\" [ngClass]=\"{'invalid': f.delivery.invalid && f.delivery.touched}\" #deliverySelector>\n                        <option disabled selected>Выберіть спосіб доставки</option>\n                        <option *ngFor=\"let item of deliveryList\" [value]=\"item.name\">\n                            <img *ngIf=\"item.id == 2\" class=\"image\" src=\"../../../assets/Nova_Poshta.png\">{{item.name}}\n                        </option>\n                    </select>\n                    <label for=\"pos-delivery\">Спосіб доставки:<span class=\"red-text\">*</span></label>\n                </div>\n\n                <div *ngIf=\"isNovaPoshta\">\n                    <p-tabView>\n                        <p-tabPanel header=\"Дані для відправки\">\n                            <div class=\"p-col \">\n                                <div class=\"m-bottom-15\">\n                                    <label>Виберіть область</label>\n                                    <p-dropdown [style]=\"{ width: '100%' }\" [autoDisplayFirst]=\"false\" [options]=\"areasSender!\" [filter]=\"true\" formControlName=\"area\" (onChange)=\"getCities($event.value, 'sender')\">\n                                    </p-dropdown>\n                                </div>\n                                <div class=\"m-bottom-15\">\n                                    <label for=\"pos-city\">Виберіть населений пункт</label>\n                                    <p-dropdown [style]=\"{ width: '100%' }\" id=\"pos-city\" [attr.disabled]=\"isDisableSenderDropdownCity\" [autoDisplayFirst]=\"false\" [options]=\"citiesSender!\" formControlName=\"city\" [filter]=\"true\" (onChange)=\"getDepartments($event.value, 'sender')\" [attr.title]=\"isDisableSenderDropdownCity ? 'Спочатку виберіть область' : ''\">\n                                    </p-dropdown>\n                                </div>\n                                <div class=\"m-bottom-15\">\n                                    <label>Виберіть відділення</label>\n                                    <p-dropdown [style]=\"{ width: '100%' }\" [attr.disabled]=\"isDisableSenderDropdownDepartment\" [autoDisplayFirst]=\"false\" [options]=\"departmentsSender!\" formControlName=\"department\" [filter]=\"true\" [attr.title]=\"isDisableSenderDropdownDepartment ? 'Спочатку виберіть населений пункт' : ''\">\n                                    </p-dropdown>\n                                </div>\n                            </div>\n                        </p-tabPanel>\n                    </p-tabView>\n                </div>\n\n                <div class=\"input-field\">\n                    <input formControlName=\"firstName\" id=\"pos-firstName\" type=\"text\" [ngClass]=\"{'invalid': f.firstName.invalid && f.firstName.touched}\">\n                    <label for=\"pos-firstName\">Ім'я<span class=\"red-text\">*</span></label>\n                    <span *ngIf=\"f.firstName.invalid && f.firstName.touched\" class=\"helper-text red-text\">\n                        Поле Ім'я не повинно бути порожнім.\n                    </span>\n                </div>\n                <div class=\"input-field\">\n                    <input formControlName=\"secondName\" id=\"pos-secondName\" type=\"text\" [ngClass]=\"{'invalid': f.secondName.invalid && f.secondName.touched}\">\n                    <label for=\"pos-secondName\">Прізвище<span class=\"red-text\">*</span></label>\n                    <span *ngIf=\"f.secondName.invalid && f.secondName.touched\" class=\"helper-text red-text\">\n                        Поле Прізвище не повинно бути порожнім.\n                    </span>\n                </div>\n                <div class=\"input-field\">\n                    <input formControlName=\"number\" id=\"pos-number\" type=\"text\" [ngClass]=\"{'invalid': f.number.invalid && f.number.touched}\">\n                    <label for=\"pos-number\">Телефон<span class=\"red-text\">*</span></label>\n                    <span *ngIf=\"f.number.invalid && f.number.touched\" class=\"helper-text red-text\">\n                        Поле Телефон не повинно бути порожнім.\n                    </span>\n                </div>\n                <div class=\"input-field\">\n                    <input formControlName=\"email\" id=\"pos-email\" type=\"text\">\n                    <label for=\"pos-email\">Email</label>\n\n                </div>\n                <div class=\"input-field\">\n                    <i class=\"material-icons prefix\">mode_edit</i>\n                    <textarea formControlName=\"comment\" id=\"pos-comment\" type=\"text\" class=\"materialize-textarea\"></textarea>\n                    <label for=\"pos-comment\">Коментарі</label>\n                </div>\n\n                <!-- <div class=\"col s4 left mb4 total right\">Сума: {{totalCost}} грн </div> -->\n            </div>\n            <div class=\"modal-footer row col s12\">\n                <div class=\"col s6\">\n                    <button type=\"button\" (click)=\"onCancel()\" class=\"modal-action waves-effect waves-black btn-flat left\">\n                        До кошика\n                    </button>\n                </div>\n                <div class=\"col s6 \">\n                    <button class=\"modal-action btn waves-effect right\" type=\"submit\" [disabled]=\"form!.invalid || form!.disabled\">\n                        Оформити замовлення\n                    </button>\n                </div>\n\n            </div>\n        </form>\n    </div>\n    <div class=\"col s4 order-order right\">\n        <h6 class=\"mb4 blue-text order\">Ваше замовлення</h6>\n        <div class=\"row\" *ngFor=\"let order of orders\">\n            <div class=\"col s4 left line\">\n                <img class=\"imageOrder\" src={{order.imageSrc}}>\n            </div>\n            <div class=\"col s8 line\">\n                <div class=\"name\">{{order.name}}</div>\n                <div>Кількість: {{order.orderQuantity}}</div>\n                <div>Ціна: {{order.cost}} грн</div>\n            </div>\n            <hr>\n        </div>\n        <hr>\n        <h6 class=\"mb4 total order\">Сума до оплати: {{totalCost}} грн</h6>\n    </div>\n\n</div>","import {\n  Component,\n  OnDestroy,\n  OnInit\n} from '@angular/core';\nimport {\n  FormControl,\n  FormGroup,\n  Validators\n} from '@angular/forms';\nimport {\n  ActivatedRoute,\n  Router\n} from '@angular/router';\n\nimport { Subscription } from 'rxjs';\n\nimport { MaterialService } from '../admin/shared/classes/material.service';\nimport { AuthclientService } from '../shared/services/authclient.service';\n\n@Component({\n  selector: 'app-register-page',\n  templateUrl: './register-page.component.html',\n  styleUrls: ['./register-page.component.css'],\n})\nexport class RegisterPageComponent implements OnInit, OnDestroy {\n  form = new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.minLength(6)]),\n    password: new FormControl('', [\n      Validators.required,\n      Validators.minLength(8),\n    ]),\n  });\n\n  aSub: Subscription | undefined;\n  constructor(\n    private auth: AuthclientService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    // this.route.queryParams.subscribe((params: Params) => {\n    //   if (params['registered']) {\n    //     // Вы зарегистрированы\n    //     MaterialService.toast('Користувач успішно зареєстрований!');\n    //   } else if (params['accessDenied']) {\n    //     // Сперва авторизируйтесь\n    //     MaterialService.toast(\n    //       'Для початку роботи з сервісом необхідно пройти авторизацію в системі!'\n    //     );\n    //   } else if (params['sessionFailed']) {\n    //     // Закончилось время сессии\n    //     MaterialService.toast(\n    //       'Час сесії минув, необхідно пройти авторизацію в системі!'\n    //     );\n    //   }\n    // });\n  }\n\n  ngOnDestroy() {\n    if (this.aSub) {\n      this.aSub?.unsubscribe();\n    }\n  }\n\n  get f() {\n    return this.form.controls;\n  }\n\n  onSubmit() {\n    this.form.disable();\n    this.aSub = this.auth.register(this.form.value).subscribe(\n      () => {\n        this.router.navigate(['/login'], {\n          queryParams: {\n            registered: true,\n          },\n        });\n      },\n      (error) => {\n        MaterialService.toast(error.error.message);\n        this.form.enable();\n      }\n    );\n  }\n}\n","<div class=\"auth-block\">\n    <form class=\"card\" [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"card-content\">\n            <span class=\"card-title\">Введіть дані для реєстрації</span>\n            <div class=\"input-field\">\n                <input formControlName=\"email\" id=\"email\" type=\"email\" [ngClass]=\"{'invalid': f.email.invalid && f.email.touched}\">\n                <label for=\"email\">Логін:</label>\n                <span class=\"helper-text red-text\" *ngIf=\"f.email.invalid && f.email.touched\">\n                    <span *ngIf=\"f.email.errors?.required\">Поле Логін не повинно бути порожнім</span>\n                <span *ngIf=\"f.email.errors?.minlength\n                    && f.email.errors?.minlength.requiredLength\">\n                        Логін повинен містити більш {{f.email.errors?.minlength.requiredLength}} символів.\n                        Ви ввели {{f.email.errors?.minlength.actualLength}} символи(ів)\n                    </span>\n                </span>\n            </div>\n            <div class=\"input-field\">\n                <input formControlName=\"password\" id=\"password\" type=\"password\" [ngClass]=\"{'invalid': f.password.invalid && f.password.touched}\">\n                <label for=\"password\">Пароль:</label>\n                <span class=\"helper-text red-text\" *ngIf=\"f.password.invalid && f.password.touched\">\n                    <span *ngIf=\"f.password.errors?.required\">Поле пароля не повинно бути порожнім</span>\n                <span *ngIf=\"f.password.errors?.minlength\n                     && f.password.errors?.minlength.requiredLength\">\n                        Пароль повинен містити більш{{f.password.errors?.minlength.requiredLength}} символів.\n                        Ви ввели {{f.password.errors?.minlength.actualLength}} символи(ів)\n                    </span>\n                </span>\n            </div>\n        </div>\n        <div class=\"card-action\">\n            <button type=\"submit\" class=\"modal-action btn waves-effect\" [disabled]=\"form.invalid || form.disabled\">Зареєструватися</button>\n        </div>\n    </form>\n</div>","import {\n  Component,\n  OnDestroy,\n  OnInit\n} from '@angular/core';\nimport {\n  FormControl,\n  FormGroup,\n  Validators\n} from '@angular/forms';\nimport {\n  ActivatedRoute,\n  Params,\n  Router\n} from '@angular/router';\n\nimport { Subscription } from 'rxjs';\n\nimport { MaterialService } from '../admin/shared/classes/material.service';\nimport { AuthclientService } from '../shared/services/authclient.service';\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.css'],\n})\nexport class LoginPageComponent implements OnInit, OnDestroy {\n  form = new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.minLength(6)]),\n    password: new FormControl('', [\n      Validators.required,\n      Validators.minLength(8),\n    ]),\n  });\n  aSub: Subscription | undefined;\n\n  constructor(\n    private auth: AuthclientService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe((params: Params) => {\n      if (params['registered']) {\n        // Вы зарегистрированы\n        MaterialService.toast('Зайдіть в систему використовуючи свої дані!');\n      } else if (params['accessDenied']) {\n        // Сперва авторизируйтесь\n        MaterialService.toast(\n          'Для початку роботи з сервісом необхідно пройти авторизацію в системі!'\n        );\n      } else if (params['sessionFailed']) {\n        // Закончилось время сессии\n        MaterialService.toast(\n          'Час сесії минув, необхідно пройти авторизацію в системі!'\n        );\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.aSub) {\n      this.aSub?.unsubscribe();\n    }\n  }\n\n  get f() {\n    return this.form.controls;\n  }\n\n  onSubmit() {\n    this.form.disable();\n    this.aSub = this.auth.login(this.form.value).subscribe(\n      () => this.router.navigate(['/dashboard']),\n      (error) => {\n        MaterialService.toast(error.error.message);\n        this.form.enable();\n      }\n    );\n  }\n}\n","<div class=\"auth-block\">\n    <form class=\"card\" [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"card-content\">\n            <span class=\"card-title\">Введіть дані для авторизації</span>\n            <div class=\"input-field\">\n                <input formControlName=\"email\" id=\"email\" type=\"email\" [ngClass]=\"{'invalid': f.email.invalid && f.email.touched}\">\n                <label for=\"email\">Логін:</label>\n                <span class=\"helper-text red-text\" *ngIf=\"f.email.invalid && f.email.touched\">\n                    <span *ngIf=\"f.email.errors?.required\">Поле Логін не повинно бути порожнім</span>\n                <span *ngIf=\"f.email.errors?.minlength\n                    && f.email.errors?.minlength.requiredLength\">\n                        Логін повинен містити більш {{f.email.errors?.minlength.requiredLength}} символів.\n                        Ви ввели {{f.email.errors?.minlength.actualLength}} символи(ів)\n                    </span>\n                </span>\n            </div>\n            <div class=\"input-field\">\n                <input formControlName=\"password\" id=\"password\" type=\"password\" [ngClass]=\"{'invalid': f.password.invalid && f.password.touched}\">\n                <label for=\"password\">Пароль:</label>\n                <span class=\"helper-text red-text\" *ngIf=\"f.password.invalid && f.password.touched\">\n                    <span *ngIf=\"f.password.errors?.required\">Поле пароля не повинно бути порожнім</span>\n                <span *ngIf=\"f.password.errors?.minlength\n                     && f.password.errors?.minlength.requiredLength\">\n                        Пароль повинен містити більш{{f.password.errors?.minlength.requiredLength}} символів.\n                        Ви ввели {{f.password.errors?.minlength.actualLength}} символи(ів)\n                    </span>\n                </span>\n            </div>\n        </div>\n        <div class=\"card-action\">\n            <button type=\"submit\" class=\"modal-action btn waves-effect\" [disabled]=\"form.invalid || form.disabled\">Увійти</button>\n        </div>\n    </form>\n</div>","import { ElementRef } from '@angular/core';\n\ndeclare var M: any;\n\nexport interface MaterialInstance {\n  open(): void;\n  close(): void;\n  destroy(): void;\n}\n\nexport interface MaterialDatepicker extends MaterialInstance {\n  date?: Date;\n}\n\nexport class MaterialService {\n  static toast(message: string) {\n    M.toast({ html: message });\n  }\n\n  static initializeFloatingButton(ref: ElementRef) {\n    M.FloatingActionButton.init(ref.nativeElement);\n  }\n\n  static initializeDropdownButton(ref: ElementRef): MaterialInstance {\n    return M.Dropdown.init(ref.nativeElement);\n  }\n\n  static updateTextInputs() {\n    M.updateTextFields();\n  }\n\n  static initModal(ref: ElementRef): MaterialInstance {\n    return M.Modal.init(ref.nativeElement);\n  }\n\n  static initTooltip(ref: ElementRef): MaterialInstance {\n    return M.Tooltip.init(ref.nativeElement);\n  }\n\n  static initSidenav(ref: ElementRef): MaterialInstance {\n    return M.Sidenav.init(ref.nativeElement);\n  }\n\n  static initSelect(ref: ElementRef) {\n    M.FormSelect.init(ref.nativeElement);\n  }\n\n  static initDatepicker(\n    ref: ElementRef,\n    onClose: () => void\n  ): MaterialDatepicker {\n    return M.Datepicker.init(ref.nativeElement, {\n      format: 'dd.mm.yyyy',\n      showClearBtn: true,\n      onClose,\n    });\n  }\n}\n","import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewChild\n} from '@angular/core';\n\nimport {\n  MaterialInstance,\n  MaterialService\n} from 'src/app/admin/shared/classes/material.service';\nimport { Position } from 'src/app/admin/shared/interfaces';\nimport {\n  CategoriesService\n} from 'src/app/admin/shared/services/categories.service';\nimport { OrderService } from 'src/app/admin/shared/services/order.service';\nimport {\n  PositionsService\n} from 'src/app/admin/shared/services/positions.service';\n\n@Component({\n  selector: 'app-positions-form',\n  templateUrl: './positions-form.component.html',\n  styleUrls: ['./positions-form.component.css'],\n})\nexport class PositionsFormComponent\n  implements OnInit, OnDestroy, AfterViewInit\n{\n  @Input('categoryId') categoryId: string | undefined;\n  @ViewChild('modal') modalRef: ElementRef | undefined;\n  @ViewChild('quantityInput') quantityInput: ElementRef | undefined;\n\n  modal: MaterialInstance | undefined;\n  positions: Position[] = [];\n  sortedPositions: Position[] = [];\n  positionId: any = null;\n  loading = false;\n  totalQuantity = 0;\n  p: number = 1;\n  categoryName = '';\n\n  constructor(\n    private positionsService: PositionsService,\n    public orderService: OrderService,\n    private categoriesService: CategoriesService\n  ) {}\n\n  ngOnInit(): void {\n    this.loading = true;\n    this.categoryName = this.categoriesService.categoryName;\n    this.positionsService.fetch(this.categoryId).subscribe((positions) => {\n      this.positions = positions;\n    });\n    this.loading = false;\n  }\n\n  ngOnDestroy() {\n    this.modal?.destroy();\n  }\n\n  ngAfterViewInit() {\n    this.modal = MaterialService.initModal(this.modalRef!);\n  }\n\n  open() {\n    this.modal?.open();\n  }\n\n  onCancel() {\n    this.modal?.close();\n  }\n\n  onSelectPosition(position: Position) {\n    this.positionId = position._id;\n    this.positions.map((position) => {\n      position.orderQuantity = 1;\n      return position;\n    });\n  }\n\n  addToCart(position: Position) {\n    this.orderService.addToCart(position);\n    // this.totalQuantity = this.order.totalQuantity;\n    MaterialService.toast(`Товар додано до кошика!`);\n    this.modal?.close();\n  }\n}\n","<div class=\"center-align mb4 mt0 blue-text\">\n    <span class=\"category\">{{categoryName}}</span>\n</div>\n\n<div class=\"card-width row\" *ngIf=\"!loading; else loader\">\n    <div *ngFor=\"let position of positions | paginate: {itemsPerPage: 4,currentPage: p};\" class=\"card col s12 m6 l4\">\n        <div class=\"card-image waves-effect waves-block waves-light mb0\">\n            <img class=\"img activator center-block\" src={{position.imageSrc}}>\n        </div>\n        <div class=\"card-content\">\n            <hr class=\"hr1\">\n            <div class=\"card-title activator grey-text text-darken-4\">\n                <p class=\"name\" [title]=\"position.name\">{{position.name}}</p>\n                <p></p>\n            </div>\n            <hr class=\"hr1\">\n            <div class=\"cost center mb4\">{{position.cost}} грн</div>\n            <div *ngIf=\"position.quantity\" class=\"availability green-text center mt4\">в наявності</div>\n            <div *ngIf=\"!position.quantity\" class=\"availability blue-text center mt4\">очікується</div>\n        </div>\n        <div class=\"card-action mt0 center-align\" (click)=\"onSelectPosition(position)\">\n            <button class=\"add waves-effect waves-light btn \" (click)=\"open()\" [disabled]=\"!position.quantity\"><i\n                    class=\"addIcon material-icons \">shopping_cart</i></button>\n        </div>\n        <div class=\"card-reveal\">\n            <span class=\"card-title text-size grey lighten-5\">{{position.name}}<i\n                    class=\"material-icons right\">close</i></span>\n            <span class=\"description\">{{position.description}}</span>\n        </div>\n    </div>\n</div>\n<div class=\"col s12\">\n    <pagination-controls (pageChange)=\"p = $event\" previousLabel=\"\" nextLabel=\"\">\n    </pagination-controls>\n</div>\n<ng-template #loader>\n    <app-loader></app-loader>\n</ng-template>\n\n\n<div class=\"modal\" #modal>\n    <div *ngFor=\"let position of positions\">\n        <div *ngIf=\"position._id == positionId\">\n            <div class=\"modal-content\">\n                <span>Найменування товару: {{position.name}}</span>\n                <span class=\"right\">Ціна: {{position.cost}} UAH</span>\n                <input #quantityInput id=\"pos-quantity\" type=\"number\" [(ngModel)]=\"position.orderQuantity\">\n                <label for=\"pos-quantity\">Кількість</label>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" (click)=\"onCancel()\" class=\"modal-action waves-effect waves-black btn-flat\">\n                    Скасувати\n                </button>\n                <button class=\"modal-action btn waves-effect btn-small\" type=\"submit\" (click)=\"addToCart(position)\" [disabled]=\"!position.orderQuantity\">\n                    Додати в кошик\n                </button>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport {\n  RouterModule,\n  Routes\n} from '@angular/router';\n\nimport { CartPageComponent } from './cart-page/cart-page.component';\nimport {\n  OrderFormComponent\n} from './cart-page/order-form/order-form.component';\nimport {\n  CategoriesFormComponent\n} from './categories-page/categories-form/categories-form.component';\nimport {\n  CategoriesPageComponent\n} from './categories-page/categories-page.component';\nimport {\n  DashboardPageComponent\n} from './dashboard-page/dashboard-page.component';\nimport { LoginPageComponent } from './login-page/login-page.component';\nimport { RegisterPageComponent } from './register-page/register-page.component';\nimport { AuthclientGuard } from './shared/classes/authclient.guard';\nimport {\n  SiteLayoutComponent\n} from './shared/layouts/site-layout/site-layout.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SiteLayoutComponent,\n    children: [\n      { path: '', redirectTo: '/category', pathMatch: 'full' },\n      { path: 'category', component: CategoriesPageComponent },\n      { path: 'category/:id', component: CategoriesFormComponent },\n      { path: 'cart', component: CartPageComponent },\n      { path: 'login', component: LoginPageComponent },\n      {\n        path: 'dashboard',\n        canActivate: [AuthclientGuard],\n        component: DashboardPageComponent,\n      },\n      { path: 'register', component: RegisterPageComponent },\n      { path: 'order', component: OrderFormComponent },\n    ],\n  },\n  {\n    path: 'admin',\n    loadChildren: () =>\n      import('./admin/admin.module').then((m) => m.AdminModule),\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer-form',\n  templateUrl: './footer-form.component.html',\n  styleUrls: ['./footer-form.component.css']\n})\nexport class FooterFormComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer class=\"page-footer grey lighten-3 \">\n    <div class=\"container \">\n        <div class=\"row \">\n            <div class=\"col l6 s12\">\n                <h5 class=\"blue-text\">Про нас</h5>\n                <!-- <p class=\"grey-text text-lighten-4\">You can use rows and columns here to organize your footer content.</p> -->\n            </div>\n            <div class=\"col l4 offset-l2 s12\">\n                <h5 class=\"blue-text\">Контакти</h5>\n                <!-- <ul>\n                    <li><a class=\"blue-text text-lighten-3\" href=\"#!\">Link 1</a></li>\n                </ul> -->\n            </div>\n        </div>\n    </div>\n    <div class=\"footer-copyright\">\n        <div class=\"container white-text\">\n            © 2020 AcaCompany\n            <a class=\"white-text text-lighten-4 right\" href=\"#!\">FB</a>\n        </div>\n    </div>\n</footer>","import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  OnDestroy,\n  OnInit,\n  ViewChild\n} from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\nimport {\n  MaterialInstance,\n  MaterialService\n} from '../admin/shared/classes/material.service';\nimport { Category } from '../admin/shared/interfaces';\nimport { CategoriesService } from '../admin/shared/services/categories.service';\nimport { OrderService } from '../admin/shared/services/order.service';\n\n@Component({\n  selector: 'app-navbar-form',\n  templateUrl: './navbar-form.component.html',\n  styleUrls: ['./navbar-form.component.css'],\n})\nexport class NavbarFormComponent implements OnInit, OnDestroy, AfterViewInit {\n  @ViewChild('sidenav') sidenavRef: ElementRef | undefined;\n  categories$: Observable<Category[]> | undefined;\n  category!: Category;\n\n  sidenav: MaterialInstance | undefined;\n\n  constructor(\n    public order: OrderService,\n    private categoriesService: CategoriesService\n  ) {}\n\n  ngOnInit(): void {\n    this.categories$ = this.categoriesService.fetch();\n  }\n\n  ngOnDestroy() {\n    this.sidenav?.destroy();\n  }\n\n  ngAfterViewInit() {\n    this.sidenav = MaterialService.initSidenav(this.sidenavRef!);\n  }\n\n  open() {\n    this.sidenav?.open();\n  }\n\n  onCancel() {\n    this.sidenav?.close();\n  }\n\n  get total(): number {\n    let totalQuantity = JSON.parse(\n      localStorage.getItem('totalQuantity') || '0'\n    );\n    return totalQuantity;\n  }\n}\n","<nav class=\"nav-fixed\">\n    <div class=\"nav-wrapper  grey lighten-4\">\n        <a routerLink=\"/\" class=\"brand-logo blue-text left\"><i class=\"material-icons\">home</i>Shop</a>\n        <a data-target=\"slide-out\" class=\"sidenav-trigger\"><i class=\"menu material-icons blue-text\">menu</i></a>\n        <ul id=\"nav-mobile\" class=\"right blue-grey-text \">\n            <li>\n                <div class=\"phones\">\n                    <div class=\"phone \">+380668888888</div>\n                    <div class=\"phone \">+380689999999</div>\n                </div>\n            </li>\n            <li>\n                <a *ngIf=\"!total\">\n                    <i class=\"material-icons cart\">shopping_cart</i>\n                </a>\n            </li>\n            <li>\n                <a *ngIf=\"total\" routerLink=\"/cart\">\n                    <i class=\"material-icons cart\">shopping_cart</i>\n                </a>\n            </li>\n            <li *ngIf=\"total\">\n                <span class=\"badge tiny\" data-badge-caption=\"\">{{total}}</span>\n            </li>\n\n            <li routerLinkActive=\"active\">\n                <a class=\"auth bold blue-text\" routerLink=\"login\">Вхід</a>\n            </li>\n            <li routerLinkActive=\"active\">\n                <a class=\"auth right bold  blue-text\" routerLink=\"register\">Реєстрація</a>\n            </li>\n        </ul>\n    </div>\n</nav>\n\n\n<ul class=\"sidenav\" id=\"slide-out\" #sidenav>\n    <div *ngIf=\"categories$ | async as categories; else loader\">\n        <li>\n            <div class=\"header1 blue-text bold\">Категорії товарів</div>\n        </li>\n        <hr class=\"hr1\">\n        <li class=\"bold\" *ngFor=\"let category of categories\" routerLinkActive=\"active\" (click)=\"onCancel()\">\n            <a [routerLink]=\"['/category', category._id]\" class=\"waves-effect waves-orange\">{{category.name}}\n                <a class=\" black-text secondary-content\">\n                    <i class=\"name material-icons\">keyboard_arrow_right</i></a>\n            </a>\n        </li>\n        <li class=\"bold\">\n            <a class=\"promotions waves-effect waves-orange\">Акції\n                <a class=\"promotions secondary-content\">\n                    <i class=\"name material-icons\">keyboard_arrow_right</i></a>\n            </a>\n        </li>\n    </div>\n</ul>\n<ng-template #loader>\n    <app-loader></app-loader>\n</ng-template>","import 'materialize-css/dist/js/materialize';\n\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}